{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"pdf-container\"\n};\nconst _hoisted_2 = {\n  class: \"pdf-viewer\",\n  ref: \"leftViewer\"\n};\nconst _hoisted_3 = {\n  key: 0,\n  class: \"loading\"\n};\nconst _hoisted_4 = {\n  class: \"pdf-viewer\",\n  ref: \"rightViewer\"\n};\nconst _hoisted_5 = {\n  key: 0,\n  class: \"loading\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_vue_pdf_embed = _resolveComponent(\"vue-pdf-embed\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createCommentVNode(\" 左侧PDF \"), _createElementVNode(\"div\", _hoisted_2, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.leftVisiblePages, page => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: 'left-' + page\n    }, [_createVNode(_component_vue_pdf_embed, {\n      source: $setup.leftPdfSource,\n      page: page,\n      onRendered: _cache[0] || (_cache[0] = $event => $setup.onPageRendered('left')),\n      ref_for: true,\n      ref: \"leftPdfPages\"\n    }, null, 8 /* PROPS */, [\"source\", \"page\"])]);\n  }), 128 /* KEYED_FRAGMENT */)), $setup.leftLoading ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, \"左侧加载中...\")) : _createCommentVNode(\"v-if\", true)], 512 /* NEED_PATCH */), _createCommentVNode(\" 右侧PDF \"), _createElementVNode(\"div\", _hoisted_4, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.rightVisiblePages, page => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: 'right-' + page\n    }, [_createVNode(_component_vue_pdf_embed, {\n      source: $setup.rightPdfSource,\n      page: page,\n      onRendered: _cache[1] || (_cache[1] = $event => $setup.onPageRendered('right')),\n      ref_for: true,\n      ref: \"rightPdfPages\"\n    }, null, 8 /* PROPS */, [\"source\", \"page\"])]);\n  }), 128 /* KEYED_FRAGMENT */)), $setup.rightLoading ? (_openBlock(), _createElementBlock(\"div\", _hoisted_5, \"右侧加载中...\")) : _createCommentVNode(\"v-if\", true)], 512 /* NEED_PATCH */)]);\n}","map":{"version":3,"names":["class","ref","key","_createElementBlock","_hoisted_1","_createCommentVNode","_createElementVNode","_hoisted_2","_Fragment","_renderList","$setup","leftVisiblePages","page","_createVNode","_component_vue_pdf_embed","source","leftPdfSource","onRendered","_cache","$event","onPageRendered","ref_for","leftLoading","_hoisted_3","_hoisted_4","rightVisiblePages","rightPdfSource","rightLoading","_hoisted_5"],"sources":["D:\\Study\\Code\\AICloud\\front\\src\\components\\PDFViewer.vue"],"sourcesContent":["<template>\r\n  <div class=\"pdf-container\">\r\n    <!-- 左侧PDF -->\r\n    <div class=\"pdf-viewer\" ref=\"leftViewer\">\r\n      <div v-for=\"page in leftVisiblePages\" :key=\"'left-'+page\">\r\n        <vue-pdf-embed\r\n          :source=\"leftPdfSource\"\r\n          :page=\"page\"\r\n          @rendered=\"onPageRendered('left')\"\r\n          ref=\"leftPdfPages\"\r\n        />\r\n      </div>\r\n      <div v-if=\"leftLoading\" class=\"loading\">左侧加载中...</div>\r\n    </div>\r\n\r\n    <!-- 右侧PDF -->\r\n    <div class=\"pdf-viewer\" ref=\"rightViewer\">\r\n      <div v-for=\"page in rightVisiblePages\" :key=\"'right-'+page\">\r\n        <vue-pdf-embed\r\n          :source=\"rightPdfSource\"\r\n          :page=\"page\"\r\n          @rendered=\"onPageRendered('right')\"\r\n          ref=\"rightPdfPages\"\r\n        />\r\n      </div>\r\n      <div v-if=\"rightLoading\" class=\"loading\">右侧加载中...</div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport VuePdfEmbed from 'vue-pdf-embed'\r\nimport { ref, onMounted, onUnmounted } from 'vue'\r\n\r\nexport default {\r\n  components: {\r\n    VuePdfEmbed\r\n  },\r\n  setup() {\r\n    // PDF源文件\r\n    const leftPdfSource = ref('111.pdf')\r\n    const rightPdfSource = ref('111_qs9p2cE-mono.pdf')\r\n\r\n    // 页面状态\r\n    const leftVisiblePages = ref([1, 2, 3])\r\n    const rightVisiblePages = ref([1, 2, 3])\r\n    const leftLoading = ref(false)\r\n    const rightLoading = ref(false)\r\n    const lastLeftPage = ref(3)\r\n    const lastRightPage = ref(3)\r\n    const totalPages = ref({\r\n      left: 10, // 假设左侧PDF共10页\r\n      right: 8  // 假设右侧PDF共8页\r\n    })\r\n\r\n    // DOM引用\r\n    const leftViewer = ref(null)\r\n    const rightViewer = ref(null)\r\n    const leftPdfPages = ref([])\r\n    const rightPdfPages = ref([])\r\n\r\n    // 同步滚动处理\r\n    let isSyncingScroll = false\r\n    const syncScroll = (source, target) => {\r\n      if (isSyncingScroll) return\r\n      isSyncingScroll = true\r\n\r\n      const sourceEl = source.value\r\n      const targetEl = target.value\r\n\r\n      // 计算滚动比例\r\n      const sourceScrollRatio = sourceEl.scrollTop / (sourceEl.scrollHeight - sourceEl.clientHeight)\r\n      const targetScrollTo = sourceScrollRatio * (targetEl.scrollHeight - targetEl.clientHeight)\r\n\r\n      targetEl.scrollTo({\r\n        top: targetScrollTo,\r\n        behavior: 'auto'\r\n      })\r\n\r\n      setTimeout(() => {\r\n        isSyncingScroll = false\r\n      }, 100)\r\n    }\r\n\r\n    // 滚动事件处理\r\n    const handleLeftScroll = () => syncScroll(leftViewer, rightViewer)\r\n    const handleRightScroll = () => syncScroll(rightViewer, leftViewer)\r\n\r\n    // 加载更多页面\r\n    const loadMorePages = (side) => {\r\n      const isLeft = side === 'left'\r\n      const lastPage = isLeft ? lastLeftPage : lastRightPage\r\n      const total = isLeft ? totalPages.value.left : totalPages.value.right\r\n\r\n      if ((isLeft ? leftLoading : rightLoading).value || lastPage.value >= total) return\r\n\r\n      isLeft ? leftLoading.value = true : rightLoading.value = true\r\n      const newPages = []\r\n      const pagesToLoad = Math.min(2, total - lastPage.value)\r\n\r\n      for (let i = 1; i <= pagesToLoad; i++) {\r\n        newPages.push(lastPage.value + i)\r\n      }\r\n\r\n      if (isLeft) {\r\n        leftVisiblePages.value = [...leftVisiblePages.value, ...newPages]\r\n      } else {\r\n        rightVisiblePages.value = [...rightVisiblePages.value, ...newPages]\r\n      }\r\n\r\n      lastPage.value += pagesToLoad\r\n      setTimeout(() => {\r\n        isLeft ? leftLoading.value = false : rightLoading.value = false\r\n      }, 300)\r\n    }\r\n\r\n    // 检查是否需要加载更多\r\n    const checkLoadMore = () => {\r\n      const leftScrollPos = leftViewer.value.scrollTop + leftViewer.value.clientHeight\r\n      const leftHeight = leftViewer.value.scrollHeight\r\n\r\n      const rightScrollPos = rightViewer.value.scrollTop + rightViewer.value.clientHeight\r\n      const rightHeight = rightViewer.value.scrollHeight\r\n\r\n      if (leftHeight - leftScrollPos < 500) loadMorePages('left')\r\n      if (rightHeight - rightScrollPos < 500) loadMorePages('right')\r\n    }\r\n\r\n    // 页面渲染回调\r\n    const onPageRendered = (side) => {\r\n      // 可以在这里添加页面渲染后的逻辑\r\n      console.log(`${side} PDF 页面渲染完成`)\r\n    }\r\n\r\n    onMounted(() => {\r\n      leftViewer.value.addEventListener('scroll', handleLeftScroll)\r\n      rightViewer.value.addEventListener('scroll', handleRightScroll)\r\n\r\n      // 添加滚动检查定时器\r\n      const scrollCheckInterval = setInterval(checkLoadMore, 500)\r\n\r\n      onUnmounted(() => {\r\n        clearInterval(scrollCheckInterval)\r\n        leftViewer.value?.removeEventListener('scroll', handleLeftScroll)\r\n        rightViewer.value?.removeEventListener('scroll', handleRightScroll)\r\n      })\r\n    })\r\n\r\n    return {\r\n      leftPdfSource,\r\n      rightPdfSource,\r\n      leftVisiblePages,\r\n      rightVisiblePages,\r\n      leftLoading,\r\n      rightLoading,\r\n      leftViewer,\r\n      rightViewer,\r\n      leftPdfPages,\r\n      rightPdfPages,\r\n      onPageRendered\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.pdf-container {\r\n  display: flex;\r\n  height: 100vh;\r\n  overflow: hidden;\r\n}\r\n\r\n.pdf-viewer {\r\n  flex: 1;\r\n  height: 100%;\r\n  overflow-y: auto;\r\n  padding: 20px;\r\n  box-sizing: border-box;\r\n  position: relative;\r\n}\r\n\r\n.pdf-viewer:first-child {\r\n  border-right: 1px solid #ddd;\r\n}\r\n\r\n.loading {\r\n  text-align: center;\r\n  padding: 20px;\r\n  color: #666;\r\n  background: #f5f5f5;\r\n  margin-top: 10px;\r\n  border-radius: 4px;\r\n}\r\n\r\n/* 确保PDF页面有间距 */\r\n.vue-pdf-embed {\r\n  margin-bottom: 20px;\r\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\r\n}\r\n</style>\r\n"],"mappings":";;EACOA,KAAK,EAAC;AAAe;;EAEnBA,KAAK,EAAC,YAAY;EAACC,GAAG,EAAC;;;EAHhCC,GAAA;EAY8BF,KAAK,EAAC;;;EAI3BA,KAAK,EAAC,YAAY;EAACC,GAAG,EAAC;;;EAhBhCC,GAAA;EAyB+BF,KAAK,EAAC;;;;uBAxBnCG,mBAAA,CA0BM,OA1BNC,UA0BM,GAzBJC,mBAAA,WAAc,EACdC,mBAAA,CAUM,OAVNC,UAUM,I,kBATJJ,mBAAA,CAOMK,SAAA,QAXZC,WAAA,CAI0BC,MAAA,CAAAC,gBAAgB,EAAxBC,IAAI;yBAAhBT,mBAAA,CAOM;MAPiCD,GAAG,YAAUU;QAClDC,YAAA,CAKEC,wBAAA;MAJCC,MAAM,EAAEL,MAAA,CAAAM,aAAa;MACrBJ,IAAI,EAAEA,IAAI;MACVK,UAAQ,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAET,MAAA,CAAAU,cAAc;MARnCC,OAAA;MASUpB,GAAG,EAAC;;kCAGGS,MAAA,CAAAY,WAAW,I,cAAtBnB,mBAAA,CAAsD,OAAtDoB,UAAsD,EAAd,UAAQ,KAZtDlB,mBAAA,e,yBAeIA,mBAAA,WAAc,EACdC,mBAAA,CAUM,OAVNkB,UAUM,I,kBATJrB,mBAAA,CAOMK,SAAA,QAxBZC,WAAA,CAiB0BC,MAAA,CAAAe,iBAAiB,EAAzBb,IAAI;yBAAhBT,mBAAA,CAOM;MAPkCD,GAAG,aAAWU;QACpDC,YAAA,CAKEC,wBAAA;MAJCC,MAAM,EAAEL,MAAA,CAAAgB,cAAc;MACtBd,IAAI,EAAEA,IAAI;MACVK,UAAQ,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAET,MAAA,CAAAU,cAAc;MArBnCC,OAAA;MAsBUpB,GAAG,EAAC;;kCAGGS,MAAA,CAAAiB,YAAY,I,cAAvBxB,mBAAA,CAAuD,OAAvDyB,UAAuD,EAAd,UAAQ,KAzBvDvB,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}