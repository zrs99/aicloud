{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"dual-pdf-container\"\n};\nconst _hoisted_2 = {\n  class: \"pdf-column\",\n  ref: \"leftPdf\"\n};\nconst _hoisted_3 = {\n  class: \"pdf-column\",\n  ref: \"rightPdf\"\n};\nconst _hoisted_4 = {\n  key: 0,\n  class: \"loading\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_vue_pdf_embed = _resolveComponent(\"vue-pdf-embed\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.leftVisiblePages, page => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: 'left-' + page\n    }, [_createVNode(_component_vue_pdf_embed, {\n      source: $setup.leftPdfSource,\n      page: page,\n      onRendered: $event => $setup.onPageRendered('left', page)\n    }, null, 8 /* PROPS */, [\"source\", \"page\", \"onRendered\"])]);\n  }), 128 /* KEYED_FRAGMENT */))], 512 /* NEED_PATCH */), _createElementVNode(\"div\", _hoisted_3, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.rightVisiblePages, page => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: 'right-' + page\n    }, [_createVNode(_component_vue_pdf_embed, {\n      source: $setup.rightPdfSource,\n      page: page,\n      onRendered: $event => $setup.onPageRendered('right', page)\n    }, null, 8 /* PROPS */, [\"source\", \"page\", \"onRendered\"])]);\n  }), 128 /* KEYED_FRAGMENT */))], 512 /* NEED_PATCH */), $setup.loading ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, \"加载中...\")) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["class","ref","key","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_Fragment","_renderList","$setup","leftVisiblePages","page","_createVNode","_component_vue_pdf_embed","source","leftPdfSource","onRendered","$event","onPageRendered","_hoisted_3","rightVisiblePages","rightPdfSource","loading","_hoisted_4","_createCommentVNode"],"sources":["D:\\Study\\Code\\AICloud\\front\\src\\components\\PDFViewer.vue"],"sourcesContent":["<template>\r\n  <div class=\"dual-pdf-container\">\r\n    <div class=\"pdf-column\" ref=\"leftPdf\">\r\n      <div v-for=\"page in leftVisiblePages\" :key=\"'left-' + page\">\r\n        <vue-pdf-embed\r\n          :source=\"leftPdfSource\"\r\n          :page=\"page\"\r\n          @rendered=\"onPageRendered('left', page)\"\r\n        />\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"pdf-column\" ref=\"rightPdf\">\r\n      <div v-for=\"page in rightVisiblePages\" :key=\"'right-' + page\">\r\n        <vue-pdf-embed\r\n          :source=\"rightPdfSource\"\r\n          :page=\"page\"\r\n          @rendered=\"onPageRendered('right', page)\"\r\n        />\r\n      </div>\r\n    </div>\r\n\r\n    <div v-if=\"loading\" class=\"loading\">加载中...</div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport VuePdfEmbed from 'vue-pdf-embed'\r\nimport { ref, onMounted, onUnmounted } from 'vue'\r\n\r\nexport default {\r\n  components: {\r\n    VuePdfEmbed\r\n  },\r\n  setup() {\r\n    // 左侧PDF配置\r\n    const leftPdfSource = ref('111.pdf')\r\n    const leftTotalPages = ref(0)\r\n    const leftVisiblePages = ref([1, 2, 3])\r\n    const leftLastPageLoaded = ref(3)\r\n\r\n    // 右侧PDF配置\r\n    const rightPdfSource = ref('111_qs9p2cE-mono.pdf')\r\n    const rightTotalPages = ref(0)\r\n    const rightVisiblePages = ref([1, 2, 3])\r\n    const rightLastPageLoaded = ref(3)\r\n\r\n    const loading = ref(false)\r\n    const isScrolling = ref(false)\r\n    const scrollSyncTimeout = ref(null)\r\n\r\n    // 加载更多页面\r\n    const loadMorePages = (side) => {\r\n      if (loading.value) return\r\n\r\n      loading.value = true\r\n\r\n      if (side === 'left') {\r\n        if (leftLastPageLoaded.value >= leftTotalPages.value) {\r\n          loading.value = false\r\n          return\r\n        }\r\n\r\n        const newPages = []\r\n        const pagesToLoad = Math.min(2, leftTotalPages.value - leftLastPageLoaded.value)\r\n\r\n        for (let i = 1; i <= pagesToLoad; i++) {\r\n          newPages.push(leftLastPageLoaded.value + i)\r\n        }\r\n\r\n        leftVisiblePages.value = [...leftVisiblePages.value, ...newPages]\r\n        leftLastPageLoaded.value += pagesToLoad\r\n      } else {\r\n        if (rightLastPageLoaded.value >= rightTotalPages.value) {\r\n          loading.value = false\r\n          return\r\n        }\r\n\r\n        const newPages = []\r\n        const pagesToLoad = Math.min(2, rightTotalPages.value - rightLastPageLoaded.value)\r\n\r\n        for (let i = 1; i <= pagesToLoad; i++) {\r\n          newPages.push(rightLastPageLoaded.value + i)\r\n        }\r\n\r\n        rightVisiblePages.value = [...rightVisiblePages.value, ...newPages]\r\n        rightLastPageLoaded.value += pagesToLoad\r\n      }\r\n\r\n      loading.value = false\r\n    }\r\n\r\n    // 同步滚动处理\r\n    const handleScroll = (event) => {\r\n      if (isScrolling.value) return\r\n\r\n      isScrolling.value = true\r\n\r\n      // 清除之前的同步定时器\r\n      if (scrollSyncTimeout.value) {\r\n        clearTimeout(scrollSyncTimeout.value)\r\n      }\r\n\r\n      // 设置新的定时器\r\n      scrollSyncTimeout.value = setTimeout(() => {\r\n        isScrolling.value = false\r\n      }, 100)\r\n\r\n      const target = event.target\r\n      const otherSide = target.classList.contains('left-column') ? 'right' : 'left'\r\n      const otherElement = otherSide === 'right' ? rightPdf.value : leftPdf.value\r\n\r\n      // 计算并同步滚动位置\r\n      const scrollRatio = target.scrollTop / (target.scrollHeight - target.clientHeight)\r\n      const otherScrollTop = scrollRatio * (otherElement.scrollHeight - otherElement.clientHeight)\r\n\r\n      otherElement.scrollTop = otherScrollTop\r\n\r\n      // 检查是否需要加载更多页面\r\n      const scrollPosition = target.scrollTop + target.clientHeight\r\n      const containerHeight = target.scrollHeight\r\n\r\n      if (containerHeight - scrollPosition < 500) {\r\n        if (otherSide === 'left') {\r\n          loadMorePages('left')\r\n        } else {\r\n          loadMorePages('right')\r\n        }\r\n      }\r\n    }\r\n\r\n    const onPageRendered = (side, page) => {\r\n      console.log(`${side} PDF 第 ${page} 页渲染完成`)\r\n    }\r\n\r\n    onMounted(() => {\r\n      // 初始化PDF总页数（实际应用中应该通过API获取）\r\n      leftTotalPages.value = 10\r\n      rightTotalPages.value = 10\r\n\r\n      // 添加滚动事件监听\r\n      leftPdf.value.addEventListener('scroll', handleScroll)\r\n      rightPdf.value.addEventListener('scroll', handleScroll)\r\n\r\n      // 初始加载\r\n      loadMorePages('left')\r\n      loadMorePages('right')\r\n    })\r\n\r\n    onUnmounted(() => {\r\n      leftPdf.value.removeEventListener('scroll', handleScroll)\r\n      rightPdf.value.removeEventListener('scroll', handleScroll)\r\n\r\n      if (scrollSyncTimeout.value) {\r\n        clearTimeout(scrollSyncTimeout.value)\r\n      }\r\n    })\r\n\r\n    return {\r\n      leftPdfSource,\r\n      leftVisiblePages,\r\n      rightPdfSource,\r\n      rightVisiblePages,\r\n      loading,\r\n      onPageRendered,\r\n      leftPdf,\r\n      rightPdf\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n.dual-pdf-container {\r\n  display: flex;\r\n  width: 100%;\r\n  height: 100vh;\r\n  overflow: hidden;\r\n}\r\n\r\n.pdf-column {\r\n  flex: 1;\r\n  height: 100%;\r\n  overflow-y: auto;\r\n  padding: 20px;\r\n  box-sizing: border-box;\r\n}\r\n\r\n.pdf-column:first-child {\r\n  border-right: 1px solid #ccc;\r\n}\r\n\r\n.loading {\r\n  position: fixed;\r\n  bottom: 20px;\r\n  left: 50%;\r\n  transform: translateX(-50%);\r\n  background: rgba(0, 0, 0, 0.7);\r\n  color: white;\r\n  padding: 10px 20px;\r\n  border-radius: 4px;\r\n}\r\n\r\n/* PDF页面样式 */\r\n.vue-pdf-embed {\r\n  margin-bottom: 20px;\r\n  box-shadow: 0 0 5px rgba(0, 0, 0, 0.2);\r\n}\r\n</style>"],"mappings":";;EACOA,KAAK,EAAC;AAAoB;;EACxBA,KAAK,EAAC,YAAY;EAACC,GAAG,EAAC;;;EAUvBD,KAAK,EAAC,YAAY;EAACC,GAAG,EAAC;;;EAZhCC,GAAA;EAsBwBF,KAAK,EAAC;;;;uBArB5BG,mBAAA,CAsBM,OAtBNC,UAsBM,GArBJC,mBAAA,CAQM,OARNC,UAQM,I,kBAPJH,mBAAA,CAMMI,SAAA,QATZC,WAAA,CAG0BC,MAAA,CAAAC,gBAAgB,EAAxBC,IAAI;yBAAhBR,mBAAA,CAMM;MANiCD,GAAG,YAAYS;QACpDC,YAAA,CAIEC,wBAAA;MAHCC,MAAM,EAAEL,MAAA,CAAAM,aAAa;MACrBJ,IAAI,EAAEA,IAAI;MACVK,UAAQ,EAAAC,MAAA,IAAER,MAAA,CAAAS,cAAc,SAASP,IAAI;;0DAK5CN,mBAAA,CAQM,OARNc,UAQM,I,kBAPJhB,mBAAA,CAMMI,SAAA,QAnBZC,WAAA,CAa0BC,MAAA,CAAAW,iBAAiB,EAAzBT,IAAI;yBAAhBR,mBAAA,CAMM;MANkCD,GAAG,aAAaS;QACtDC,YAAA,CAIEC,wBAAA;MAHCC,MAAM,EAAEL,MAAA,CAAAY,cAAc;MACtBV,IAAI,EAAEA,IAAI;MACVK,UAAQ,EAAAC,MAAA,IAAER,MAAA,CAAAS,cAAc,UAAUP,IAAI;;0DAKlCF,MAAA,CAAAa,OAAO,I,cAAlBnB,mBAAA,CAAgD,OAAhDoB,UAAgD,EAAZ,QAAM,KAtB9CC,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}