{"version":3,"file":"pdf.image_decoders.js","mappings":"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","sources":["webpack://pdfjs-dist/image_decoders/pdf.image_decoders/webpack/universalModuleDefinition","webpack://pdfjs-dist/image_decoders/pdf.image_decoders/src/shared/util.js","webpack://pdfjs-dist/image_decoders/pdf.image_decoders/src/shared/compatibility.js","webpack://pdfjs-dist/image_decoders/pdf.image_decoders/src/shared/is_node.js","webpack://pdfjs-dist/image_decoders/pdf.image_decoders/node_modules/core-js/es/global-this.js","webpack://pdfjs-dist/image_decoders/pdf.image_decoders/node_modules/core-js/modules/es.global-this.js","webpack://pdfjs-dist/image_decoders/pdf.image_decoders/node_modules/core-js/internals/export.js","webpack://pdfjs-dist/image_decoders/pdf.image_decoders/node_modules/core-js/internals/global.js","webpack://pdfjs-dist/image_decoders/pdf.image_decoders/node_modules/core-js/internals/object-get-own-property-descriptor.js","webpack://pdfjs-dist/image_decoders/pdf.image_decoders/node_modules/core-js/internals/descriptors.js","webpack://pdfjs-dist/image_decoders/pdf.image_decoders/node_modules/core-js/internals/fails.js","webpack://pdfjs-dist/image_decoders/pdf.image_decoders/node_modules/core-js/internals/object-property-is-enumerable.js","webpack://pdfjs-dist/image_decoders/pdf.image_decoders/node_modules/core-js/internals/create-property-descriptor.js","webpack://pdfjs-dist/image_decoders/pdf.image_decoders/node_modules/core-js/internals/to-indexed-object.js","webpack://pdfjs-dist/image_decoders/pdf.image_decoders/node_modules/core-js/internals/indexed-object.js","webpack://pdfjs-dist/image_decoders/pdf.image_decoders/node_modules/core-js/internals/classof-raw.js","webpack://pdfjs-dist/image_decoders/pdf.image_decoders/node_modules/core-js/internals/require-object-coercible.js","webpack://pdfjs-dist/image_decoders/pdf.image_decoders/node_modules/core-js/internals/to-property-key.js","webpack://pdfjs-dist/image_decoders/pdf.image_decoders/node_modules/core-js/internals/to-primitive.js","webpack://pdfjs-dist/image_decoders/pdf.image_decoders/node_modules/core-js/internals/is-object.js","webpack://pdfjs-dist/image_decoders/pdf.image_decoders/node_modules/core-js/internals/is-symbol.js","webpack://pdfjs-dist/image_decoders/pdf.image_decoders/node_modules/core-js/internals/get-built-in.js","webpack://pdfjs-dist/image_decoders/pdf.image_decoders/node_modules/core-js/internals/use-symbol-as-uid.js","webpack://pdfjs-dist/image_decoders/pdf.image_decoders/node_modules/core-js/internals/native-symbol.js","webpack://pdfjs-dist/image_decoders/pdf.image_decoders/node_modules/core-js/internals/engine-v8-version.js","webpack://pdfjs-dist/image_decoders/pdf.image_decoders/node_modules/core-js/internals/engine-user-agent.js","webpack://pdfjs-dist/image_decoders/pdf.image_decoders/node_modules/core-js/internals/ordinary-to-primitive.js","webpack://pdfjs-dist/image_decoders/pdf.image_decoders/node_modules/core-js/internals/well-known-symbol.js","webpack://pdfjs-dist/image_decoders/pdf.image_decoders/node_modules/core-js/internals/shared.js","webpack://pdfjs-dist/image_decoders/pdf.image_decoders/node_modules/core-js/internals/is-pure.js","webpack://pdfjs-dist/image_decoders/pdf.image_decoders/node_modules/core-js/internals/shared-store.js","webpack://pdfjs-dist/image_decoders/pdf.image_decoders/node_modules/core-js/internals/set-global.js","webpack://pdfjs-dist/image_decoders/pdf.image_decoders/node_modules/core-js/internals/has.js","webpack://pdfjs-dist/image_decoders/pdf.image_decoders/node_modules/core-js/internals/to-object.js","webpack://pdfjs-dist/image_decoders/pdf.image_decoders/node_modules/core-js/internals/uid.js","webpack://pdfjs-dist/image_decoders/pdf.image_decoders/node_modules/core-js/internals/ie8-dom-define.js","webpack://pdfjs-dist/image_decoders/pdf.image_decoders/node_modules/core-js/internals/document-create-element.js","webpack://pdfjs-dist/image_decoders/pdf.image_decoders/node_modules/core-js/internals/create-non-enumerable-property.js","webpack://pdfjs-dist/image_decoders/pdf.image_decoders/node_modules/core-js/internals/object-define-property.js","webpack://pdfjs-dist/image_decoders/pdf.image_decoders/node_modules/core-js/internals/an-object.js","webpack://pdfjs-dist/image_decoders/pdf.image_decoders/node_modules/core-js/internals/redefine.js","webpack://pdfjs-dist/image_decoders/pdf.image_decoders/node_modules/core-js/internals/inspect-source.js","webpack://pdfjs-dist/image_decoders/pdf.image_decoders/node_modules/core-js/internals/internal-state.js","webpack://pdfjs-dist/image_decoders/pdf.image_decoders/node_modules/core-js/internals/native-weak-map.js","webpack://pdfjs-dist/image_decoders/pdf.image_decoders/node_modules/core-js/internals/shared-key.js","webpack://pdfjs-dist/image_decoders/pdf.image_decoders/node_modules/core-js/internals/hidden-keys.js","webpack://pdfjs-dist/image_decoders/pdf.image_decoders/node_modules/core-js/internals/copy-constructor-properties.js","webpack://pdfjs-dist/image_decoders/pdf.image_decoders/node_modules/core-js/internals/own-keys.js","webpack://pdfjs-dist/image_decoders/pdf.image_decoders/node_modules/core-js/internals/object-get-own-property-names.js","webpack://pdfjs-dist/image_decoders/pdf.image_decoders/node_modules/core-js/internals/object-keys-internal.js","webpack://pdfjs-dist/image_decoders/pdf.image_decoders/node_modules/core-js/internals/array-includes.js","webpack://pdfjs-dist/image_decoders/pdf.image_decoders/node_modules/core-js/internals/to-length.js","webpack://pdfjs-dist/image_decoders/pdf.image_decoders/node_modules/core-js/internals/to-integer.js","webpack://pdfjs-dist/image_decoders/pdf.image_decoders/node_modules/core-js/internals/to-absolute-index.js","webpack://pdfjs-dist/image_decoders/pdf.image_decoders/node_modules/core-js/internals/enum-bug-keys.js","webpack://pdfjs-dist/image_decoders/pdf.image_decoders/node_modules/core-js/internals/object-get-own-property-symbols.js","webpack://pdfjs-dist/image_decoders/pdf.image_decoders/node_modules/core-js/internals/is-forced.js","webpack://pdfjs-dist/image_decoders/pdf.image_decoders/node_modules/dommatrix/dist/dommatrix.js","webpack://pdfjs-dist/image_decoders/pdf.image_decoders/node_modules/core-js/es/object/from-entries.js","webpack://pdfjs-dist/image_decoders/pdf.image_decoders/node_modules/core-js/modules/es.array.iterator.js","webpack://pdfjs-dist/image_decoders/pdf.image_decoders/node_modules/core-js/internals/add-to-unscopables.js","webpack://pdfjs-dist/image_decoders/pdf.image_decoders/node_modules/core-js/internals/object-create.js","webpack://pdfjs-dist/image_decoders/pdf.image_decoders/node_modules/core-js/internals/object-define-properties.js","webpack://pdfjs-dist/image_decoders/pdf.image_decoders/node_modules/core-js/internals/object-keys.js","webpack://pdfjs-dist/image_decoders/pdf.image_decoders/node_modules/core-js/internals/html.js","webpack://pdfjs-dist/image_decoders/pdf.image_decoders/node_modules/core-js/internals/iterators.js","webpack://pdfjs-dist/image_decoders/pdf.image_decoders/node_modules/core-js/internals/define-iterator.js","webpack://pdfjs-dist/image_decoders/pdf.image_decoders/node_modules/core-js/internals/create-iterator-constructor.js","webpack://pdfjs-dist/image_decoders/pdf.image_decoders/node_modules/core-js/internals/iterators-core.js","webpack://pdfjs-dist/image_decoders/pdf.image_decoders/node_modules/core-js/internals/object-get-prototype-of.js","webpack://pdfjs-dist/image_decoders/pdf.image_decoders/node_modules/core-js/internals/correct-prototype-getter.js","webpack://pdfjs-dist/image_decoders/pdf.image_decoders/node_modules/core-js/internals/set-to-string-tag.js","webpack://pdfjs-dist/image_decoders/pdf.image_decoders/node_modules/core-js/internals/object-set-prototype-of.js","webpack://pdfjs-dist/image_decoders/pdf.image_decoders/node_modules/core-js/internals/a-possible-prototype.js","webpack://pdfjs-dist/image_decoders/pdf.image_decoders/node_modules/core-js/modules/es.object.from-entries.js","webpack://pdfjs-dist/image_decoders/pdf.image_decoders/node_modules/core-js/internals/iterate.js","webpack://pdfjs-dist/image_decoders/pdf.image_decoders/node_modules/core-js/internals/is-array-iterator-method.js","webpack://pdfjs-dist/image_decoders/pdf.image_decoders/node_modules/core-js/internals/function-bind-context.js","webpack://pdfjs-dist/image_decoders/pdf.image_decoders/node_modules/core-js/internals/a-function.js","webpack://pdfjs-dist/image_decoders/pdf.image_decoders/node_modules/core-js/internals/get-iterator.js","webpack://pdfjs-dist/image_decoders/pdf.image_decoders/node_modules/core-js/internals/get-iterator-method.js","webpack://pdfjs-dist/image_decoders/pdf.image_decoders/node_modules/core-js/internals/classof.js","webpack://pdfjs-dist/image_decoders/pdf.image_decoders/node_modules/core-js/internals/to-string-tag-support.js","webpack://pdfjs-dist/image_decoders/pdf.image_decoders/node_modules/core-js/internals/iterator-close.js","webpack://pdfjs-dist/image_decoders/pdf.image_decoders/node_modules/core-js/internals/create-property.js","webpack://pdfjs-dist/image_decoders/pdf.image_decoders/node_modules/core-js/internals/path.js","webpack://pdfjs-dist/image_decoders/pdf.image_decoders/src/core/jbig2.js","webpack://pdfjs-dist/image_decoders/pdf.image_decoders/src/core/core_utils.js","webpack://pdfjs-dist/image_decoders/pdf.image_decoders/src/core/primitives.js","webpack://pdfjs-dist/image_decoders/pdf.image_decoders/node_modules/@babel/runtime/regenerator/index.js","webpack://pdfjs-dist/image_decoders/pdf.image_decoders/node_modules/@babel/runtime/node_modules/regenerator-runtime/runtime.js","webpack://pdfjs-dist/image_decoders/pdf.image_decoders/src/core/base_stream.js","webpack://pdfjs-dist/image_decoders/pdf.image_decoders/src/core/arithmetic_decoder.js","webpack://pdfjs-dist/image_decoders/pdf.image_decoders/src/core/ccitt.js","webpack://pdfjs-dist/image_decoders/pdf.image_decoders/src/core/jpg.js","webpack://pdfjs-dist/image_decoders/pdf.image_decoders/src/core/jpx.js","webpack://pdfjs-dist/image_decoders/pdf.image_decoders/webpack/bootstrap","webpack://pdfjs-dist/image_decoders/pdf.image_decoders/webpack/runtime/node module decorator","webpack://pdfjs-dist/image_decoders/pdf.image_decoders/src/pdf.image_decoders.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"pdfjs-dist/image_decoders/pdf.image_decoders\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"pdfjs-dist/image_decoders/pdf.image_decoders\"] = factory();\n\telse\n\t\troot[\"pdfjs-dist/image_decoders/pdf.image_decoders\"] = factory();\n})(this, function() {\nreturn ","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport \"./compatibility.js\";\n\nconst IDENTITY_MATRIX = [1, 0, 0, 1, 0, 0];\nconst FONT_IDENTITY_MATRIX = [0.001, 0, 0, 0.001, 0, 0];\n\n/**\n * Refer to the `WorkerTransport.getRenderingIntent`-method in the API, to see\n * how these flags are being used:\n *  - ANY, DISPLAY, and PRINT are the normal rendering intents, note the\n *    `PDFPageProxy.{render, getOperatorList, getAnnotations}`-methods.\n *  - ANNOTATIONS_FORMS, ANNOTATIONS_STORAGE, ANNOTATIONS_DISABLE control which\n *    annotations are rendered onto the canvas (i.e. by being included in the\n *    operatorList), note the `PDFPageProxy.{render, getOperatorList}`-methods\n *    and their `annotationMode`-option.\n *  - OPLIST is used with the `PDFPageProxy.getOperatorList`-method, note the\n *    `OperatorList`-constructor (on the worker-thread).\n */\nconst RenderingIntentFlag = {\n  ANY: 0x01,\n  DISPLAY: 0x02,\n  PRINT: 0x04,\n  ANNOTATIONS_FORMS: 0x10,\n  ANNOTATIONS_STORAGE: 0x20,\n  ANNOTATIONS_DISABLE: 0x40,\n  OPLIST: 0x100,\n};\n\nconst AnnotationMode = {\n  DISABLE: 0,\n  ENABLE: 1,\n  ENABLE_FORMS: 2,\n  ENABLE_STORAGE: 3,\n};\n\n// Permission flags from Table 22, Section 7.6.3.2 of the PDF specification.\nconst PermissionFlag = {\n  PRINT: 0x04,\n  MODIFY_CONTENTS: 0x08,\n  COPY: 0x10,\n  MODIFY_ANNOTATIONS: 0x20,\n  FILL_INTERACTIVE_FORMS: 0x100,\n  COPY_FOR_ACCESSIBILITY: 0x200,\n  ASSEMBLE: 0x400,\n  PRINT_HIGH_QUALITY: 0x800,\n};\n\nconst TextRenderingMode = {\n  FILL: 0,\n  STROKE: 1,\n  FILL_STROKE: 2,\n  INVISIBLE: 3,\n  FILL_ADD_TO_PATH: 4,\n  STROKE_ADD_TO_PATH: 5,\n  FILL_STROKE_ADD_TO_PATH: 6,\n  ADD_TO_PATH: 7,\n  FILL_STROKE_MASK: 3,\n  ADD_TO_PATH_FLAG: 4,\n};\n\nconst ImageKind = {\n  GRAYSCALE_1BPP: 1,\n  RGB_24BPP: 2,\n  RGBA_32BPP: 3,\n};\n\nconst AnnotationType = {\n  TEXT: 1,\n  LINK: 2,\n  FREETEXT: 3,\n  LINE: 4,\n  SQUARE: 5,\n  CIRCLE: 6,\n  POLYGON: 7,\n  POLYLINE: 8,\n  HIGHLIGHT: 9,\n  UNDERLINE: 10,\n  SQUIGGLY: 11,\n  STRIKEOUT: 12,\n  STAMP: 13,\n  CARET: 14,\n  INK: 15,\n  POPUP: 16,\n  FILEATTACHMENT: 17,\n  SOUND: 18,\n  MOVIE: 19,\n  WIDGET: 20,\n  SCREEN: 21,\n  PRINTERMARK: 22,\n  TRAPNET: 23,\n  WATERMARK: 24,\n  THREED: 25,\n  REDACT: 26,\n};\n\nconst AnnotationStateModelType = {\n  MARKED: \"Marked\",\n  REVIEW: \"Review\",\n};\n\nconst AnnotationMarkedState = {\n  MARKED: \"Marked\",\n  UNMARKED: \"Unmarked\",\n};\n\nconst AnnotationReviewState = {\n  ACCEPTED: \"Accepted\",\n  REJECTED: \"Rejected\",\n  CANCELLED: \"Cancelled\",\n  COMPLETED: \"Completed\",\n  NONE: \"None\",\n};\n\nconst AnnotationReplyType = {\n  GROUP: \"Group\",\n  REPLY: \"R\",\n};\n\nconst AnnotationFlag = {\n  INVISIBLE: 0x01,\n  HIDDEN: 0x02,\n  PRINT: 0x04,\n  NOZOOM: 0x08,\n  NOROTATE: 0x10,\n  NOVIEW: 0x20,\n  READONLY: 0x40,\n  LOCKED: 0x80,\n  TOGGLENOVIEW: 0x100,\n  LOCKEDCONTENTS: 0x200,\n};\n\nconst AnnotationFieldFlag = {\n  READONLY: 0x0000001,\n  REQUIRED: 0x0000002,\n  NOEXPORT: 0x0000004,\n  MULTILINE: 0x0001000,\n  PASSWORD: 0x0002000,\n  NOTOGGLETOOFF: 0x0004000,\n  RADIO: 0x0008000,\n  PUSHBUTTON: 0x0010000,\n  COMBO: 0x0020000,\n  EDIT: 0x0040000,\n  SORT: 0x0080000,\n  FILESELECT: 0x0100000,\n  MULTISELECT: 0x0200000,\n  DONOTSPELLCHECK: 0x0400000,\n  DONOTSCROLL: 0x0800000,\n  COMB: 0x1000000,\n  RICHTEXT: 0x2000000,\n  RADIOSINUNISON: 0x2000000,\n  COMMITONSELCHANGE: 0x4000000,\n};\n\nconst AnnotationBorderStyleType = {\n  SOLID: 1,\n  DASHED: 2,\n  BEVELED: 3,\n  INSET: 4,\n  UNDERLINE: 5,\n};\n\nconst AnnotationActionEventType = {\n  E: \"Mouse Enter\",\n  X: \"Mouse Exit\",\n  D: \"Mouse Down\",\n  U: \"Mouse Up\",\n  Fo: \"Focus\",\n  Bl: \"Blur\",\n  PO: \"PageOpen\",\n  PC: \"PageClose\",\n  PV: \"PageVisible\",\n  PI: \"PageInvisible\",\n  K: \"Keystroke\",\n  F: \"Format\",\n  V: \"Validate\",\n  C: \"Calculate\",\n};\n\nconst DocumentActionEventType = {\n  WC: \"WillClose\",\n  WS: \"WillSave\",\n  DS: \"DidSave\",\n  WP: \"WillPrint\",\n  DP: \"DidPrint\",\n};\n\nconst PageActionEventType = {\n  O: \"PageOpen\",\n  C: \"PageClose\",\n};\n\nconst StreamType = {\n  UNKNOWN: \"UNKNOWN\",\n  FLATE: \"FLATE\",\n  LZW: \"LZW\",\n  DCT: \"DCT\",\n  JPX: \"JPX\",\n  JBIG: \"JBIG\",\n  A85: \"A85\",\n  AHX: \"AHX\",\n  CCF: \"CCF\",\n  RLX: \"RLX\", // PDF short name is 'RL', but telemetry requires three chars.\n};\n\nconst FontType = {\n  UNKNOWN: \"UNKNOWN\",\n  TYPE1: \"TYPE1\",\n  TYPE1STANDARD: \"TYPE1STANDARD\",\n  TYPE1C: \"TYPE1C\",\n  CIDFONTTYPE0: \"CIDFONTTYPE0\",\n  CIDFONTTYPE0C: \"CIDFONTTYPE0C\",\n  TRUETYPE: \"TRUETYPE\",\n  CIDFONTTYPE2: \"CIDFONTTYPE2\",\n  TYPE3: \"TYPE3\",\n  OPENTYPE: \"OPENTYPE\",\n  TYPE0: \"TYPE0\",\n  MMTYPE1: \"MMTYPE1\",\n};\n\nconst VerbosityLevel = {\n  ERRORS: 0,\n  WARNINGS: 1,\n  INFOS: 5,\n};\n\nconst CMapCompressionType = {\n  NONE: 0,\n  BINARY: 1,\n  STREAM: 2,\n};\n\n// All the possible operations for an operator list.\nconst OPS = {\n  // Intentionally start from 1 so it is easy to spot bad operators that will be\n  // 0's.\n  dependency: 1,\n  setLineWidth: 2,\n  setLineCap: 3,\n  setLineJoin: 4,\n  setMiterLimit: 5,\n  setDash: 6,\n  setRenderingIntent: 7,\n  setFlatness: 8,\n  setGState: 9,\n  save: 10,\n  restore: 11,\n  transform: 12,\n  moveTo: 13,\n  lineTo: 14,\n  curveTo: 15,\n  curveTo2: 16,\n  curveTo3: 17,\n  closePath: 18,\n  rectangle: 19,\n  stroke: 20,\n  closeStroke: 21,\n  fill: 22,\n  eoFill: 23,\n  fillStroke: 24,\n  eoFillStroke: 25,\n  closeFillStroke: 26,\n  closeEOFillStroke: 27,\n  endPath: 28,\n  clip: 29,\n  eoClip: 30,\n  beginText: 31,\n  endText: 32,\n  setCharSpacing: 33,\n  setWordSpacing: 34,\n  setHScale: 35,\n  setLeading: 36,\n  setFont: 37,\n  setTextRenderingMode: 38,\n  setTextRise: 39,\n  moveText: 40,\n  setLeadingMoveText: 41,\n  setTextMatrix: 42,\n  nextLine: 43,\n  showText: 44,\n  showSpacedText: 45,\n  nextLineShowText: 46,\n  nextLineSetSpacingShowText: 47,\n  setCharWidth: 48,\n  setCharWidthAndBounds: 49,\n  setStrokeColorSpace: 50,\n  setFillColorSpace: 51,\n  setStrokeColor: 52,\n  setStrokeColorN: 53,\n  setFillColor: 54,\n  setFillColorN: 55,\n  setStrokeGray: 56,\n  setFillGray: 57,\n  setStrokeRGBColor: 58,\n  setFillRGBColor: 59,\n  setStrokeCMYKColor: 60,\n  setFillCMYKColor: 61,\n  shadingFill: 62,\n  beginInlineImage: 63,\n  beginImageData: 64,\n  endInlineImage: 65,\n  paintXObject: 66,\n  markPoint: 67,\n  markPointProps: 68,\n  beginMarkedContent: 69,\n  beginMarkedContentProps: 70,\n  endMarkedContent: 71,\n  beginCompat: 72,\n  endCompat: 73,\n  paintFormXObjectBegin: 74,\n  paintFormXObjectEnd: 75,\n  beginGroup: 76,\n  endGroup: 77,\n  beginAnnotations: 78,\n  endAnnotations: 79,\n  beginAnnotation: 80,\n  endAnnotation: 81,\n  /** @deprecated unused */\n  paintJpegXObject: 82,\n  paintImageMaskXObject: 83,\n  paintImageMaskXObjectGroup: 84,\n  paintImageXObject: 85,\n  paintInlineImageXObject: 86,\n  paintInlineImageXObjectGroup: 87,\n  paintImageXObjectRepeat: 88,\n  paintImageMaskXObjectRepeat: 89,\n  paintSolidColorImageMask: 90,\n  constructPath: 91,\n};\n\nconst UNSUPPORTED_FEATURES = {\n  /** @deprecated unused */\n  unknown: \"unknown\",\n  forms: \"forms\",\n  javaScript: \"javaScript\",\n  signatures: \"signatures\",\n  smask: \"smask\",\n  shadingPattern: \"shadingPattern\",\n  /** @deprecated unused */\n  font: \"font\",\n  errorTilingPattern: \"errorTilingPattern\",\n  errorExtGState: \"errorExtGState\",\n  errorXObject: \"errorXObject\",\n  errorFontLoadType3: \"errorFontLoadType3\",\n  errorFontState: \"errorFontState\",\n  errorFontMissing: \"errorFontMissing\",\n  errorFontTranslate: \"errorFontTranslate\",\n  errorColorSpace: \"errorColorSpace\",\n  errorOperatorList: \"errorOperatorList\",\n  errorFontToUnicode: \"errorFontToUnicode\",\n  errorFontLoadNative: \"errorFontLoadNative\",\n  errorFontBuildPath: \"errorFontBuildPath\",\n  errorFontGetPath: \"errorFontGetPath\",\n  errorMarkedContent: \"errorMarkedContent\",\n  errorContentSubStream: \"errorContentSubStream\",\n};\n\nconst PasswordResponses = {\n  NEED_PASSWORD: 1,\n  INCORRECT_PASSWORD: 2,\n};\n\nlet verbosity = VerbosityLevel.WARNINGS;\n\nfunction setVerbosityLevel(level) {\n  if (Number.isInteger(level)) {\n    verbosity = level;\n  }\n}\n\nfunction getVerbosityLevel() {\n  return verbosity;\n}\n\n// A notice for devs. These are good for things that are helpful to devs, such\n// as warning that Workers were disabled, which is important to devs but not\n// end users.\nfunction info(msg) {\n  if (verbosity >= VerbosityLevel.INFOS) {\n    console.log(`Info: ${msg}`);\n  }\n}\n\n// Non-fatal warnings.\nfunction warn(msg) {\n  if (verbosity >= VerbosityLevel.WARNINGS) {\n    console.log(`Warning: ${msg}`);\n  }\n}\n\nfunction unreachable(msg) {\n  throw new Error(msg);\n}\n\nfunction assert(cond, msg) {\n  if (!cond) {\n    unreachable(msg);\n  }\n}\n\n// Checks if URLs have the same origin. For non-HTTP based URLs, returns false.\nfunction isSameOrigin(baseUrl, otherUrl) {\n  let base;\n  try {\n    base = new URL(baseUrl);\n    if (!base.origin || base.origin === \"null\") {\n      return false; // non-HTTP url\n    }\n  } catch (e) {\n    return false;\n  }\n\n  const other = new URL(otherUrl, base);\n  return base.origin === other.origin;\n}\n\n// Checks if URLs use one of the allowed protocols, e.g. to avoid XSS.\nfunction _isValidProtocol(url) {\n  if (!url) {\n    return false;\n  }\n  switch (url.protocol) {\n    case \"http:\":\n    case \"https:\":\n    case \"ftp:\":\n    case \"mailto:\":\n    case \"tel:\":\n      return true;\n    default:\n      return false;\n  }\n}\n\n/**\n * Attempts to create a valid absolute URL.\n *\n * @param {URL|string} url - An absolute, or relative, URL.\n * @param {URL|string} [baseUrl] - An absolute URL.\n * @param {Object} [options]\n * @returns Either a valid {URL}, or `null` otherwise.\n */\nfunction createValidAbsoluteUrl(url, baseUrl = null, options = null) {\n  if (!url) {\n    return null;\n  }\n  try {\n    if (options && typeof url === \"string\") {\n      // Let URLs beginning with \"www.\" default to using the \"http://\" protocol.\n      if (options.addDefaultProtocol && url.startsWith(\"www.\")) {\n        const dots = url.match(/\\./g);\n        // Avoid accidentally matching a *relative* URL pointing to a file named\n        // e.g. \"www.pdf\" or similar.\n        if (dots && dots.length >= 2) {\n          url = `http://${url}`;\n        }\n      }\n\n      // According to ISO 32000-1:2008, section 12.6.4.7, URIs should be encoded\n      // in 7-bit ASCII. Some bad PDFs use UTF-8 encoding; see bug 1122280.\n      if (options.tryConvertEncoding) {\n        try {\n          url = stringToUTF8String(url);\n        } catch (ex) {}\n      }\n    }\n\n    const absoluteUrl = baseUrl ? new URL(url, baseUrl) : new URL(url);\n    if (_isValidProtocol(absoluteUrl)) {\n      return absoluteUrl;\n    }\n  } catch (ex) {\n    /* `new URL()` will throw on incorrect data. */\n  }\n  return null;\n}\n\nfunction shadow(obj, prop, value) {\n  Object.defineProperty(obj, prop, {\n    value,\n    enumerable: true,\n    configurable: true,\n    writable: false,\n  });\n  return value;\n}\n\n/**\n * @type {any}\n */\nconst BaseException = (function BaseExceptionClosure() {\n  // eslint-disable-next-line no-shadow\n  function BaseException(message, name) {\n    if (this.constructor === BaseException) {\n      unreachable(\"Cannot initialize BaseException.\");\n    }\n    this.message = message;\n    this.name = name;\n  }\n  BaseException.prototype = new Error();\n  BaseException.constructor = BaseException;\n\n  return BaseException;\n})();\n\nclass PasswordException extends BaseException {\n  constructor(msg, code) {\n    super(msg, \"PasswordException\");\n    this.code = code;\n  }\n}\n\nclass UnknownErrorException extends BaseException {\n  constructor(msg, details) {\n    super(msg, \"UnknownErrorException\");\n    this.details = details;\n  }\n}\n\nclass InvalidPDFException extends BaseException {\n  constructor(msg) {\n    super(msg, \"InvalidPDFException\");\n  }\n}\n\nclass MissingPDFException extends BaseException {\n  constructor(msg) {\n    super(msg, \"MissingPDFException\");\n  }\n}\n\nclass UnexpectedResponseException extends BaseException {\n  constructor(msg, status) {\n    super(msg, \"UnexpectedResponseException\");\n    this.status = status;\n  }\n}\n\n/**\n * Error caused during parsing PDF data.\n */\nclass FormatError extends BaseException {\n  constructor(msg) {\n    super(msg, \"FormatError\");\n  }\n}\n\n/**\n * Error used to indicate task cancellation.\n */\nclass AbortException extends BaseException {\n  constructor(msg) {\n    super(msg, \"AbortException\");\n  }\n}\n\nconst NullCharactersRegExp = /\\x00/g;\n\n/**\n * @param {string} str\n */\nfunction removeNullCharacters(str) {\n  if (typeof str !== \"string\") {\n    warn(\"The argument for removeNullCharacters must be a string.\");\n    return str;\n  }\n  return str.replace(NullCharactersRegExp, \"\");\n}\n\nfunction bytesToString(bytes) {\n  assert(\n    bytes !== null && typeof bytes === \"object\" && bytes.length !== undefined,\n    \"Invalid argument for bytesToString\"\n  );\n  const length = bytes.length;\n  const MAX_ARGUMENT_COUNT = 8192;\n  if (length < MAX_ARGUMENT_COUNT) {\n    return String.fromCharCode.apply(null, bytes);\n  }\n  const strBuf = [];\n  for (let i = 0; i < length; i += MAX_ARGUMENT_COUNT) {\n    const chunkEnd = Math.min(i + MAX_ARGUMENT_COUNT, length);\n    const chunk = bytes.subarray(i, chunkEnd);\n    strBuf.push(String.fromCharCode.apply(null, chunk));\n  }\n  return strBuf.join(\"\");\n}\n\nfunction stringToBytes(str) {\n  assert(typeof str === \"string\", \"Invalid argument for stringToBytes\");\n  const length = str.length;\n  const bytes = new Uint8Array(length);\n  for (let i = 0; i < length; ++i) {\n    bytes[i] = str.charCodeAt(i) & 0xff;\n  }\n  return bytes;\n}\n\n/**\n * Gets length of the array (Array, Uint8Array, or string) in bytes.\n * @param {Array<any>|Uint8Array|string} arr\n * @returns {number}\n */\nfunction arrayByteLength(arr) {\n  if (arr.length !== undefined) {\n    return arr.length;\n  }\n  assert(arr.byteLength !== undefined, \"arrayByteLength - invalid argument.\");\n  return arr.byteLength;\n}\n\n/**\n * Combines array items (arrays) into single Uint8Array object.\n * @param {Array<Array<any>|Uint8Array|string>} arr - the array of the arrays\n *   (Array, Uint8Array, or string).\n * @returns {Uint8Array}\n */\nfunction arraysToBytes(arr) {\n  const length = arr.length;\n  // Shortcut: if first and only item is Uint8Array, return it.\n  if (length === 1 && arr[0] instanceof Uint8Array) {\n    return arr[0];\n  }\n  let resultLength = 0;\n  for (let i = 0; i < length; i++) {\n    resultLength += arrayByteLength(arr[i]);\n  }\n  let pos = 0;\n  const data = new Uint8Array(resultLength);\n  for (let i = 0; i < length; i++) {\n    let item = arr[i];\n    if (!(item instanceof Uint8Array)) {\n      if (typeof item === \"string\") {\n        item = stringToBytes(item);\n      } else {\n        item = new Uint8Array(item);\n      }\n    }\n    const itemLength = item.byteLength;\n    data.set(item, pos);\n    pos += itemLength;\n  }\n  return data;\n}\n\nfunction string32(value) {\n  if (\n    typeof PDFJSDev === \"undefined\" ||\n    PDFJSDev.test(\"!PRODUCTION || TESTING\")\n  ) {\n    assert(\n      typeof value === \"number\" && Math.abs(value) < 2 ** 32,\n      `string32: Unexpected input \"${value}\".`\n    );\n  }\n  return String.fromCharCode(\n    (value >> 24) & 0xff,\n    (value >> 16) & 0xff,\n    (value >> 8) & 0xff,\n    value & 0xff\n  );\n}\n\nfunction objectSize(obj) {\n  return Object.keys(obj).length;\n}\n\n// Ensure that the returned Object has a `null` prototype; hence why\n// `Object.fromEntries(...)` is not used.\nfunction objectFromMap(map) {\n  const obj = Object.create(null);\n  for (const [key, value] of map) {\n    obj[key] = value;\n  }\n  return obj;\n}\n\n// Checks the endianness of the platform.\nfunction isLittleEndian() {\n  const buffer8 = new Uint8Array(4);\n  buffer8[0] = 1;\n  const view32 = new Uint32Array(buffer8.buffer, 0, 1);\n  return view32[0] === 1;\n}\nconst IsLittleEndianCached = {\n  get value() {\n    return shadow(this, \"value\", isLittleEndian());\n  },\n};\n\n// Checks if it's possible to eval JS expressions.\nfunction isEvalSupported() {\n  try {\n    new Function(\"\"); // eslint-disable-line no-new, no-new-func\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nconst IsEvalSupportedCached = {\n  get value() {\n    return shadow(this, \"value\", isEvalSupported());\n  },\n};\n\nconst hexNumbers = [...Array(256).keys()].map(n =>\n  n.toString(16).padStart(2, \"0\")\n);\n\nclass Util {\n  static makeHexColor(r, g, b) {\n    return `#${hexNumbers[r]}${hexNumbers[g]}${hexNumbers[b]}`;\n  }\n\n  // Concatenates two transformation matrices together and returns the result.\n  static transform(m1, m2) {\n    return [\n      m1[0] * m2[0] + m1[2] * m2[1],\n      m1[1] * m2[0] + m1[3] * m2[1],\n      m1[0] * m2[2] + m1[2] * m2[3],\n      m1[1] * m2[2] + m1[3] * m2[3],\n      m1[0] * m2[4] + m1[2] * m2[5] + m1[4],\n      m1[1] * m2[4] + m1[3] * m2[5] + m1[5],\n    ];\n  }\n\n  // For 2d affine transforms\n  static applyTransform(p, m) {\n    const xt = p[0] * m[0] + p[1] * m[2] + m[4];\n    const yt = p[0] * m[1] + p[1] * m[3] + m[5];\n    return [xt, yt];\n  }\n\n  static applyInverseTransform(p, m) {\n    const d = m[0] * m[3] - m[1] * m[2];\n    const xt = (p[0] * m[3] - p[1] * m[2] + m[2] * m[5] - m[4] * m[3]) / d;\n    const yt = (-p[0] * m[1] + p[1] * m[0] + m[4] * m[1] - m[5] * m[0]) / d;\n    return [xt, yt];\n  }\n\n  // Applies the transform to the rectangle and finds the minimum axially\n  // aligned bounding box.\n  static getAxialAlignedBoundingBox(r, m) {\n    const p1 = Util.applyTransform(r, m);\n    const p2 = Util.applyTransform(r.slice(2, 4), m);\n    const p3 = Util.applyTransform([r[0], r[3]], m);\n    const p4 = Util.applyTransform([r[2], r[1]], m);\n    return [\n      Math.min(p1[0], p2[0], p3[0], p4[0]),\n      Math.min(p1[1], p2[1], p3[1], p4[1]),\n      Math.max(p1[0], p2[0], p3[0], p4[0]),\n      Math.max(p1[1], p2[1], p3[1], p4[1]),\n    ];\n  }\n\n  static inverseTransform(m) {\n    const d = m[0] * m[3] - m[1] * m[2];\n    return [\n      m[3] / d,\n      -m[1] / d,\n      -m[2] / d,\n      m[0] / d,\n      (m[2] * m[5] - m[4] * m[3]) / d,\n      (m[4] * m[1] - m[5] * m[0]) / d,\n    ];\n  }\n\n  // Apply a generic 3d matrix M on a 3-vector v:\n  //   | a b c |   | X |\n  //   | d e f | x | Y |\n  //   | g h i |   | Z |\n  // M is assumed to be serialized as [a,b,c,d,e,f,g,h,i],\n  // with v as [X,Y,Z]\n  static apply3dTransform(m, v) {\n    return [\n      m[0] * v[0] + m[1] * v[1] + m[2] * v[2],\n      m[3] * v[0] + m[4] * v[1] + m[5] * v[2],\n      m[6] * v[0] + m[7] * v[1] + m[8] * v[2],\n    ];\n  }\n\n  // This calculation uses Singular Value Decomposition.\n  // The SVD can be represented with formula A = USV. We are interested in the\n  // matrix S here because it represents the scale values.\n  static singularValueDecompose2dScale(m) {\n    const transpose = [m[0], m[2], m[1], m[3]];\n\n    // Multiply matrix m with its transpose.\n    const a = m[0] * transpose[0] + m[1] * transpose[2];\n    const b = m[0] * transpose[1] + m[1] * transpose[3];\n    const c = m[2] * transpose[0] + m[3] * transpose[2];\n    const d = m[2] * transpose[1] + m[3] * transpose[3];\n\n    // Solve the second degree polynomial to get roots.\n    const first = (a + d) / 2;\n    const second = Math.sqrt((a + d) ** 2 - 4 * (a * d - c * b)) / 2;\n    const sx = first + second || 1;\n    const sy = first - second || 1;\n\n    // Scale values are the square roots of the eigenvalues.\n    return [Math.sqrt(sx), Math.sqrt(sy)];\n  }\n\n  // Normalize rectangle rect=[x1, y1, x2, y2] so that (x1,y1) < (x2,y2)\n  // For coordinate systems whose origin lies in the bottom-left, this\n  // means normalization to (BL,TR) ordering. For systems with origin in the\n  // top-left, this means (TL,BR) ordering.\n  static normalizeRect(rect) {\n    const r = rect.slice(0); // clone rect\n    if (rect[0] > rect[2]) {\n      r[0] = rect[2];\n      r[2] = rect[0];\n    }\n    if (rect[1] > rect[3]) {\n      r[1] = rect[3];\n      r[3] = rect[1];\n    }\n    return r;\n  }\n\n  // Returns a rectangle [x1, y1, x2, y2] corresponding to the\n  // intersection of rect1 and rect2. If no intersection, returns 'false'\n  // The rectangle coordinates of rect1, rect2 should be [x1, y1, x2, y2]\n  static intersect(rect1, rect2) {\n    function compare(a, b) {\n      return a - b;\n    }\n\n    // Order points along the axes\n    const orderedX = [rect1[0], rect1[2], rect2[0], rect2[2]].sort(compare);\n    const orderedY = [rect1[1], rect1[3], rect2[1], rect2[3]].sort(compare);\n    const result = [];\n\n    rect1 = Util.normalizeRect(rect1);\n    rect2 = Util.normalizeRect(rect2);\n\n    // X: first and second points belong to different rectangles?\n    if (\n      (orderedX[0] === rect1[0] && orderedX[1] === rect2[0]) ||\n      (orderedX[0] === rect2[0] && orderedX[1] === rect1[0])\n    ) {\n      // Intersection must be between second and third points\n      result[0] = orderedX[1];\n      result[2] = orderedX[2];\n    } else {\n      return null;\n    }\n\n    // Y: first and second points belong to different rectangles?\n    if (\n      (orderedY[0] === rect1[1] && orderedY[1] === rect2[1]) ||\n      (orderedY[0] === rect2[1] && orderedY[1] === rect1[1])\n    ) {\n      // Intersection must be between second and third points\n      result[1] = orderedY[1];\n      result[3] = orderedY[2];\n    } else {\n      return null;\n    }\n\n    return result;\n  }\n}\n\nconst PDFStringTranslateTable = [\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x2d8,\n  0x2c7, 0x2c6, 0x2d9, 0x2dd, 0x2db, 0x2da, 0x2dc, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0x2022, 0x2020, 0x2021, 0x2026, 0x2014, 0x2013, 0x192,\n  0x2044, 0x2039, 0x203a, 0x2212, 0x2030, 0x201e, 0x201c, 0x201d, 0x2018,\n  0x2019, 0x201a, 0x2122, 0xfb01, 0xfb02, 0x141, 0x152, 0x160, 0x178, 0x17d,\n  0x131, 0x142, 0x153, 0x161, 0x17e, 0, 0x20ac,\n];\n\nfunction stringToPDFString(str) {\n  const length = str.length,\n    strBuf = [];\n  if (str[0] === \"\\xFE\" && str[1] === \"\\xFF\") {\n    // UTF16BE BOM\n    for (let i = 2; i < length; i += 2) {\n      strBuf.push(\n        String.fromCharCode((str.charCodeAt(i) << 8) | str.charCodeAt(i + 1))\n      );\n    }\n  } else if (str[0] === \"\\xFF\" && str[1] === \"\\xFE\") {\n    // UTF16LE BOM\n    for (let i = 2; i < length; i += 2) {\n      strBuf.push(\n        String.fromCharCode((str.charCodeAt(i + 1) << 8) | str.charCodeAt(i))\n      );\n    }\n  } else {\n    for (let i = 0; i < length; ++i) {\n      const code = PDFStringTranslateTable[str.charCodeAt(i)];\n      strBuf.push(code ? String.fromCharCode(code) : str.charAt(i));\n    }\n  }\n  return strBuf.join(\"\");\n}\n\nfunction escapeString(str) {\n  // replace \"(\", \")\", \"\\n\", \"\\r\" and \"\\\"\n  // by \"\\(\", \"\\)\", \"\\\\n\", \"\\\\r\" and \"\\\\\"\n  // in order to write it in a PDF file.\n  return str.replace(/([()\\\\\\n\\r])/g, match => {\n    if (match === \"\\n\") {\n      return \"\\\\n\";\n    } else if (match === \"\\r\") {\n      return \"\\\\r\";\n    }\n    return `\\\\${match}`;\n  });\n}\n\nfunction isAscii(str) {\n  return /^[\\x00-\\x7F]*$/.test(str);\n}\n\nfunction stringToUTF16BEString(str) {\n  const buf = [\"\\xFE\\xFF\"];\n  for (let i = 0, ii = str.length; i < ii; i++) {\n    const char = str.charCodeAt(i);\n    buf.push(\n      String.fromCharCode((char >> 8) & 0xff),\n      String.fromCharCode(char & 0xff)\n    );\n  }\n  return buf.join(\"\");\n}\n\nfunction stringToUTF8String(str) {\n  return decodeURIComponent(escape(str));\n}\n\nfunction utf8StringToString(str) {\n  return unescape(encodeURIComponent(str));\n}\n\nfunction isBool(v) {\n  return typeof v === \"boolean\";\n}\n\nfunction isNum(v) {\n  return typeof v === \"number\";\n}\n\nfunction isString(v) {\n  return typeof v === \"string\";\n}\n\nfunction isArrayBuffer(v) {\n  return typeof v === \"object\" && v !== null && v.byteLength !== undefined;\n}\n\nfunction isArrayEqual(arr1, arr2) {\n  if (arr1.length !== arr2.length) {\n    return false;\n  }\n  for (let i = 0, ii = arr1.length; i < ii; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction getModificationDate(date = new Date()) {\n  const buffer = [\n    date.getUTCFullYear().toString(),\n    (date.getUTCMonth() + 1).toString().padStart(2, \"0\"),\n    date.getUTCDate().toString().padStart(2, \"0\"),\n    date.getUTCHours().toString().padStart(2, \"0\"),\n    date.getUTCMinutes().toString().padStart(2, \"0\"),\n    date.getUTCSeconds().toString().padStart(2, \"0\"),\n  ];\n\n  return buffer.join(\"\");\n}\n\n/**\n * Promise Capability object.\n *\n * @typedef {Object} PromiseCapability\n * @property {Promise<any>} promise - A Promise object.\n * @property {boolean} settled - If the Promise has been fulfilled/rejected.\n * @property {function} resolve - Fulfills the Promise.\n * @property {function} reject - Rejects the Promise.\n */\n\n/**\n * Creates a promise capability object.\n * @alias createPromiseCapability\n *\n * @returns {PromiseCapability}\n */\nfunction createPromiseCapability() {\n  const capability = Object.create(null);\n  let isSettled = false;\n\n  Object.defineProperty(capability, \"settled\", {\n    get() {\n      return isSettled;\n    },\n  });\n  capability.promise = new Promise(function (resolve, reject) {\n    capability.resolve = function (data) {\n      isSettled = true;\n      resolve(data);\n    };\n    capability.reject = function (reason) {\n      isSettled = true;\n      reject(reason);\n    };\n  });\n  return capability;\n}\n\nfunction createObjectURL(data, contentType = \"\", forceDataSchema = false) {\n  if (URL.createObjectURL && !forceDataSchema) {\n    return URL.createObjectURL(new Blob([data], { type: contentType }));\n  }\n  // Blob/createObjectURL is not available, falling back to data schema.\n  const digits =\n    \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\n\n  let buffer = `data:${contentType};base64,`;\n  for (let i = 0, ii = data.length; i < ii; i += 3) {\n    const b1 = data[i] & 0xff;\n    const b2 = data[i + 1] & 0xff;\n    const b3 = data[i + 2] & 0xff;\n    const d1 = b1 >> 2,\n      d2 = ((b1 & 3) << 4) | (b2 >> 4);\n    const d3 = i + 1 < ii ? ((b2 & 0xf) << 2) | (b3 >> 6) : 64;\n    const d4 = i + 2 < ii ? b3 & 0x3f : 64;\n    buffer += digits[d1] + digits[d2] + digits[d3] + digits[d4];\n  }\n  return buffer;\n}\n\nexport {\n  AbortException,\n  AnnotationActionEventType,\n  AnnotationBorderStyleType,\n  AnnotationFieldFlag,\n  AnnotationFlag,\n  AnnotationMarkedState,\n  AnnotationMode,\n  AnnotationReplyType,\n  AnnotationReviewState,\n  AnnotationStateModelType,\n  AnnotationType,\n  arrayByteLength,\n  arraysToBytes,\n  assert,\n  BaseException,\n  bytesToString,\n  CMapCompressionType,\n  createObjectURL,\n  createPromiseCapability,\n  createValidAbsoluteUrl,\n  DocumentActionEventType,\n  escapeString,\n  FONT_IDENTITY_MATRIX,\n  FontType,\n  FormatError,\n  getModificationDate,\n  getVerbosityLevel,\n  IDENTITY_MATRIX,\n  ImageKind,\n  info,\n  InvalidPDFException,\n  isArrayBuffer,\n  isArrayEqual,\n  isAscii,\n  isBool,\n  IsEvalSupportedCached,\n  IsLittleEndianCached,\n  isNum,\n  isSameOrigin,\n  isString,\n  MissingPDFException,\n  objectFromMap,\n  objectSize,\n  OPS,\n  PageActionEventType,\n  PasswordException,\n  PasswordResponses,\n  PermissionFlag,\n  removeNullCharacters,\n  RenderingIntentFlag,\n  setVerbosityLevel,\n  shadow,\n  StreamType,\n  string32,\n  stringToBytes,\n  stringToPDFString,\n  stringToUTF16BEString,\n  stringToUTF8String,\n  TextRenderingMode,\n  UnexpectedResponseException,\n  UnknownErrorException,\n  unreachable,\n  UNSUPPORTED_FEATURES,\n  utf8StringToString,\n  Util,\n  VerbosityLevel,\n  warn,\n};\n","/* Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { isNodeJS } from \"./is_node.js\";\n\n// Skip compatibility checks for modern builds and if we already ran the module.\nif (\n  (typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"SKIP_BABEL\")) &&\n  (typeof globalThis === \"undefined\" || !globalThis._pdfjsCompatibilityChecked)\n) {\n  // Provides support for `globalThis` in legacy browsers.\n  // Support: Firefox<65, Chrome<71, Safari<12.1, Node.js<12.0.0\n  if (typeof globalThis === \"undefined\" || globalThis.Math !== Math) {\n    // eslint-disable-next-line no-global-assign\n    globalThis = require(\"core-js/es/global-this\");\n  }\n  globalThis._pdfjsCompatibilityChecked = true;\n\n  // Support: Node.js\n  (function checkNodeBtoa() {\n    if (globalThis.btoa || !isNodeJS) {\n      return;\n    }\n    globalThis.btoa = function (chars) {\n      // eslint-disable-next-line no-undef\n      return Buffer.from(chars, \"binary\").toString(\"base64\");\n    };\n  })();\n\n  // Support: Node.js\n  (function checkNodeAtob() {\n    if (globalThis.atob || !isNodeJS) {\n      return;\n    }\n    globalThis.atob = function (input) {\n      // eslint-disable-next-line no-undef\n      return Buffer.from(input, \"base64\").toString(\"binary\");\n    };\n  })();\n\n  // Support: Node.js\n  (function checkDOMMatrix() {\n    if (globalThis.DOMMatrix || !isNodeJS) {\n      return;\n    }\n    globalThis.DOMMatrix = require(\"dommatrix/dist/dommatrix.js\");\n  })();\n\n  // Provides support for Object.fromEntries in legacy browsers.\n  // Support: Firefox<63, Chrome<73, Safari<12.1, Node.js<12.0.0\n  (function checkObjectFromEntries() {\n    if (Object.fromEntries) {\n      return;\n    }\n    require(\"core-js/es/object/from-entries.js\");\n  })();\n\n  // Provides support for *recent* additions to the Promise specification,\n  // however basic Promise support is assumed to be available natively.\n  // Support: Firefox<71, Chrome<76, Safari<13, Node.js<12.9.0\n  (function checkPromise() {\n    if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"IMAGE_DECODERS\")) {\n      // The current image decoders are synchronous, hence `Promise` shouldn't\n      // need to be polyfilled for the IMAGE_DECODERS build target.\n      return;\n    }\n    if (globalThis.Promise.allSettled) {\n      return;\n    }\n    globalThis.Promise = require(\"core-js/es/promise/index.js\");\n  })();\n\n  // Support: Node.js\n  (function checkReadableStream() {\n    if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"IMAGE_DECODERS\")) {\n      // The current image decoders are synchronous, hence `ReadableStream`\n      // shouldn't need to be polyfilled for the IMAGE_DECODERS build target.\n      return;\n    }\n    if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"CHROME\")) {\n      // Slightly reduce the size of the Chromium-extension, given\n      // that `ReadableStream` has been supported since Chrome 43.\n      return;\n    }\n    if (globalThis.ReadableStream || !isNodeJS) {\n      return;\n    }\n    globalThis.ReadableStream =\n      require(\"web-streams-polyfill/dist/ponyfill.js\").ReadableStream;\n  })();\n}\n","/* Copyright 2018 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* globals process */\n\n// NW.js / Electron is a browser context, but copies some Node.js objects; see\n// http://docs.nwjs.io/en/latest/For%20Users/Advanced/JavaScript%20Contexts%20in%20NW.js/#access-nodejs-and-nwjs-api-in-browser-context\n// https://www.electronjs.org/docs/api/process#processversionselectron-readonly\n// https://www.electronjs.org/docs/api/process#processtype-readonly\nconst isNodeJS =\n  typeof process === \"object\" &&\n  process + \"\" === \"[object process]\" &&\n  !process.versions.nw &&\n  !(process.versions.electron && process.type && process.type !== \"browser\");\n\nexport { isNodeJS };\n","require('../modules/es.global-this');\n\nmodule.exports = require('../internals/global');\n","var $ = require('../internals/export');\nvar global = require('../internals/global');\n\n// `globalThis` object\n// https://tc39.es/ecma262/#sec-globalthis\n$({ global: true }, {\n  globalThis: global\n});\n","var global = require('../internals/global');\nvar getOwnPropertyDescriptor = require('../internals/object-get-own-property-descriptor').f;\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar redefine = require('../internals/redefine');\nvar setGlobal = require('../internals/set-global');\nvar copyConstructorProperties = require('../internals/copy-constructor-properties');\nvar isForced = require('../internals/is-forced');\n\n/*\n  options.target      - name of the target object\n  options.global      - target is the global object\n  options.stat        - export as static methods of target\n  options.proto       - export as prototype methods of target\n  options.real        - real prototype method for the `pure` version\n  options.forced      - export even if the native feature is available\n  options.bind        - bind methods to the target, required for the `pure` version\n  options.wrap        - wrap constructors to preventing global pollution, required for the `pure` version\n  options.unsafe      - use the simple assignment of property instead of delete + defineProperty\n  options.sham        - add a flag to not completely full polyfills\n  options.enumerable  - export as enumerable property\n  options.noTargetGet - prevent calling a getter on target\n*/\nmodule.exports = function (options, source) {\n  var TARGET = options.target;\n  var GLOBAL = options.global;\n  var STATIC = options.stat;\n  var FORCED, target, key, targetProperty, sourceProperty, descriptor;\n  if (GLOBAL) {\n    target = global;\n  } else if (STATIC) {\n    target = global[TARGET] || setGlobal(TARGET, {});\n  } else {\n    target = (global[TARGET] || {}).prototype;\n  }\n  if (target) for (key in source) {\n    sourceProperty = source[key];\n    if (options.noTargetGet) {\n      descriptor = getOwnPropertyDescriptor(target, key);\n      targetProperty = descriptor && descriptor.value;\n    } else targetProperty = target[key];\n    FORCED = isForced(GLOBAL ? key : TARGET + (STATIC ? '.' : '#') + key, options.forced);\n    // contained in target\n    if (!FORCED && targetProperty !== undefined) {\n      if (typeof sourceProperty === typeof targetProperty) continue;\n      copyConstructorProperties(sourceProperty, targetProperty);\n    }\n    // add a flag to not completely full polyfills\n    if (options.sham || (targetProperty && targetProperty.sham)) {\n      createNonEnumerableProperty(sourceProperty, 'sham', true);\n    }\n    // extend global\n    redefine(target, key, sourceProperty, options);\n  }\n};\n","var check = function (it) {\n  return it && it.Math == Math && it;\n};\n\n// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\nmodule.exports =\n  // eslint-disable-next-line es/no-global-this -- safe\n  check(typeof globalThis == 'object' && globalThis) ||\n  check(typeof window == 'object' && window) ||\n  // eslint-disable-next-line no-restricted-globals -- safe\n  check(typeof self == 'object' && self) ||\n  check(typeof global == 'object' && global) ||\n  // eslint-disable-next-line no-new-func -- fallback\n  (function () { return this; })() || Function('return this')();\n","var DESCRIPTORS = require('../internals/descriptors');\nvar propertyIsEnumerableModule = require('../internals/object-property-is-enumerable');\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar toPropertyKey = require('../internals/to-property-key');\nvar has = require('../internals/has');\nvar IE8_DOM_DEFINE = require('../internals/ie8-dom-define');\n\n// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe\nvar $getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n\n// `Object.getOwnPropertyDescriptor` method\n// https://tc39.es/ecma262/#sec-object.getownpropertydescriptor\nexports.f = DESCRIPTORS ? $getOwnPropertyDescriptor : function getOwnPropertyDescriptor(O, P) {\n  O = toIndexedObject(O);\n  P = toPropertyKey(P);\n  if (IE8_DOM_DEFINE) try {\n    return $getOwnPropertyDescriptor(O, P);\n  } catch (error) { /* empty */ }\n  if (has(O, P)) return createPropertyDescriptor(!propertyIsEnumerableModule.f.call(O, P), O[P]);\n};\n","var fails = require('../internals/fails');\n\n// Detect IE8's incomplete defineProperty implementation\nmodule.exports = !fails(function () {\n  // eslint-disable-next-line es/no-object-defineproperty -- required for testing\n  return Object.defineProperty({}, 1, { get: function () { return 7; } })[1] != 7;\n});\n","module.exports = function (exec) {\n  try {\n    return !!exec();\n  } catch (error) {\n    return true;\n  }\n};\n","'use strict';\nvar $propertyIsEnumerable = {}.propertyIsEnumerable;\n// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe\nvar getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n\n// Nashorn ~ JDK8 bug\nvar NASHORN_BUG = getOwnPropertyDescriptor && !$propertyIsEnumerable.call({ 1: 2 }, 1);\n\n// `Object.prototype.propertyIsEnumerable` method implementation\n// https://tc39.es/ecma262/#sec-object.prototype.propertyisenumerable\nexports.f = NASHORN_BUG ? function propertyIsEnumerable(V) {\n  var descriptor = getOwnPropertyDescriptor(this, V);\n  return !!descriptor && descriptor.enumerable;\n} : $propertyIsEnumerable;\n","module.exports = function (bitmap, value) {\n  return {\n    enumerable: !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable: !(bitmap & 4),\n    value: value\n  };\n};\n","// toObject with fallback for non-array-like ES3 strings\nvar IndexedObject = require('../internals/indexed-object');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\n\nmodule.exports = function (it) {\n  return IndexedObject(requireObjectCoercible(it));\n};\n","var fails = require('../internals/fails');\nvar classof = require('../internals/classof-raw');\n\nvar split = ''.split;\n\n// fallback for non-array-like ES3 and non-enumerable old V8 strings\nmodule.exports = fails(function () {\n  // throws an error in rhino, see https://github.com/mozilla/rhino/issues/346\n  // eslint-disable-next-line no-prototype-builtins -- safe\n  return !Object('z').propertyIsEnumerable(0);\n}) ? function (it) {\n  return classof(it) == 'String' ? split.call(it, '') : Object(it);\n} : Object;\n","var toString = {}.toString;\n\nmodule.exports = function (it) {\n  return toString.call(it).slice(8, -1);\n};\n","// `RequireObjectCoercible` abstract operation\n// https://tc39.es/ecma262/#sec-requireobjectcoercible\nmodule.exports = function (it) {\n  if (it == undefined) throw TypeError(\"Can't call method on \" + it);\n  return it;\n};\n","var toPrimitive = require('../internals/to-primitive');\nvar isSymbol = require('../internals/is-symbol');\n\n// `ToPropertyKey` abstract operation\n// https://tc39.es/ecma262/#sec-topropertykey\nmodule.exports = function (argument) {\n  var key = toPrimitive(argument, 'string');\n  return isSymbol(key) ? key : String(key);\n};\n","var isObject = require('../internals/is-object');\nvar isSymbol = require('../internals/is-symbol');\nvar ordinaryToPrimitive = require('../internals/ordinary-to-primitive');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar TO_PRIMITIVE = wellKnownSymbol('toPrimitive');\n\n// `ToPrimitive` abstract operation\n// https://tc39.es/ecma262/#sec-toprimitive\nmodule.exports = function (input, pref) {\n  if (!isObject(input) || isSymbol(input)) return input;\n  var exoticToPrim = input[TO_PRIMITIVE];\n  var result;\n  if (exoticToPrim !== undefined) {\n    if (pref === undefined) pref = 'default';\n    result = exoticToPrim.call(input, pref);\n    if (!isObject(result) || isSymbol(result)) return result;\n    throw TypeError(\"Can't convert object to primitive value\");\n  }\n  if (pref === undefined) pref = 'number';\n  return ordinaryToPrimitive(input, pref);\n};\n","module.exports = function (it) {\n  return typeof it === 'object' ? it !== null : typeof it === 'function';\n};\n","var getBuiltIn = require('../internals/get-built-in');\nvar USE_SYMBOL_AS_UID = require('../internals/use-symbol-as-uid');\n\nmodule.exports = USE_SYMBOL_AS_UID ? function (it) {\n  return typeof it == 'symbol';\n} : function (it) {\n  var $Symbol = getBuiltIn('Symbol');\n  return typeof $Symbol == 'function' && Object(it) instanceof $Symbol;\n};\n","var global = require('../internals/global');\n\nvar aFunction = function (variable) {\n  return typeof variable == 'function' ? variable : undefined;\n};\n\nmodule.exports = function (namespace, method) {\n  return arguments.length < 2 ? aFunction(global[namespace]) : global[namespace] && global[namespace][method];\n};\n","/* eslint-disable es/no-symbol -- required for testing */\nvar NATIVE_SYMBOL = require('../internals/native-symbol');\n\nmodule.exports = NATIVE_SYMBOL\n  && !Symbol.sham\n  && typeof Symbol.iterator == 'symbol';\n","/* eslint-disable es/no-symbol -- required for testing */\nvar V8_VERSION = require('../internals/engine-v8-version');\nvar fails = require('../internals/fails');\n\n// eslint-disable-next-line es/no-object-getownpropertysymbols -- required for testing\nmodule.exports = !!Object.getOwnPropertySymbols && !fails(function () {\n  var symbol = Symbol();\n  // Chrome 38 Symbol has incorrect toString conversion\n  // `get-own-property-symbols` polyfill symbols converted to object are not Symbol instances\n  return !String(symbol) || !(Object(symbol) instanceof Symbol) ||\n    // Chrome 38-40 symbols are not inherited from DOM collections prototypes to instances\n    !Symbol.sham && V8_VERSION && V8_VERSION < 41;\n});\n","var global = require('../internals/global');\nvar userAgent = require('../internals/engine-user-agent');\n\nvar process = global.process;\nvar Deno = global.Deno;\nvar versions = process && process.versions || Deno && Deno.version;\nvar v8 = versions && versions.v8;\nvar match, version;\n\nif (v8) {\n  match = v8.split('.');\n  version = match[0] < 4 ? 1 : match[0] + match[1];\n} else if (userAgent) {\n  match = userAgent.match(/Edge\\/(\\d+)/);\n  if (!match || match[1] >= 74) {\n    match = userAgent.match(/Chrome\\/(\\d+)/);\n    if (match) version = match[1];\n  }\n}\n\nmodule.exports = version && +version;\n","var getBuiltIn = require('../internals/get-built-in');\n\nmodule.exports = getBuiltIn('navigator', 'userAgent') || '';\n","var isObject = require('../internals/is-object');\n\n// `OrdinaryToPrimitive` abstract operation\n// https://tc39.es/ecma262/#sec-ordinarytoprimitive\nmodule.exports = function (input, pref) {\n  var fn, val;\n  if (pref === 'string' && typeof (fn = input.toString) == 'function' && !isObject(val = fn.call(input))) return val;\n  if (typeof (fn = input.valueOf) == 'function' && !isObject(val = fn.call(input))) return val;\n  if (pref !== 'string' && typeof (fn = input.toString) == 'function' && !isObject(val = fn.call(input))) return val;\n  throw TypeError(\"Can't convert object to primitive value\");\n};\n","var global = require('../internals/global');\nvar shared = require('../internals/shared');\nvar has = require('../internals/has');\nvar uid = require('../internals/uid');\nvar NATIVE_SYMBOL = require('../internals/native-symbol');\nvar USE_SYMBOL_AS_UID = require('../internals/use-symbol-as-uid');\n\nvar WellKnownSymbolsStore = shared('wks');\nvar Symbol = global.Symbol;\nvar createWellKnownSymbol = USE_SYMBOL_AS_UID ? Symbol : Symbol && Symbol.withoutSetter || uid;\n\nmodule.exports = function (name) {\n  if (!has(WellKnownSymbolsStore, name) || !(NATIVE_SYMBOL || typeof WellKnownSymbolsStore[name] == 'string')) {\n    if (NATIVE_SYMBOL && has(Symbol, name)) {\n      WellKnownSymbolsStore[name] = Symbol[name];\n    } else {\n      WellKnownSymbolsStore[name] = createWellKnownSymbol('Symbol.' + name);\n    }\n  } return WellKnownSymbolsStore[name];\n};\n","var IS_PURE = require('../internals/is-pure');\nvar store = require('../internals/shared-store');\n\n(module.exports = function (key, value) {\n  return store[key] || (store[key] = value !== undefined ? value : {});\n})('versions', []).push({\n  version: '3.17.3',\n  mode: IS_PURE ? 'pure' : 'global',\n  copyright: '© 2021 Denis Pushkarev (zloirock.ru)'\n});\n","module.exports = false;\n","var global = require('../internals/global');\nvar setGlobal = require('../internals/set-global');\n\nvar SHARED = '__core-js_shared__';\nvar store = global[SHARED] || setGlobal(SHARED, {});\n\nmodule.exports = store;\n","var global = require('../internals/global');\n\nmodule.exports = function (key, value) {\n  try {\n    // eslint-disable-next-line es/no-object-defineproperty -- safe\n    Object.defineProperty(global, key, { value: value, configurable: true, writable: true });\n  } catch (error) {\n    global[key] = value;\n  } return value;\n};\n","var toObject = require('../internals/to-object');\n\nvar hasOwnProperty = {}.hasOwnProperty;\n\nmodule.exports = Object.hasOwn || function hasOwn(it, key) {\n  return hasOwnProperty.call(toObject(it), key);\n};\n","var requireObjectCoercible = require('../internals/require-object-coercible');\n\n// `ToObject` abstract operation\n// https://tc39.es/ecma262/#sec-toobject\nmodule.exports = function (argument) {\n  return Object(requireObjectCoercible(argument));\n};\n","var id = 0;\nvar postfix = Math.random();\n\nmodule.exports = function (key) {\n  return 'Symbol(' + String(key === undefined ? '' : key) + ')_' + (++id + postfix).toString(36);\n};\n","var DESCRIPTORS = require('../internals/descriptors');\nvar fails = require('../internals/fails');\nvar createElement = require('../internals/document-create-element');\n\n// Thank's IE8 for his funny defineProperty\nmodule.exports = !DESCRIPTORS && !fails(function () {\n  // eslint-disable-next-line es/no-object-defineproperty -- requied for testing\n  return Object.defineProperty(createElement('div'), 'a', {\n    get: function () { return 7; }\n  }).a != 7;\n});\n","var global = require('../internals/global');\nvar isObject = require('../internals/is-object');\n\nvar document = global.document;\n// typeof document.createElement is 'object' in old IE\nvar EXISTS = isObject(document) && isObject(document.createElement);\n\nmodule.exports = function (it) {\n  return EXISTS ? document.createElement(it) : {};\n};\n","var DESCRIPTORS = require('../internals/descriptors');\nvar definePropertyModule = require('../internals/object-define-property');\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\n\nmodule.exports = DESCRIPTORS ? function (object, key, value) {\n  return definePropertyModule.f(object, key, createPropertyDescriptor(1, value));\n} : function (object, key, value) {\n  object[key] = value;\n  return object;\n};\n","var DESCRIPTORS = require('../internals/descriptors');\nvar IE8_DOM_DEFINE = require('../internals/ie8-dom-define');\nvar anObject = require('../internals/an-object');\nvar toPropertyKey = require('../internals/to-property-key');\n\n// eslint-disable-next-line es/no-object-defineproperty -- safe\nvar $defineProperty = Object.defineProperty;\n\n// `Object.defineProperty` method\n// https://tc39.es/ecma262/#sec-object.defineproperty\nexports.f = DESCRIPTORS ? $defineProperty : function defineProperty(O, P, Attributes) {\n  anObject(O);\n  P = toPropertyKey(P);\n  anObject(Attributes);\n  if (IE8_DOM_DEFINE) try {\n    return $defineProperty(O, P, Attributes);\n  } catch (error) { /* empty */ }\n  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported');\n  if ('value' in Attributes) O[P] = Attributes.value;\n  return O;\n};\n","var isObject = require('../internals/is-object');\n\nmodule.exports = function (it) {\n  if (!isObject(it)) {\n    throw TypeError(String(it) + ' is not an object');\n  } return it;\n};\n","var global = require('../internals/global');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar has = require('../internals/has');\nvar setGlobal = require('../internals/set-global');\nvar inspectSource = require('../internals/inspect-source');\nvar InternalStateModule = require('../internals/internal-state');\n\nvar getInternalState = InternalStateModule.get;\nvar enforceInternalState = InternalStateModule.enforce;\nvar TEMPLATE = String(String).split('String');\n\n(module.exports = function (O, key, value, options) {\n  var unsafe = options ? !!options.unsafe : false;\n  var simple = options ? !!options.enumerable : false;\n  var noTargetGet = options ? !!options.noTargetGet : false;\n  var state;\n  if (typeof value == 'function') {\n    if (typeof key == 'string' && !has(value, 'name')) {\n      createNonEnumerableProperty(value, 'name', key);\n    }\n    state = enforceInternalState(value);\n    if (!state.source) {\n      state.source = TEMPLATE.join(typeof key == 'string' ? key : '');\n    }\n  }\n  if (O === global) {\n    if (simple) O[key] = value;\n    else setGlobal(key, value);\n    return;\n  } else if (!unsafe) {\n    delete O[key];\n  } else if (!noTargetGet && O[key]) {\n    simple = true;\n  }\n  if (simple) O[key] = value;\n  else createNonEnumerableProperty(O, key, value);\n// add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative\n})(Function.prototype, 'toString', function toString() {\n  return typeof this == 'function' && getInternalState(this).source || inspectSource(this);\n});\n","var store = require('../internals/shared-store');\n\nvar functionToString = Function.toString;\n\n// this helper broken in `core-js@3.4.1-3.4.4`, so we can't use `shared` helper\nif (typeof store.inspectSource != 'function') {\n  store.inspectSource = function (it) {\n    return functionToString.call(it);\n  };\n}\n\nmodule.exports = store.inspectSource;\n","var NATIVE_WEAK_MAP = require('../internals/native-weak-map');\nvar global = require('../internals/global');\nvar isObject = require('../internals/is-object');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar objectHas = require('../internals/has');\nvar shared = require('../internals/shared-store');\nvar sharedKey = require('../internals/shared-key');\nvar hiddenKeys = require('../internals/hidden-keys');\n\nvar OBJECT_ALREADY_INITIALIZED = 'Object already initialized';\nvar WeakMap = global.WeakMap;\nvar set, get, has;\n\nvar enforce = function (it) {\n  return has(it) ? get(it) : set(it, {});\n};\n\nvar getterFor = function (TYPE) {\n  return function (it) {\n    var state;\n    if (!isObject(it) || (state = get(it)).type !== TYPE) {\n      throw TypeError('Incompatible receiver, ' + TYPE + ' required');\n    } return state;\n  };\n};\n\nif (NATIVE_WEAK_MAP || shared.state) {\n  var store = shared.state || (shared.state = new WeakMap());\n  var wmget = store.get;\n  var wmhas = store.has;\n  var wmset = store.set;\n  set = function (it, metadata) {\n    if (wmhas.call(store, it)) throw new TypeError(OBJECT_ALREADY_INITIALIZED);\n    metadata.facade = it;\n    wmset.call(store, it, metadata);\n    return metadata;\n  };\n  get = function (it) {\n    return wmget.call(store, it) || {};\n  };\n  has = function (it) {\n    return wmhas.call(store, it);\n  };\n} else {\n  var STATE = sharedKey('state');\n  hiddenKeys[STATE] = true;\n  set = function (it, metadata) {\n    if (objectHas(it, STATE)) throw new TypeError(OBJECT_ALREADY_INITIALIZED);\n    metadata.facade = it;\n    createNonEnumerableProperty(it, STATE, metadata);\n    return metadata;\n  };\n  get = function (it) {\n    return objectHas(it, STATE) ? it[STATE] : {};\n  };\n  has = function (it) {\n    return objectHas(it, STATE);\n  };\n}\n\nmodule.exports = {\n  set: set,\n  get: get,\n  has: has,\n  enforce: enforce,\n  getterFor: getterFor\n};\n","var global = require('../internals/global');\nvar inspectSource = require('../internals/inspect-source');\n\nvar WeakMap = global.WeakMap;\n\nmodule.exports = typeof WeakMap === 'function' && /native code/.test(inspectSource(WeakMap));\n","var shared = require('../internals/shared');\nvar uid = require('../internals/uid');\n\nvar keys = shared('keys');\n\nmodule.exports = function (key) {\n  return keys[key] || (keys[key] = uid(key));\n};\n","module.exports = {};\n","var has = require('../internals/has');\nvar ownKeys = require('../internals/own-keys');\nvar getOwnPropertyDescriptorModule = require('../internals/object-get-own-property-descriptor');\nvar definePropertyModule = require('../internals/object-define-property');\n\nmodule.exports = function (target, source) {\n  var keys = ownKeys(source);\n  var defineProperty = definePropertyModule.f;\n  var getOwnPropertyDescriptor = getOwnPropertyDescriptorModule.f;\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i];\n    if (!has(target, key)) defineProperty(target, key, getOwnPropertyDescriptor(source, key));\n  }\n};\n","var getBuiltIn = require('../internals/get-built-in');\nvar getOwnPropertyNamesModule = require('../internals/object-get-own-property-names');\nvar getOwnPropertySymbolsModule = require('../internals/object-get-own-property-symbols');\nvar anObject = require('../internals/an-object');\n\n// all object keys, includes non-enumerable and symbols\nmodule.exports = getBuiltIn('Reflect', 'ownKeys') || function ownKeys(it) {\n  var keys = getOwnPropertyNamesModule.f(anObject(it));\n  var getOwnPropertySymbols = getOwnPropertySymbolsModule.f;\n  return getOwnPropertySymbols ? keys.concat(getOwnPropertySymbols(it)) : keys;\n};\n","var internalObjectKeys = require('../internals/object-keys-internal');\nvar enumBugKeys = require('../internals/enum-bug-keys');\n\nvar hiddenKeys = enumBugKeys.concat('length', 'prototype');\n\n// `Object.getOwnPropertyNames` method\n// https://tc39.es/ecma262/#sec-object.getownpropertynames\n// eslint-disable-next-line es/no-object-getownpropertynames -- safe\nexports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {\n  return internalObjectKeys(O, hiddenKeys);\n};\n","var has = require('../internals/has');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar indexOf = require('../internals/array-includes').indexOf;\nvar hiddenKeys = require('../internals/hidden-keys');\n\nmodule.exports = function (object, names) {\n  var O = toIndexedObject(object);\n  var i = 0;\n  var result = [];\n  var key;\n  for (key in O) !has(hiddenKeys, key) && has(O, key) && result.push(key);\n  // Don't enum bug & hidden keys\n  while (names.length > i) if (has(O, key = names[i++])) {\n    ~indexOf(result, key) || result.push(key);\n  }\n  return result;\n};\n","var toIndexedObject = require('../internals/to-indexed-object');\nvar toLength = require('../internals/to-length');\nvar toAbsoluteIndex = require('../internals/to-absolute-index');\n\n// `Array.prototype.{ indexOf, includes }` methods implementation\nvar createMethod = function (IS_INCLUDES) {\n  return function ($this, el, fromIndex) {\n    var O = toIndexedObject($this);\n    var length = toLength(O.length);\n    var index = toAbsoluteIndex(fromIndex, length);\n    var value;\n    // Array#includes uses SameValueZero equality algorithm\n    // eslint-disable-next-line no-self-compare -- NaN check\n    if (IS_INCLUDES && el != el) while (length > index) {\n      value = O[index++];\n      // eslint-disable-next-line no-self-compare -- NaN check\n      if (value != value) return true;\n    // Array#indexOf ignores holes, Array#includes - not\n    } else for (;length > index; index++) {\n      if ((IS_INCLUDES || index in O) && O[index] === el) return IS_INCLUDES || index || 0;\n    } return !IS_INCLUDES && -1;\n  };\n};\n\nmodule.exports = {\n  // `Array.prototype.includes` method\n  // https://tc39.es/ecma262/#sec-array.prototype.includes\n  includes: createMethod(true),\n  // `Array.prototype.indexOf` method\n  // https://tc39.es/ecma262/#sec-array.prototype.indexof\n  indexOf: createMethod(false)\n};\n","var toInteger = require('../internals/to-integer');\n\nvar min = Math.min;\n\n// `ToLength` abstract operation\n// https://tc39.es/ecma262/#sec-tolength\nmodule.exports = function (argument) {\n  return argument > 0 ? min(toInteger(argument), 0x1FFFFFFFFFFFFF) : 0; // 2 ** 53 - 1 == 9007199254740991\n};\n","var ceil = Math.ceil;\nvar floor = Math.floor;\n\n// `ToInteger` abstract operation\n// https://tc39.es/ecma262/#sec-tointeger\nmodule.exports = function (argument) {\n  return isNaN(argument = +argument) ? 0 : (argument > 0 ? floor : ceil)(argument);\n};\n","var toInteger = require('../internals/to-integer');\n\nvar max = Math.max;\nvar min = Math.min;\n\n// Helper for a popular repeating case of the spec:\n// Let integer be ? ToInteger(index).\n// If integer < 0, let result be max((length + integer), 0); else let result be min(integer, length).\nmodule.exports = function (index, length) {\n  var integer = toInteger(index);\n  return integer < 0 ? max(integer + length, 0) : min(integer, length);\n};\n","// IE8- don't enum bug keys\nmodule.exports = [\n  'constructor',\n  'hasOwnProperty',\n  'isPrototypeOf',\n  'propertyIsEnumerable',\n  'toLocaleString',\n  'toString',\n  'valueOf'\n];\n","// eslint-disable-next-line es/no-object-getownpropertysymbols -- safe\nexports.f = Object.getOwnPropertySymbols;\n","var fails = require('../internals/fails');\n\nvar replacement = /#|\\.prototype\\./;\n\nvar isForced = function (feature, detection) {\n  var value = data[normalize(feature)];\n  return value == POLYFILL ? true\n    : value == NATIVE ? false\n    : typeof detection == 'function' ? fails(detection)\n    : !!detection;\n};\n\nvar normalize = isForced.normalize = function (string) {\n  return String(string).replace(replacement, '.').toLowerCase();\n};\n\nvar data = isForced.data = {};\nvar NATIVE = isForced.NATIVE = 'N';\nvar POLYFILL = isForced.POLYFILL = 'P';\n\nmodule.exports = isForced;\n","/*!\n* DOMMatrix v0.0.6 (https://github.com/thednp/dommatrix)\n* Copyright 2021 © thednp\n* Licensed under MIT (https://github.com/thednp/DOMMatrix/blob/master/LICENSE)\n*/\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.CSSMatrix = factory());\n}(this, (function () { 'use strict';\n\n  /**\n   * DOMMatrix shim - CSSMatrix\n   *\n   * Creates and returns a new `DOMMatrix` compatible *Object*\n   * with equivalent instance methods.\n   *\n   * https://developer.mozilla.org/en-US/docs/Web/API/DOMMatrix\n   * https://github.com/thednp/DOMMatrix/\n   *\n   * @param {String} String valid CSS transform in `matrix()`/`matrix3d()` format\n   * @param {Array} Array expected to be *Float64Array* or *Float32Array* in the column major order.\n   * @param {[a,b,c,d,e,f]} Arguments representing the 6 elements of a 2d matrix\n   * @param {[m11,m21,m31,m41..]} Arguments representing the 16 elements of a 3d matrix\n   */\n\n  var CSSMatrix = function CSSMatrix() {\n    var args = [], len = arguments.length;\n    while ( len-- ) args[ len ] = arguments[ len ];\n\n    this.setIdentity();\n    return args && args.length && this.setMatrixValue(args);\n  };\n\n  var prototypeAccessors = { isIdentity: { configurable: true },is2D: { configurable: true } };\n\n  /**\n   * A `Boolean` whose value is `true` if the matrix is the identity matrix. The identity\n   * matrix is one in which every value is 0 except those on the main diagonal from top-left\n   * to bottom-right corner (in other words, where the offsets in each direction are equal).\n   *\n   * @return {Boolean} `Boolean` the current property value\n   */\n  prototypeAccessors.isIdentity.get = function () {\n    var m = this;\n    return (m.m11 === 1 && m.m12 === 0 && m.m13 === 0 && m.m14 === 0\n            && m.m21 === 0 && m.m22 === 1 && m.m23 === 0 && m.m24 === 0\n            && m.m31 === 0 && m.m32 === 0 && m.m33 === 1 && m.m34 === 0\n            && m.m41 === 0 && m.m42 === 0 && m.m43 === 0 && m.m44 === 1);\n  };\n\n  /**\n   * Sets a new `Boolean` flag value for `this.isIdentity` matrix property.\n   *\n   * @param {Boolean} value sets a new `Boolean` flag for this property\n   */\n  prototypeAccessors.isIdentity.set = function (value) {\n    this.isIdentity = value;\n  };\n\n  /**\n   * A `Boolean` flag whose value is `true` if the matrix was initialized as a 2D matrix\n   * and `false` if the matrix is 3D.\n   *\n   * @return {Boolean} `Boolean` the current property value\n   */\n  prototypeAccessors.is2D.get = function () {\n    var m = this;\n    return (m.m31 === 0 && m.m32 === 0 && m.m33 === 1 && m.m34 === 0 && m.m43 === 0 && m.m44 === 1);\n  };\n\n  /**\n   * Sets a new `Boolean` flag value for `this.is2D` matrix property.\n   *\n   * @param {Boolean} value sets a new `Boolean` flag for this property\n   */\n  prototypeAccessors.is2D.set = function (value) {\n    this.is2D = value;\n  };\n\n  Object.defineProperties( CSSMatrix.prototype, prototypeAccessors );\n\n  // export proto for custom compile via Buble\n  var CSSMatrixProto = CSSMatrix.prototype;\n\n  // Transform Functions\n  // https://www.w3.org/TR/css-transforms-1/#transform-functions\n\n  /**\n   * Creates a new `CSSMatrix` for the translation matrix and returns it.\n   * This method is equivalent to the CSS `translate3d()` function.\n   *\n   * https://developer.mozilla.org/en-US/docs/Web/CSS/transform-function/translate3d\n   *\n   * @param {Number} x the `x-axis` position.\n   * @param {Number} y the `y-axis` position.\n   * @param {Number} z the `z-axis` position.\n   */\n  function Translate(x, y, z) {\n    var m = new CSSMatrix();\n    m.m41 = x;\n    m.e = x;\n    m.m42 = y;\n    m.f = y;\n    m.m43 = z;\n    return m;\n  }\n\n  /**\n   * Creates a new `CSSMatrix` for the rotation matrix and returns it.\n   *\n   * http://en.wikipedia.org/wiki/Rotation_matrix\n   *\n   * @param {Number} rx the `x-axis` rotation.\n   * @param {Number} ry the `y-axis` rotation.\n   * @param {Number} rz the `z-axis` rotation.\n   */\n\n  function Rotate(rx, ry, rz) {\n    var m = new CSSMatrix();\n\n    var radX = (rx * Math.PI) / 180;\n    var radY = (ry * Math.PI) / 180;\n    var radZ = (rz * Math.PI) / 180;\n\n    // minus sin() because of right-handed system\n    var cosx = Math.cos(radX);\n    var sinx = -Math.sin(radX);\n    var cosy = Math.cos(radY);\n    var siny = -Math.sin(radY);\n    var cosz = Math.cos(radZ);\n    var sinz = -Math.sin(radZ);\n\n    var cycz = cosy * cosz;\n    var cysz = -cosy * sinz;\n\n    m.m11 = cycz;\n    m.a = cycz;\n\n    m.m12 = cysz;\n    m.b = cysz;\n\n    m.m13 = siny;\n\n    var sxsy = sinx * siny * cosz + cosx * sinz;\n    m.m21 = sxsy;\n    m.c = sxsy;\n\n    var cxcz = cosx * cosz - sinx * siny * sinz;\n    m.m22 = cxcz;\n    m.d = cxcz;\n\n    m.m23 = -sinx * cosy;\n\n    m.m31 = sinx * sinz - cosx * siny * cosz;\n    m.m32 = sinx * cosz + cosx * siny * sinz;\n    m.m33 = cosx * cosy;\n\n    return m;\n  }\n\n  /**\n   * Creates a new `CSSMatrix` for the rotation matrix and returns it.\n   * This method is equivalent to the CSS `rotate3d()` function.\n   *\n   * https://developer.mozilla.org/en-US/docs/Web/CSS/transform-function/rotate3d\n   *\n   * @param {Number} x the `x-axis` vector length.\n   * @param {Number} y the `y-axis` vector length.\n   * @param {Number} z the `z-axis` vector length.\n   * @param {Number} angle the value in degrees of the rotation.\n   */\n  function RotateAxisAngle(x, y, z, angle) {\n    var m = new CSSMatrix();\n    var radA = (angle * Math.PI) / 360;\n    var sinA = Math.sin(radA);\n    var cosA = Math.cos(radA);\n    var sinA2 = sinA * sinA;\n    var length = Math.sqrt(x * x + y * y + z * z);\n    var X = 0;\n    var Y = 0;\n    var Z = 1;\n\n    // bad vector length, use something reasonable\n    if (length !== 0) {\n      X = x / length;\n      Y = y / length;\n      Z = z / length;\n    }\n\n    var x2 = X * X;\n    var y2 = Y * Y;\n    var z2 = Z * Z;\n\n    var m11 = 1 - 2 * (y2 + z2) * sinA2;\n    m.m11 = m11;\n    m.a = m11;\n\n    var m12 = 2 * (x * y * sinA2 + z * sinA * cosA);\n    m.m12 = m12;\n    m.b = m12;\n\n    m.m13 = 2 * (x * z * sinA2 - y * sinA * cosA);\n\n    var m21 = 2 * (y * x * sinA2 - z * sinA * cosA);\n    m.m21 = m21;\n    m.c = m21;\n\n    var m22 = 1 - 2 * (z2 + x2) * sinA2;\n    m.m22 = m22;\n    m.d = m22;\n\n    m.m23 = 2 * (y * z * sinA2 + x * sinA * cosA);\n    m.m31 = 2 * (z * x * sinA2 + y * sinA * cosA);\n    m.m32 = 2 * (z * y * sinA2 - x * sinA * cosA);\n    m.m33 = 1 - 2 * (x2 + y2) * sinA2;\n\n    m.m14 = 0;\n    m.m24 = 0;\n    m.m34 = 0;\n\n    m.m41 = 0;\n    m.e = 0;\n    m.m42 = 0;\n    m.f = 0;\n    m.m43 = 0;\n\n    m.m44 = 1;\n\n    return m;\n  }\n\n  /**\n   * Creates a new `CSSMatrix` for the scale matrix and returns it.\n   * This method is equivalent to the CSS `scale3d()` function.\n   *\n   * https://developer.mozilla.org/en-US/docs/Web/CSS/transform-function/scale3d\n   *\n   * @param {Number} x the `x-axis` scale.\n   * @param {Number} y the `y-axis` scale.\n   * @param {Number} z the `z-axis` scale.\n   */\n  function Scale(x, y, z) {\n    var m = new CSSMatrix();\n    m.m11 = x;\n    m.a = x;\n\n    m.m22 = y;\n    m.d = y;\n\n    m.m33 = z;\n    return m;\n  }\n\n  /**\n   * Creates a new `CSSMatrix` for the shear of the `x-axis` rotation matrix and\n   * returns it. This method is equivalent to the CSS `skewX()` function.\n   *\n   * https://developer.mozilla.org/en-US/docs/Web/CSS/transform-function/skewX\n   *\n   * @param {Number} angle the angle in degrees.\n   */\n  function SkewX(angle) {\n    var radA = (angle * Math.PI) / 180;\n    var m = new CSSMatrix();\n    var t = Math.tan(radA);\n    m.m21 = t;\n    m.c = t;\n    return m;\n  }\n\n  /**\n   * Creates a new `CSSMatrix` for the shear of the `y-axis` rotation matrix and\n   * returns it. This method is equivalent to the CSS `skewY()` function.\n   *\n   * https://developer.mozilla.org/en-US/docs/Web/CSS/transform-function/skewY\n   *\n   * @param {Number} angle the angle in degrees.\n   */\n  function SkewY(angle) {\n    var radA = (angle * Math.PI) / 180;\n    var m = new CSSMatrix();\n    var t = Math.tan(radA);\n    m.m12 = t;\n    m.b = t;\n    return m;\n  }\n\n  /**\n   * Creates a new `CSSMatrix` resulted from the multiplication of two matrixes\n   * and returns it. Both matrixes are not changed.\n   *\n   * @param {CSSMatrix} m1 the first matrix.\n   * @param {CSSMatrix} m2 the second matrix.\n   */\n  function Multiply(m1, m2) {\n    var m11 = m2.m11 * m1.m11 + m2.m12 * m1.m21 + m2.m13 * m1.m31 + m2.m14 * m1.m41;\n    var m12 = m2.m11 * m1.m12 + m2.m12 * m1.m22 + m2.m13 * m1.m32 + m2.m14 * m1.m42;\n    var m13 = m2.m11 * m1.m13 + m2.m12 * m1.m23 + m2.m13 * m1.m33 + m2.m14 * m1.m43;\n    var m14 = m2.m11 * m1.m14 + m2.m12 * m1.m24 + m2.m13 * m1.m34 + m2.m14 * m1.m44;\n\n    var m21 = m2.m21 * m1.m11 + m2.m22 * m1.m21 + m2.m23 * m1.m31 + m2.m24 * m1.m41;\n    var m22 = m2.m21 * m1.m12 + m2.m22 * m1.m22 + m2.m23 * m1.m32 + m2.m24 * m1.m42;\n    var m23 = m2.m21 * m1.m13 + m2.m22 * m1.m23 + m2.m23 * m1.m33 + m2.m24 * m1.m43;\n    var m24 = m2.m21 * m1.m14 + m2.m22 * m1.m24 + m2.m23 * m1.m34 + m2.m24 * m1.m44;\n\n    var m31 = m2.m31 * m1.m11 + m2.m32 * m1.m21 + m2.m33 * m1.m31 + m2.m34 * m1.m41;\n    var m32 = m2.m31 * m1.m12 + m2.m32 * m1.m22 + m2.m33 * m1.m32 + m2.m34 * m1.m42;\n    var m33 = m2.m31 * m1.m13 + m2.m32 * m1.m23 + m2.m33 * m1.m33 + m2.m34 * m1.m43;\n    var m34 = m2.m31 * m1.m14 + m2.m32 * m1.m24 + m2.m33 * m1.m34 + m2.m34 * m1.m44;\n\n    var m41 = m2.m41 * m1.m11 + m2.m42 * m1.m21 + m2.m43 * m1.m31 + m2.m44 * m1.m41;\n    var m42 = m2.m41 * m1.m12 + m2.m42 * m1.m22 + m2.m43 * m1.m32 + m2.m44 * m1.m42;\n    var m43 = m2.m41 * m1.m13 + m2.m42 * m1.m23 + m2.m43 * m1.m33 + m2.m44 * m1.m43;\n    var m44 = m2.m41 * m1.m14 + m2.m42 * m1.m24 + m2.m43 * m1.m34 + m2.m44 * m1.m44;\n\n    return new CSSMatrix(\n      [m11, m21, m31, m41,\n        m12, m22, m32, m42,\n        m13, m23, m33, m43,\n        m14, m24, m34, m44]\n    );\n  }\n\n  /**\n   * Returns a new *Float32Array* containing all 16 elements which comprise the matrix.\n   * The elements are stored into the array as single-precision floating-point numbers\n   * in column-major (colexographical access access or \"colex\") order.\n   *\n   * @return {Float32Array} matrix elements (m11, m21, m31, m41, ..)\n   */\n  // toFloat32Array(){\n  //   return Float32Array.from(this.toArray());\n  // }\n\n  /**\n   * Returns a new Float64Array containing all 16 elements which comprise the matrix.\n   * The elements are stored into the array as double-precision floating-point numbers\n   * in column-major (colexographical access access or \"colex\") order.\n   *\n   * @return {Float64Array} matrix elements (m11, m21, m31, m41, ..)\n   */\n  // toFloat64Array(){\n  //   return Float64Array.from(this.toArray());\n  // }\n\n  /**\n   * Creates a new mutable `CSSMatrix` object given an existing matrix or a\n   * `DOMMatrix` *Object* which provides the values for its properties.\n   *\n   * @param {CSSMatrix} CSSMatrix the source `CSSMatrix` initialization to feed values from\n   */\n  function fromMatrix(m) {\n    return new CSSMatrix(\n      // DOMMatrix elements order\n      [m.m11, m.m21, m.m31, m.m41,\n        m.m12, m.m22, m.m32, m.m42,\n        m.m13, m.m23, m.m33, m.m43,\n        m.m14, m.m24, m.m34, m.m44]\n    );\n  }\n\n  /**\n   * Feed a CSSMatrix object with the values of a 6/16 values array and returns it.\n   *\n   * @param {Array} array The source `Array` to feed values from.\n   * @return {CSSMatrix} a The source array to feed values from.\n   */\n  function feedFromArray(m, array) {\n    var a = Array.from(array);\n    if (a.length === 16) {\n      var m11 = a[0];\n      var m21 = a[1];\n      var m31 = a[2];\n      var m41 = a[3];\n      var m12 = a[4];\n      var m22 = a[5];\n      var m32 = a[6];\n      var m42 = a[7];\n      var m13 = a[8];\n      var m23 = a[9];\n      var m33 = a[10];\n      var m43 = a[11];\n      var m14 = a[12];\n      var m24 = a[13];\n      var m34 = a[14];\n      var m44 = a[15];\n\n      m.m11 = m11;\n      m.a = m11;\n\n      m.m21 = m21;\n      m.c = m21;\n\n      m.m31 = m31;\n\n      m.m41 = m41;\n      m.e = m41;\n\n      m.m12 = m12;\n      m.b = m12;\n\n      m.m22 = m22;\n      m.d = m22;\n\n      m.m32 = m32;\n\n      m.m42 = m42;\n      m.f = m42;\n\n      m.m13 = m13;\n      m.m23 = m23;\n      m.m33 = m33;\n      m.m43 = m43;\n      m.m14 = m14;\n      m.m24 = m24;\n      m.m34 = m34;\n      m.m44 = m44;\n    } else if (a.length === 6) {\n      var m11$1 = a[0];\n      var m12$1 = a[1];\n      var m21$1 = a[2];\n      var m22$1 = a[3];\n      var m14$1 = a[4];\n      var m24$1 = a[5];\n\n      m.m11 = m11$1;\n      m.a = m11$1;\n\n      m.m12 = m12$1;\n      m.b = m12$1;\n\n      m.m21 = m21$1;\n      m.c = m21$1;\n\n      m.m22 = m22$1;\n      m.d = m22$1;\n\n      m.m14 = m14$1;\n      m.e = m14$1;\n\n      m.m24 = m24$1;\n      m.f = m24$1;\n    } else {\n      throw new TypeError('CSSMatrix: expecting a 6/16 values Array');\n    }\n    return m;\n  }\n\n  /**\n   * Creates a new mutable `CSSMatrix` object given an array float values.\n   *\n   * If the array has six values, the result is a 2D matrix; if the array has 16 values,\n   * the result is a 3D matrix. Otherwise, a TypeError exception is thrown.\n   *\n   * @param {Array} array The source `Array` to feed values from.\n   * @return {CSSMatrix} a The source array to feed values from.\n   */\n  function fromArray(a) {\n    return feedFromArray(new CSSMatrix(), a);\n  }\n\n  /**\n   * Each create a new mutable `CSSMatrix` object given an array of single/double-precision\n   * (32/64 bit) floating-point values.\n   *\n   * If the array has six values, the result is a 2D matrix; if the array has 16 values,\n   * the result is a 3D matrix. Otherwise, a TypeError exception is thrown.\n   *\n   * @param {Float32Array|Float64Array} array The source float array to feed values from.\n   * @return {CSSMatrix} a The source array to feed values from.\n   */\n  // more of an alias for now, will update later if it's the case\n  // function fromFloat32Array(a){\n  //   return feedFromArray(new CSSMatrix(), a);\n  // }\n  // function fromFloat64Array(a){ // more of an alias\n  //   return feedFromArray(new CSSMatrix(), a);\n  // }\n\n  /**\n   * The `setMatrixValue` method replaces the existing matrix with one computed\n   * in the browser. EG: `matrix(1,0.25,-0.25,1,0,0)`\n   *\n   * The method accepts *Float64Array* / *Float32Array* / any *Array* values, the result of\n   * `DOMMatrix` / `CSSMatrix` instance method calls `toFloat64Array()` / `toFloat32Array()`.\n   *\n   * This method expects valid *matrix()* / *matrix3d()* string values, other\n   * transform functions like *translate()* are not supported.\n   *\n   * @param {String} source the *String* resulted from `getComputedStyle()`.\n   * @param {Array} source the *Array* resulted from `toFloat64Array()`.\n   */\n  CSSMatrixProto.setMatrixValue = function setMatrixValue(source) {\n    var m = this;\n\n    if (!source || !source.length) { // no parameters or source\n      return m;\n    } if (source.length && typeof source[0] === 'string' && source[0].length) { // CSS transform String source\n      var string = String(source[0]).trim();\n      var type = '';\n      var values = [];\n\n      if (string === 'none') { return m; }\n\n      type = string.slice(0, string.indexOf('('));\n      values = string.slice((type === 'matrix' ? 7 : 9), -1).split(',')\n        .map(function (n) { return (Math.abs(n) < 1e-6 ? 0 : +n); });\n\n      if ([6, 16].indexOf(values.length) > -1) {\n        feedFromArray(m, values);\n      } else {\n        throw new TypeError('CSSMatrix: expecting valid CSS matrix() / matrix3d() syntax');\n      }\n    } else if (source[0] instanceof CSSMatrix) { // CSSMatrix instance\n      feedFromArray(m, source[0].toArray());\n    } else if (Array.isArray(source[0])) { // Float32Array,Float64Array source\n      feedFromArray(m, source[0]);\n    } else if (Array.isArray(source)) { // Arguments list come here\n      feedFromArray(m, source);\n    }\n    return m;\n  };\n\n  /**\n   * Creates and returns a string representation of the matrix in `CSS` matrix syntax,\n   * using the appropriate `CSS` matrix notation.\n   *\n   * The 16 items in the array 3D matrix array are *transposed* in row-major order.\n   *\n   * @matrix3d *matrix3d(m11, m12, m13, m14, m21, ...)*\n   * @matrix *matrix(a, b, c, d, e, f)*\n   *\n   * @return {String} `String` representation of the matrix\n   */\n  CSSMatrixProto.toString = function toString() {\n    var m = this;\n    var type = m.is2D ? 'matrix' : 'matrix3d';\n\n    return (type + \"(\" + (m.toArray(1).join(',')) + \")\");\n  };\n\n  /**\n   * Returns an *Array* containing all 16 elements which comprise the matrix.\n   * The method can return either the elements in default column major order or\n   * row major order (what we call the *transposed* matrix, used by `toString`).\n   *\n   * Other methods make use of this method to feed their output values from this matrix.\n   *\n   * @param {Boolean} transposed changes the order of elements in the output\n   * @return {Array} an *Array* representation of the matrix\n   */\n  CSSMatrixProto.toArray = function toArray(transposed) {\n    var m = this;\n    var result;\n\n    if (m.is2D) {\n      result = [m.a, m.b, m.c, m.d, m.e, m.f];\n    } else if (transposed) {\n      result = [m.m11, m.m12, m.m13, m.m14, // transposed is used by toString\n        m.m21, m.m22, m.m23, m.m24,\n        m.m31, m.m32, m.m33, m.m34,\n        m.m41, m.m42, m.m43, m.m44];\n    } else {\n      result = [m.m11, m.m21, m.m31, m.m41, // used by constructor\n        m.m12, m.m22, m.m32, m.m42,\n        m.m13, m.m23, m.m33, m.m43,\n        m.m14, m.m24, m.m34, m.m44];\n    }\n    return result;\n  };\n\n  /**\n   * The Multiply method returns a new CSSMatrix which is the result of this\n   * matrix multiplied by the passed matrix, with the passed matrix to the right.\n   * This matrix is not modified.\n   *\n   * @param {CSSMatrix} m2 CSSMatrix\n   * @return {CSSMatrix} The result matrix.\n   */\n  CSSMatrixProto.multiply = function multiply(m2) {\n    return Multiply(this, m2);\n  };\n\n  /**\n   *\n   * These methods will be implemented later into an extended version to provide\n   * additional functionality.\n   */\n  // inverse = function(){}\n  // determinant = function(){}\n  // transpose = function(){}\n\n  /**\n   * The translate method returns a new matrix which is this matrix post\n   * multiplied by a translation matrix containing the passed values. If the z\n   * component is undefined, a 0 value is used in its place. This matrix is not\n   * modified.\n   *\n   * @param {number} x X component of the translation value.\n   * @param {number} y Y component of the translation value.\n   * @param {number=} z Z component of the translation value.\n   * @return {CSSMatrix} The result matrix\n   */\n\n  CSSMatrixProto.translate = function translate(x, y, z) {\n    var X = x;\n    var Y = y;\n    var Z = z;\n    if (Z == null) { Z = 0; }\n    if (Y == null) { Y = 0; }\n    return Multiply(this, Translate(X, Y, Z));\n  };\n\n  /**\n   * The scale method returns a new matrix which is this matrix post multiplied by\n   * a scale matrix containing the passed values. If the z component is undefined,\n   * a 1 value is used in its place. If the y component is undefined, the x\n   * component value is used in its place. This matrix is not modified.\n   *\n   * @param {number} x The X component of the scale value.\n   * @param {number=} y The Y component of the scale value.\n   * @param {number=} z The Z component of the scale value.\n   * @return {CSSMatrix} The result matrix\n   */\n  CSSMatrixProto.scale = function scale(x, y, z) {\n    var X = x;\n    var Y = y;\n    var Z = z;\n    if (Y == null) { Y = x; }\n    if (Z == null) { Z = x; }\n\n    return Multiply(this, Scale(X, Y, Z));\n  };\n\n  /**\n   * The rotate method returns a new matrix which is this matrix post multiplied\n   * by each of 3 rotation matrices about the major axes, first X, then Y, then Z.\n   * If the y and z components are undefined, the x value is used to rotate the\n   * object about the z axis, as though the vector (0,0,x) were passed. All\n   * rotation values are in degrees. This matrix is not modified.\n   *\n   * @param {number} rx The X component of the rotation, or Z if Y and Z are null.\n   * @param {number=} ry The (optional) Y component of the rotation value.\n   * @param {number=} rz The (optional) Z component of the rotation value.\n   * @return {CSSMatrix} The result matrix\n   */\n  CSSMatrixProto.rotate = function rotate(rx, ry, rz) {\n    var RX = rx;\n    var RY = ry;\n    var RZ = rz;\n    if (RY == null) { RY = 0; }\n    if (RZ == null) { RZ = RX; RX = 0; }\n    return Multiply(this, Rotate(RX, RY, RZ));\n  };\n\n  /**\n   * The rotateAxisAngle method returns a new matrix which is this matrix post\n   * multiplied by a rotation matrix with the given axis and `angle`. The right-hand\n   * rule is used to determine the direction of rotation. All rotation values are\n   * in degrees. This matrix is not modified.\n   *\n   * @param {number} x The X component of the axis vector.\n   * @param {number} y The Y component of the axis vector.\n   * @param {number} z The Z component of the axis vector.\n   * @param {number} angle The angle of rotation about the axis vector, in degrees.\n   * @return {CSSMatrix} The `CSSMatrix` result\n   */\n\n  CSSMatrixProto.rotateAxisAngle = function rotateAxisAngle(x, y, z, angle) {\n    if (arguments.length !== 4) {\n      throw new TypeError('CSSMatrix: expecting 4 values');\n    }\n    return Multiply(this, RotateAxisAngle(x, y, z, angle));\n  };\n\n  /**\n   * Specifies a skew transformation along the `x-axis` by the given angle.\n   * This matrix is not modified.\n   *\n   * @param {number} angle The angle amount in degrees to skew.\n   * @return {CSSMatrix} The `CSSMatrix` result\n   */\n\n  CSSMatrixProto.skewX = function skewX(angle) {\n    return Multiply(this, SkewX(angle));\n  };\n\n  /**\n   * Specifies a skew transformation along the `y-axis` by the given angle.\n   * This matrix is not modified.\n   *\n   * @param {number} angle The angle amount in degrees to skew.\n   * @return {CSSMatrix} The `CSSMatrix` result\n   */\n\n  CSSMatrixProto.skewY = function skewY(angle) {\n    return Multiply(this, SkewY(angle));\n  };\n\n  /**\n   * Set the current `CSSMatrix` instance to the identity form and returns it.\n   *\n   * @return {CSSMatrix} this `CSSMatrix` instance\n   */\n  CSSMatrixProto.setIdentity = function setIdentity() {\n    var identity = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\n    return feedFromArray(this, identity);\n  };\n\n  /**\n   * Transforms the specified point using the matrix, returning a new\n   * *Object* containing the transformed point.\n   * Neither the matrix nor the original point are altered.\n   *\n   * The method is equivalent with `transformPoint()` method\n   * of the `DOMMatrix` constructor.\n   *\n   * JavaScript implementation by thednp\n   *\n   * @param {Point} point the *Object* with `x`, `y`, `z` and `w` components\n   * @return {Point} a new `{x,y,z,w}` *Object*\n   */\n  CSSMatrixProto.transformPoint = function transformPoint(v) {\n    var M = this;\n    var m = Translate(v.x, v.y, v.z);\n\n    m.m44 = v.w || 1;\n    m = M.multiply(m);\n\n    return {\n      x: m.m41,\n      y: m.m42,\n      z: m.m43,\n      w: m.m44,\n    };\n  };\n\n  /**\n   * Transforms the specified vector using the matrix, returning a new\n   * {x,y,z,w} *Object* comprising the transformed vector.\n   * Neither the matrix nor the original vector are altered.\n   *\n   * @param {Tuple} tupple an object with x, y, z and w components\n   * @return {Tuple} the passed tuple\n   */\n  CSSMatrixProto.transform = function transform(t) {\n    var m = this;\n    var x = m.m11 * t.x + m.m12 * t.y + m.m13 * t.z + m.m14 * t.w;\n    var y = m.m21 * t.x + m.m22 * t.y + m.m23 * t.z + m.m24 * t.w;\n    var z = m.m31 * t.x + m.m32 * t.y + m.m33 * t.z + m.m34 * t.w;\n    var w = m.m41 * t.x + m.m42 * t.y + m.m43 * t.z + m.m44 * t.w;\n\n    return {\n      x: x / w,\n      y: y / w,\n      z: z / w,\n      w: w,\n    };\n  };\n\n  // Add Transform Functions to CSSMatrix object\n  CSSMatrix.Translate = Translate;\n  CSSMatrix.Rotate = Rotate;\n  CSSMatrix.RotateAxisAngle = RotateAxisAngle;\n  CSSMatrix.Scale = Scale;\n  CSSMatrix.SkewX = SkewX;\n  CSSMatrix.SkewY = SkewY;\n  CSSMatrix.Multiply = Multiply;\n  CSSMatrix.fromMatrix = fromMatrix;\n  CSSMatrix.fromArray = fromArray;\n  CSSMatrix.feedFromArray = feedFromArray;\n\n  return CSSMatrix;\n\n})));\n","require('../../modules/es.array.iterator');\nrequire('../../modules/es.object.from-entries');\nvar path = require('../../internals/path');\n\nmodule.exports = path.Object.fromEntries;\n","'use strict';\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar addToUnscopables = require('../internals/add-to-unscopables');\nvar Iterators = require('../internals/iterators');\nvar InternalStateModule = require('../internals/internal-state');\nvar defineIterator = require('../internals/define-iterator');\n\nvar ARRAY_ITERATOR = 'Array Iterator';\nvar setInternalState = InternalStateModule.set;\nvar getInternalState = InternalStateModule.getterFor(ARRAY_ITERATOR);\n\n// `Array.prototype.entries` method\n// https://tc39.es/ecma262/#sec-array.prototype.entries\n// `Array.prototype.keys` method\n// https://tc39.es/ecma262/#sec-array.prototype.keys\n// `Array.prototype.values` method\n// https://tc39.es/ecma262/#sec-array.prototype.values\n// `Array.prototype[@@iterator]` method\n// https://tc39.es/ecma262/#sec-array.prototype-@@iterator\n// `CreateArrayIterator` internal method\n// https://tc39.es/ecma262/#sec-createarrayiterator\nmodule.exports = defineIterator(Array, 'Array', function (iterated, kind) {\n  setInternalState(this, {\n    type: ARRAY_ITERATOR,\n    target: toIndexedObject(iterated), // target\n    index: 0,                          // next index\n    kind: kind                         // kind\n  });\n// `%ArrayIteratorPrototype%.next` method\n// https://tc39.es/ecma262/#sec-%arrayiteratorprototype%.next\n}, function () {\n  var state = getInternalState(this);\n  var target = state.target;\n  var kind = state.kind;\n  var index = state.index++;\n  if (!target || index >= target.length) {\n    state.target = undefined;\n    return { value: undefined, done: true };\n  }\n  if (kind == 'keys') return { value: index, done: false };\n  if (kind == 'values') return { value: target[index], done: false };\n  return { value: [index, target[index]], done: false };\n}, 'values');\n\n// argumentsList[@@iterator] is %ArrayProto_values%\n// https://tc39.es/ecma262/#sec-createunmappedargumentsobject\n// https://tc39.es/ecma262/#sec-createmappedargumentsobject\nIterators.Arguments = Iterators.Array;\n\n// https://tc39.es/ecma262/#sec-array.prototype-@@unscopables\naddToUnscopables('keys');\naddToUnscopables('values');\naddToUnscopables('entries');\n","var wellKnownSymbol = require('../internals/well-known-symbol');\nvar create = require('../internals/object-create');\nvar definePropertyModule = require('../internals/object-define-property');\n\nvar UNSCOPABLES = wellKnownSymbol('unscopables');\nvar ArrayPrototype = Array.prototype;\n\n// Array.prototype[@@unscopables]\n// https://tc39.es/ecma262/#sec-array.prototype-@@unscopables\nif (ArrayPrototype[UNSCOPABLES] == undefined) {\n  definePropertyModule.f(ArrayPrototype, UNSCOPABLES, {\n    configurable: true,\n    value: create(null)\n  });\n}\n\n// add a key to Array.prototype[@@unscopables]\nmodule.exports = function (key) {\n  ArrayPrototype[UNSCOPABLES][key] = true;\n};\n","/* global ActiveXObject -- old IE, WSH */\nvar anObject = require('../internals/an-object');\nvar defineProperties = require('../internals/object-define-properties');\nvar enumBugKeys = require('../internals/enum-bug-keys');\nvar hiddenKeys = require('../internals/hidden-keys');\nvar html = require('../internals/html');\nvar documentCreateElement = require('../internals/document-create-element');\nvar sharedKey = require('../internals/shared-key');\n\nvar GT = '>';\nvar LT = '<';\nvar PROTOTYPE = 'prototype';\nvar SCRIPT = 'script';\nvar IE_PROTO = sharedKey('IE_PROTO');\n\nvar EmptyConstructor = function () { /* empty */ };\n\nvar scriptTag = function (content) {\n  return LT + SCRIPT + GT + content + LT + '/' + SCRIPT + GT;\n};\n\n// Create object with fake `null` prototype: use ActiveX Object with cleared prototype\nvar NullProtoObjectViaActiveX = function (activeXDocument) {\n  activeXDocument.write(scriptTag(''));\n  activeXDocument.close();\n  var temp = activeXDocument.parentWindow.Object;\n  activeXDocument = null; // avoid memory leak\n  return temp;\n};\n\n// Create object with fake `null` prototype: use iframe Object with cleared prototype\nvar NullProtoObjectViaIFrame = function () {\n  // Thrash, waste and sodomy: IE GC bug\n  var iframe = documentCreateElement('iframe');\n  var JS = 'java' + SCRIPT + ':';\n  var iframeDocument;\n  iframe.style.display = 'none';\n  html.appendChild(iframe);\n  // https://github.com/zloirock/core-js/issues/475\n  iframe.src = String(JS);\n  iframeDocument = iframe.contentWindow.document;\n  iframeDocument.open();\n  iframeDocument.write(scriptTag('document.F=Object'));\n  iframeDocument.close();\n  return iframeDocument.F;\n};\n\n// Check for document.domain and active x support\n// No need to use active x approach when document.domain is not set\n// see https://github.com/es-shims/es5-shim/issues/150\n// variation of https://github.com/kitcambridge/es5-shim/commit/4f738ac066346\n// avoid IE GC bug\nvar activeXDocument;\nvar NullProtoObject = function () {\n  try {\n    activeXDocument = new ActiveXObject('htmlfile');\n  } catch (error) { /* ignore */ }\n  NullProtoObject = typeof document != 'undefined'\n    ? document.domain && activeXDocument\n      ? NullProtoObjectViaActiveX(activeXDocument) // old IE\n      : NullProtoObjectViaIFrame()\n    : NullProtoObjectViaActiveX(activeXDocument); // WSH\n  var length = enumBugKeys.length;\n  while (length--) delete NullProtoObject[PROTOTYPE][enumBugKeys[length]];\n  return NullProtoObject();\n};\n\nhiddenKeys[IE_PROTO] = true;\n\n// `Object.create` method\n// https://tc39.es/ecma262/#sec-object.create\nmodule.exports = Object.create || function create(O, Properties) {\n  var result;\n  if (O !== null) {\n    EmptyConstructor[PROTOTYPE] = anObject(O);\n    result = new EmptyConstructor();\n    EmptyConstructor[PROTOTYPE] = null;\n    // add \"__proto__\" for Object.getPrototypeOf polyfill\n    result[IE_PROTO] = O;\n  } else result = NullProtoObject();\n  return Properties === undefined ? result : defineProperties(result, Properties);\n};\n","var DESCRIPTORS = require('../internals/descriptors');\nvar definePropertyModule = require('../internals/object-define-property');\nvar anObject = require('../internals/an-object');\nvar objectKeys = require('../internals/object-keys');\n\n// `Object.defineProperties` method\n// https://tc39.es/ecma262/#sec-object.defineproperties\n// eslint-disable-next-line es/no-object-defineproperties -- safe\nmodule.exports = DESCRIPTORS ? Object.defineProperties : function defineProperties(O, Properties) {\n  anObject(O);\n  var keys = objectKeys(Properties);\n  var length = keys.length;\n  var index = 0;\n  var key;\n  while (length > index) definePropertyModule.f(O, key = keys[index++], Properties[key]);\n  return O;\n};\n","var internalObjectKeys = require('../internals/object-keys-internal');\nvar enumBugKeys = require('../internals/enum-bug-keys');\n\n// `Object.keys` method\n// https://tc39.es/ecma262/#sec-object.keys\n// eslint-disable-next-line es/no-object-keys -- safe\nmodule.exports = Object.keys || function keys(O) {\n  return internalObjectKeys(O, enumBugKeys);\n};\n","var getBuiltIn = require('../internals/get-built-in');\n\nmodule.exports = getBuiltIn('document', 'documentElement');\n","module.exports = {};\n","'use strict';\nvar $ = require('../internals/export');\nvar createIteratorConstructor = require('../internals/create-iterator-constructor');\nvar getPrototypeOf = require('../internals/object-get-prototype-of');\nvar setPrototypeOf = require('../internals/object-set-prototype-of');\nvar setToStringTag = require('../internals/set-to-string-tag');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar redefine = require('../internals/redefine');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar IS_PURE = require('../internals/is-pure');\nvar Iterators = require('../internals/iterators');\nvar IteratorsCore = require('../internals/iterators-core');\n\nvar IteratorPrototype = IteratorsCore.IteratorPrototype;\nvar BUGGY_SAFARI_ITERATORS = IteratorsCore.BUGGY_SAFARI_ITERATORS;\nvar ITERATOR = wellKnownSymbol('iterator');\nvar KEYS = 'keys';\nvar VALUES = 'values';\nvar ENTRIES = 'entries';\n\nvar returnThis = function () { return this; };\n\nmodule.exports = function (Iterable, NAME, IteratorConstructor, next, DEFAULT, IS_SET, FORCED) {\n  createIteratorConstructor(IteratorConstructor, NAME, next);\n\n  var getIterationMethod = function (KIND) {\n    if (KIND === DEFAULT && defaultIterator) return defaultIterator;\n    if (!BUGGY_SAFARI_ITERATORS && KIND in IterablePrototype) return IterablePrototype[KIND];\n    switch (KIND) {\n      case KEYS: return function keys() { return new IteratorConstructor(this, KIND); };\n      case VALUES: return function values() { return new IteratorConstructor(this, KIND); };\n      case ENTRIES: return function entries() { return new IteratorConstructor(this, KIND); };\n    } return function () { return new IteratorConstructor(this); };\n  };\n\n  var TO_STRING_TAG = NAME + ' Iterator';\n  var INCORRECT_VALUES_NAME = false;\n  var IterablePrototype = Iterable.prototype;\n  var nativeIterator = IterablePrototype[ITERATOR]\n    || IterablePrototype['@@iterator']\n    || DEFAULT && IterablePrototype[DEFAULT];\n  var defaultIterator = !BUGGY_SAFARI_ITERATORS && nativeIterator || getIterationMethod(DEFAULT);\n  var anyNativeIterator = NAME == 'Array' ? IterablePrototype.entries || nativeIterator : nativeIterator;\n  var CurrentIteratorPrototype, methods, KEY;\n\n  // fix native\n  if (anyNativeIterator) {\n    CurrentIteratorPrototype = getPrototypeOf(anyNativeIterator.call(new Iterable()));\n    if (CurrentIteratorPrototype !== Object.prototype && CurrentIteratorPrototype.next) {\n      if (!IS_PURE && getPrototypeOf(CurrentIteratorPrototype) !== IteratorPrototype) {\n        if (setPrototypeOf) {\n          setPrototypeOf(CurrentIteratorPrototype, IteratorPrototype);\n        } else if (typeof CurrentIteratorPrototype[ITERATOR] != 'function') {\n          createNonEnumerableProperty(CurrentIteratorPrototype, ITERATOR, returnThis);\n        }\n      }\n      // Set @@toStringTag to native iterators\n      setToStringTag(CurrentIteratorPrototype, TO_STRING_TAG, true, true);\n      if (IS_PURE) Iterators[TO_STRING_TAG] = returnThis;\n    }\n  }\n\n  // fix Array.prototype.{ values, @@iterator }.name in V8 / FF\n  if (DEFAULT == VALUES && nativeIterator && nativeIterator.name !== VALUES) {\n    INCORRECT_VALUES_NAME = true;\n    defaultIterator = function values() { return nativeIterator.call(this); };\n  }\n\n  // define iterator\n  if ((!IS_PURE || FORCED) && IterablePrototype[ITERATOR] !== defaultIterator) {\n    createNonEnumerableProperty(IterablePrototype, ITERATOR, defaultIterator);\n  }\n  Iterators[NAME] = defaultIterator;\n\n  // export additional methods\n  if (DEFAULT) {\n    methods = {\n      values: getIterationMethod(VALUES),\n      keys: IS_SET ? defaultIterator : getIterationMethod(KEYS),\n      entries: getIterationMethod(ENTRIES)\n    };\n    if (FORCED) for (KEY in methods) {\n      if (BUGGY_SAFARI_ITERATORS || INCORRECT_VALUES_NAME || !(KEY in IterablePrototype)) {\n        redefine(IterablePrototype, KEY, methods[KEY]);\n      }\n    } else $({ target: NAME, proto: true, forced: BUGGY_SAFARI_ITERATORS || INCORRECT_VALUES_NAME }, methods);\n  }\n\n  return methods;\n};\n","'use strict';\nvar IteratorPrototype = require('../internals/iterators-core').IteratorPrototype;\nvar create = require('../internals/object-create');\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\nvar setToStringTag = require('../internals/set-to-string-tag');\nvar Iterators = require('../internals/iterators');\n\nvar returnThis = function () { return this; };\n\nmodule.exports = function (IteratorConstructor, NAME, next) {\n  var TO_STRING_TAG = NAME + ' Iterator';\n  IteratorConstructor.prototype = create(IteratorPrototype, { next: createPropertyDescriptor(1, next) });\n  setToStringTag(IteratorConstructor, TO_STRING_TAG, false, true);\n  Iterators[TO_STRING_TAG] = returnThis;\n  return IteratorConstructor;\n};\n","'use strict';\nvar fails = require('../internals/fails');\nvar create = require('../internals/object-create');\nvar getPrototypeOf = require('../internals/object-get-prototype-of');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar IS_PURE = require('../internals/is-pure');\n\nvar ITERATOR = wellKnownSymbol('iterator');\nvar BUGGY_SAFARI_ITERATORS = false;\n\n// `%IteratorPrototype%` object\n// https://tc39.es/ecma262/#sec-%iteratorprototype%-object\nvar IteratorPrototype, PrototypeOfArrayIteratorPrototype, arrayIterator;\n\n/* eslint-disable es/no-array-prototype-keys -- safe */\nif ([].keys) {\n  arrayIterator = [].keys();\n  // Safari 8 has buggy iterators w/o `next`\n  if (!('next' in arrayIterator)) BUGGY_SAFARI_ITERATORS = true;\n  else {\n    PrototypeOfArrayIteratorPrototype = getPrototypeOf(getPrototypeOf(arrayIterator));\n    if (PrototypeOfArrayIteratorPrototype !== Object.prototype) IteratorPrototype = PrototypeOfArrayIteratorPrototype;\n  }\n}\n\nvar NEW_ITERATOR_PROTOTYPE = IteratorPrototype == undefined || fails(function () {\n  var test = {};\n  // FF44- legacy iterators case\n  return IteratorPrototype[ITERATOR].call(test) !== test;\n});\n\nif (NEW_ITERATOR_PROTOTYPE) IteratorPrototype = {};\nelse if (IS_PURE) IteratorPrototype = create(IteratorPrototype);\n\n// `%IteratorPrototype%[@@iterator]()` method\n// https://tc39.es/ecma262/#sec-%iteratorprototype%-@@iterator\nif (typeof IteratorPrototype[ITERATOR] !== 'function') {\n  createNonEnumerableProperty(IteratorPrototype, ITERATOR, function () {\n    return this;\n  });\n}\n\nmodule.exports = {\n  IteratorPrototype: IteratorPrototype,\n  BUGGY_SAFARI_ITERATORS: BUGGY_SAFARI_ITERATORS\n};\n","var has = require('../internals/has');\nvar toObject = require('../internals/to-object');\nvar sharedKey = require('../internals/shared-key');\nvar CORRECT_PROTOTYPE_GETTER = require('../internals/correct-prototype-getter');\n\nvar IE_PROTO = sharedKey('IE_PROTO');\nvar ObjectPrototype = Object.prototype;\n\n// `Object.getPrototypeOf` method\n// https://tc39.es/ecma262/#sec-object.getprototypeof\n// eslint-disable-next-line es/no-object-getprototypeof -- safe\nmodule.exports = CORRECT_PROTOTYPE_GETTER ? Object.getPrototypeOf : function (O) {\n  O = toObject(O);\n  if (has(O, IE_PROTO)) return O[IE_PROTO];\n  if (typeof O.constructor == 'function' && O instanceof O.constructor) {\n    return O.constructor.prototype;\n  } return O instanceof Object ? ObjectPrototype : null;\n};\n","var fails = require('../internals/fails');\n\nmodule.exports = !fails(function () {\n  function F() { /* empty */ }\n  F.prototype.constructor = null;\n  // eslint-disable-next-line es/no-object-getprototypeof -- required for testing\n  return Object.getPrototypeOf(new F()) !== F.prototype;\n});\n","var defineProperty = require('../internals/object-define-property').f;\nvar has = require('../internals/has');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar TO_STRING_TAG = wellKnownSymbol('toStringTag');\n\nmodule.exports = function (it, TAG, STATIC) {\n  if (it && !has(it = STATIC ? it : it.prototype, TO_STRING_TAG)) {\n    defineProperty(it, TO_STRING_TAG, { configurable: true, value: TAG });\n  }\n};\n","/* eslint-disable no-proto -- safe */\nvar anObject = require('../internals/an-object');\nvar aPossiblePrototype = require('../internals/a-possible-prototype');\n\n// `Object.setPrototypeOf` method\n// https://tc39.es/ecma262/#sec-object.setprototypeof\n// Works with __proto__ only. Old v8 can't work with null proto objects.\n// eslint-disable-next-line es/no-object-setprototypeof -- safe\nmodule.exports = Object.setPrototypeOf || ('__proto__' in {} ? function () {\n  var CORRECT_SETTER = false;\n  var test = {};\n  var setter;\n  try {\n    // eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe\n    setter = Object.getOwnPropertyDescriptor(Object.prototype, '__proto__').set;\n    setter.call(test, []);\n    CORRECT_SETTER = test instanceof Array;\n  } catch (error) { /* empty */ }\n  return function setPrototypeOf(O, proto) {\n    anObject(O);\n    aPossiblePrototype(proto);\n    if (CORRECT_SETTER) setter.call(O, proto);\n    else O.__proto__ = proto;\n    return O;\n  };\n}() : undefined);\n","var isObject = require('../internals/is-object');\n\nmodule.exports = function (it) {\n  if (!isObject(it) && it !== null) {\n    throw TypeError(\"Can't set \" + String(it) + ' as a prototype');\n  } return it;\n};\n","var $ = require('../internals/export');\nvar iterate = require('../internals/iterate');\nvar createProperty = require('../internals/create-property');\n\n// `Object.fromEntries` method\n// https://github.com/tc39/proposal-object-from-entries\n$({ target: 'Object', stat: true }, {\n  fromEntries: function fromEntries(iterable) {\n    var obj = {};\n    iterate(iterable, function (k, v) {\n      createProperty(obj, k, v);\n    }, { AS_ENTRIES: true });\n    return obj;\n  }\n});\n","var anObject = require('../internals/an-object');\nvar isArrayIteratorMethod = require('../internals/is-array-iterator-method');\nvar toLength = require('../internals/to-length');\nvar bind = require('../internals/function-bind-context');\nvar getIterator = require('../internals/get-iterator');\nvar getIteratorMethod = require('../internals/get-iterator-method');\nvar iteratorClose = require('../internals/iterator-close');\n\nvar Result = function (stopped, result) {\n  this.stopped = stopped;\n  this.result = result;\n};\n\nmodule.exports = function (iterable, unboundFunction, options) {\n  var that = options && options.that;\n  var AS_ENTRIES = !!(options && options.AS_ENTRIES);\n  var IS_ITERATOR = !!(options && options.IS_ITERATOR);\n  var INTERRUPTED = !!(options && options.INTERRUPTED);\n  var fn = bind(unboundFunction, that, 1 + AS_ENTRIES + INTERRUPTED);\n  var iterator, iterFn, index, length, result, next, step;\n\n  var stop = function (condition) {\n    if (iterator) iteratorClose(iterator, 'normal', condition);\n    return new Result(true, condition);\n  };\n\n  var callFn = function (value) {\n    if (AS_ENTRIES) {\n      anObject(value);\n      return INTERRUPTED ? fn(value[0], value[1], stop) : fn(value[0], value[1]);\n    } return INTERRUPTED ? fn(value, stop) : fn(value);\n  };\n\n  if (IS_ITERATOR) {\n    iterator = iterable;\n  } else {\n    iterFn = getIteratorMethod(iterable);\n    if (typeof iterFn != 'function') throw TypeError('Target is not iterable');\n    // optimisation for array iterators\n    if (isArrayIteratorMethod(iterFn)) {\n      for (index = 0, length = toLength(iterable.length); length > index; index++) {\n        result = callFn(iterable[index]);\n        if (result && result instanceof Result) return result;\n      } return new Result(false);\n    }\n    iterator = getIterator(iterable, iterFn);\n  }\n\n  next = iterator.next;\n  while (!(step = next.call(iterator)).done) {\n    try {\n      result = callFn(step.value);\n    } catch (error) {\n      iteratorClose(iterator, 'throw', error);\n    }\n    if (typeof result == 'object' && result && result instanceof Result) return result;\n  } return new Result(false);\n};\n","var wellKnownSymbol = require('../internals/well-known-symbol');\nvar Iterators = require('../internals/iterators');\n\nvar ITERATOR = wellKnownSymbol('iterator');\nvar ArrayPrototype = Array.prototype;\n\n// check on default Array iterator\nmodule.exports = function (it) {\n  return it !== undefined && (Iterators.Array === it || ArrayPrototype[ITERATOR] === it);\n};\n","var aFunction = require('../internals/a-function');\n\n// optional / simple context binding\nmodule.exports = function (fn, that, length) {\n  aFunction(fn);\n  if (that === undefined) return fn;\n  switch (length) {\n    case 0: return function () {\n      return fn.call(that);\n    };\n    case 1: return function (a) {\n      return fn.call(that, a);\n    };\n    case 2: return function (a, b) {\n      return fn.call(that, a, b);\n    };\n    case 3: return function (a, b, c) {\n      return fn.call(that, a, b, c);\n    };\n  }\n  return function (/* ...args */) {\n    return fn.apply(that, arguments);\n  };\n};\n","module.exports = function (it) {\n  if (typeof it != 'function') {\n    throw TypeError(String(it) + ' is not a function');\n  } return it;\n};\n","var anObject = require('../internals/an-object');\nvar getIteratorMethod = require('../internals/get-iterator-method');\n\nmodule.exports = function (it, usingIterator) {\n  var iteratorMethod = arguments.length < 2 ? getIteratorMethod(it) : usingIterator;\n  if (typeof iteratorMethod != 'function') {\n    throw TypeError(String(it) + ' is not iterable');\n  } return anObject(iteratorMethod.call(it));\n};\n","var classof = require('../internals/classof');\nvar Iterators = require('../internals/iterators');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar ITERATOR = wellKnownSymbol('iterator');\n\nmodule.exports = function (it) {\n  if (it != undefined) return it[ITERATOR]\n    || it['@@iterator']\n    || Iterators[classof(it)];\n};\n","var TO_STRING_TAG_SUPPORT = require('../internals/to-string-tag-support');\nvar classofRaw = require('../internals/classof-raw');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar TO_STRING_TAG = wellKnownSymbol('toStringTag');\n// ES3 wrong here\nvar CORRECT_ARGUMENTS = classofRaw(function () { return arguments; }()) == 'Arguments';\n\n// fallback for IE11 Script Access Denied error\nvar tryGet = function (it, key) {\n  try {\n    return it[key];\n  } catch (error) { /* empty */ }\n};\n\n// getting tag from ES6+ `Object.prototype.toString`\nmodule.exports = TO_STRING_TAG_SUPPORT ? classofRaw : function (it) {\n  var O, tag, result;\n  return it === undefined ? 'Undefined' : it === null ? 'Null'\n    // @@toStringTag case\n    : typeof (tag = tryGet(O = Object(it), TO_STRING_TAG)) == 'string' ? tag\n    // builtinTag case\n    : CORRECT_ARGUMENTS ? classofRaw(O)\n    // ES3 arguments fallback\n    : (result = classofRaw(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : result;\n};\n","var wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar TO_STRING_TAG = wellKnownSymbol('toStringTag');\nvar test = {};\n\ntest[TO_STRING_TAG] = 'z';\n\nmodule.exports = String(test) === '[object z]';\n","var anObject = require('../internals/an-object');\n\nmodule.exports = function (iterator, kind, value) {\n  var innerResult, innerError;\n  anObject(iterator);\n  try {\n    innerResult = iterator['return'];\n    if (innerResult === undefined) {\n      if (kind === 'throw') throw value;\n      return value;\n    }\n    innerResult = innerResult.call(iterator);\n  } catch (error) {\n    innerError = true;\n    innerResult = error;\n  }\n  if (kind === 'throw') throw value;\n  if (innerError) throw innerResult;\n  anObject(innerResult);\n  return value;\n};\n","'use strict';\nvar toPropertyKey = require('../internals/to-property-key');\nvar definePropertyModule = require('../internals/object-define-property');\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\n\nmodule.exports = function (object, key, value) {\n  var propertyKey = toPropertyKey(key);\n  if (propertyKey in object) definePropertyModule.f(object, propertyKey, createPropertyDescriptor(0, value));\n  else object[propertyKey] = value;\n};\n","var global = require('../internals/global');\n\nmodule.exports = global;\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { BaseException, shadow } from \"../shared/util.js\";\nimport { log2, readInt8, readUint16, readUint32 } from \"./core_utils.js\";\nimport { ArithmeticDecoder } from \"./arithmetic_decoder.js\";\nimport { CCITTFaxDecoder } from \"./ccitt.js\";\n\nclass Jbig2Error extends BaseException {\n  constructor(msg) {\n    super(`JBIG2 error: ${msg}`, \"Jbig2Error\");\n  }\n}\n\n// Utility data structures\nclass ContextCache {\n  getContexts(id) {\n    if (id in this) {\n      return this[id];\n    }\n    return (this[id] = new Int8Array(1 << 16));\n  }\n}\n\nclass DecodingContext {\n  constructor(data, start, end) {\n    this.data = data;\n    this.start = start;\n    this.end = end;\n  }\n\n  get decoder() {\n    const decoder = new ArithmeticDecoder(this.data, this.start, this.end);\n    return shadow(this, \"decoder\", decoder);\n  }\n\n  get contextCache() {\n    const cache = new ContextCache();\n    return shadow(this, \"contextCache\", cache);\n  }\n}\n\n// Annex A. Arithmetic Integer Decoding Procedure\n// A.2 Procedure for decoding values\nfunction decodeInteger(contextCache, procedure, decoder) {\n  const contexts = contextCache.getContexts(procedure);\n  let prev = 1;\n\n  function readBits(length) {\n    let v = 0;\n    for (let i = 0; i < length; i++) {\n      const bit = decoder.readBit(contexts, prev);\n      prev = prev < 256 ? (prev << 1) | bit : (((prev << 1) | bit) & 511) | 256;\n      v = (v << 1) | bit;\n    }\n    return v >>> 0;\n  }\n\n  const sign = readBits(1);\n  // prettier-ignore\n  /* eslint-disable no-nested-ternary */\n  const value = readBits(1) ?\n                  (readBits(1) ?\n                    (readBits(1) ?\n                      (readBits(1) ?\n                        (readBits(1) ?\n                          (readBits(32) + 4436) :\n                        readBits(12) + 340) :\n                      readBits(8) + 84) :\n                    readBits(6) + 20) :\n                  readBits(4) + 4) :\n                readBits(2);\n  /* eslint-enable no-nested-ternary */\n  if (sign === 0) {\n    return value;\n  } else if (value > 0) {\n    return -value;\n  }\n  return null;\n}\n\n// A.3 The IAID decoding procedure\nfunction decodeIAID(contextCache, decoder, codeLength) {\n  const contexts = contextCache.getContexts(\"IAID\");\n\n  let prev = 1;\n  for (let i = 0; i < codeLength; i++) {\n    const bit = decoder.readBit(contexts, prev);\n    prev = (prev << 1) | bit;\n  }\n  if (codeLength < 31) {\n    return prev & ((1 << codeLength) - 1);\n  }\n  return prev & 0x7fffffff;\n}\n\n// 7.3 Segment types\nconst SegmentTypes = [\n  \"SymbolDictionary\",\n  null,\n  null,\n  null,\n  \"IntermediateTextRegion\",\n  null,\n  \"ImmediateTextRegion\",\n  \"ImmediateLosslessTextRegion\",\n  null,\n  null,\n  null,\n  null,\n  null,\n  null,\n  null,\n  null,\n  \"PatternDictionary\",\n  null,\n  null,\n  null,\n  \"IntermediateHalftoneRegion\",\n  null,\n  \"ImmediateHalftoneRegion\",\n  \"ImmediateLosslessHalftoneRegion\",\n  null,\n  null,\n  null,\n  null,\n  null,\n  null,\n  null,\n  null,\n  null,\n  null,\n  null,\n  null,\n  \"IntermediateGenericRegion\",\n  null,\n  \"ImmediateGenericRegion\",\n  \"ImmediateLosslessGenericRegion\",\n  \"IntermediateGenericRefinementRegion\",\n  null,\n  \"ImmediateGenericRefinementRegion\",\n  \"ImmediateLosslessGenericRefinementRegion\",\n  null,\n  null,\n  null,\n  null,\n  \"PageInformation\",\n  \"EndOfPage\",\n  \"EndOfStripe\",\n  \"EndOfFile\",\n  \"Profiles\",\n  \"Tables\",\n  null,\n  null,\n  null,\n  null,\n  null,\n  null,\n  null,\n  null,\n  \"Extension\",\n];\n\nconst CodingTemplates = [\n  [\n    { x: -1, y: -2 },\n    { x: 0, y: -2 },\n    { x: 1, y: -2 },\n    { x: -2, y: -1 },\n    { x: -1, y: -1 },\n    { x: 0, y: -1 },\n    { x: 1, y: -1 },\n    { x: 2, y: -1 },\n    { x: -4, y: 0 },\n    { x: -3, y: 0 },\n    { x: -2, y: 0 },\n    { x: -1, y: 0 },\n  ],\n  [\n    { x: -1, y: -2 },\n    { x: 0, y: -2 },\n    { x: 1, y: -2 },\n    { x: 2, y: -2 },\n    { x: -2, y: -1 },\n    { x: -1, y: -1 },\n    { x: 0, y: -1 },\n    { x: 1, y: -1 },\n    { x: 2, y: -1 },\n    { x: -3, y: 0 },\n    { x: -2, y: 0 },\n    { x: -1, y: 0 },\n  ],\n  [\n    { x: -1, y: -2 },\n    { x: 0, y: -2 },\n    { x: 1, y: -2 },\n    { x: -2, y: -1 },\n    { x: -1, y: -1 },\n    { x: 0, y: -1 },\n    { x: 1, y: -1 },\n    { x: -2, y: 0 },\n    { x: -1, y: 0 },\n  ],\n  [\n    { x: -3, y: -1 },\n    { x: -2, y: -1 },\n    { x: -1, y: -1 },\n    { x: 0, y: -1 },\n    { x: 1, y: -1 },\n    { x: -4, y: 0 },\n    { x: -3, y: 0 },\n    { x: -2, y: 0 },\n    { x: -1, y: 0 },\n  ],\n];\n\nconst RefinementTemplates = [\n  {\n    coding: [\n      { x: 0, y: -1 },\n      { x: 1, y: -1 },\n      { x: -1, y: 0 },\n    ],\n    reference: [\n      { x: 0, y: -1 },\n      { x: 1, y: -1 },\n      { x: -1, y: 0 },\n      { x: 0, y: 0 },\n      { x: 1, y: 0 },\n      { x: -1, y: 1 },\n      { x: 0, y: 1 },\n      { x: 1, y: 1 },\n    ],\n  },\n  {\n    coding: [\n      { x: -1, y: -1 },\n      { x: 0, y: -1 },\n      { x: 1, y: -1 },\n      { x: -1, y: 0 },\n    ],\n    reference: [\n      { x: 0, y: -1 },\n      { x: -1, y: 0 },\n      { x: 0, y: 0 },\n      { x: 1, y: 0 },\n      { x: 0, y: 1 },\n      { x: 1, y: 1 },\n    ],\n  },\n];\n\n// See 6.2.5.7 Decoding the bitmap.\nconst ReusedContexts = [\n  0x9b25, // 10011 0110010 0101\n  0x0795, // 0011 110010 101\n  0x00e5, // 001 11001 01\n  0x0195, // 011001 0101\n];\n\nconst RefinementReusedContexts = [\n  0x0020, // '000' + '0' (coding) + '00010000' + '0' (reference)\n  0x0008, // '0000' + '001000'\n];\n\nfunction decodeBitmapTemplate0(width, height, decodingContext) {\n  const decoder = decodingContext.decoder;\n  const contexts = decodingContext.contextCache.getContexts(\"GB\");\n  const bitmap = [];\n  let contextLabel, i, j, pixel, row, row1, row2;\n\n  // ...ooooo....\n  // ..ooooooo... Context template for current pixel (X)\n  // .ooooX...... (concatenate values of 'o'-pixels to get contextLabel)\n  const OLD_PIXEL_MASK = 0x7bf7; // 01111 0111111 0111\n\n  for (i = 0; i < height; i++) {\n    row = bitmap[i] = new Uint8Array(width);\n    row1 = i < 1 ? row : bitmap[i - 1];\n    row2 = i < 2 ? row : bitmap[i - 2];\n\n    // At the beginning of each row:\n    // Fill contextLabel with pixels that are above/right of (X)\n    contextLabel =\n      (row2[0] << 13) |\n      (row2[1] << 12) |\n      (row2[2] << 11) |\n      (row1[0] << 7) |\n      (row1[1] << 6) |\n      (row1[2] << 5) |\n      (row1[3] << 4);\n\n    for (j = 0; j < width; j++) {\n      row[j] = pixel = decoder.readBit(contexts, contextLabel);\n\n      // At each pixel: Clear contextLabel pixels that are shifted\n      // out of the context, then add new ones.\n      contextLabel =\n        ((contextLabel & OLD_PIXEL_MASK) << 1) |\n        (j + 3 < width ? row2[j + 3] << 11 : 0) |\n        (j + 4 < width ? row1[j + 4] << 4 : 0) |\n        pixel;\n    }\n  }\n\n  return bitmap;\n}\n\n// 6.2 Generic Region Decoding Procedure\nfunction decodeBitmap(\n  mmr,\n  width,\n  height,\n  templateIndex,\n  prediction,\n  skip,\n  at,\n  decodingContext\n) {\n  if (mmr) {\n    const input = new Reader(\n      decodingContext.data,\n      decodingContext.start,\n      decodingContext.end\n    );\n    return decodeMMRBitmap(input, width, height, false);\n  }\n\n  // Use optimized version for the most common case\n  if (\n    templateIndex === 0 &&\n    !skip &&\n    !prediction &&\n    at.length === 4 &&\n    at[0].x === 3 &&\n    at[0].y === -1 &&\n    at[1].x === -3 &&\n    at[1].y === -1 &&\n    at[2].x === 2 &&\n    at[2].y === -2 &&\n    at[3].x === -2 &&\n    at[3].y === -2\n  ) {\n    return decodeBitmapTemplate0(width, height, decodingContext);\n  }\n\n  const useskip = !!skip;\n  const template = CodingTemplates[templateIndex].concat(at);\n\n  // Sorting is non-standard, and it is not required. But sorting increases\n  // the number of template bits that can be reused from the previous\n  // contextLabel in the main loop.\n  template.sort(function (a, b) {\n    return a.y - b.y || a.x - b.x;\n  });\n\n  const templateLength = template.length;\n  const templateX = new Int8Array(templateLength);\n  const templateY = new Int8Array(templateLength);\n  const changingTemplateEntries = [];\n  let reuseMask = 0,\n    minX = 0,\n    maxX = 0,\n    minY = 0;\n  let c, k;\n\n  for (k = 0; k < templateLength; k++) {\n    templateX[k] = template[k].x;\n    templateY[k] = template[k].y;\n    minX = Math.min(minX, template[k].x);\n    maxX = Math.max(maxX, template[k].x);\n    minY = Math.min(minY, template[k].y);\n    // Check if the template pixel appears in two consecutive context labels,\n    // so it can be reused. Otherwise, we add it to the list of changing\n    // template entries.\n    if (\n      k < templateLength - 1 &&\n      template[k].y === template[k + 1].y &&\n      template[k].x === template[k + 1].x - 1\n    ) {\n      reuseMask |= 1 << (templateLength - 1 - k);\n    } else {\n      changingTemplateEntries.push(k);\n    }\n  }\n  const changingEntriesLength = changingTemplateEntries.length;\n\n  const changingTemplateX = new Int8Array(changingEntriesLength);\n  const changingTemplateY = new Int8Array(changingEntriesLength);\n  const changingTemplateBit = new Uint16Array(changingEntriesLength);\n  for (c = 0; c < changingEntriesLength; c++) {\n    k = changingTemplateEntries[c];\n    changingTemplateX[c] = template[k].x;\n    changingTemplateY[c] = template[k].y;\n    changingTemplateBit[c] = 1 << (templateLength - 1 - k);\n  }\n\n  // Get the safe bounding box edges from the width, height, minX, maxX, minY\n  const sbb_left = -minX;\n  const sbb_top = -minY;\n  const sbb_right = width - maxX;\n\n  const pseudoPixelContext = ReusedContexts[templateIndex];\n  let row = new Uint8Array(width);\n  const bitmap = [];\n\n  const decoder = decodingContext.decoder;\n  const contexts = decodingContext.contextCache.getContexts(\"GB\");\n\n  let ltp = 0,\n    j,\n    i0,\n    j0,\n    contextLabel = 0,\n    bit,\n    shift;\n  for (let i = 0; i < height; i++) {\n    if (prediction) {\n      const sltp = decoder.readBit(contexts, pseudoPixelContext);\n      ltp ^= sltp;\n      if (ltp) {\n        bitmap.push(row); // duplicate previous row\n        continue;\n      }\n    }\n    row = new Uint8Array(row);\n    bitmap.push(row);\n    for (j = 0; j < width; j++) {\n      if (useskip && skip[i][j]) {\n        row[j] = 0;\n        continue;\n      }\n      // Are we in the middle of a scanline, so we can reuse contextLabel\n      // bits?\n      if (j >= sbb_left && j < sbb_right && i >= sbb_top) {\n        // If yes, we can just shift the bits that are reusable and only\n        // fetch the remaining ones.\n        contextLabel = (contextLabel << 1) & reuseMask;\n        for (k = 0; k < changingEntriesLength; k++) {\n          i0 = i + changingTemplateY[k];\n          j0 = j + changingTemplateX[k];\n          bit = bitmap[i0][j0];\n          if (bit) {\n            bit = changingTemplateBit[k];\n            contextLabel |= bit;\n          }\n        }\n      } else {\n        // compute the contextLabel from scratch\n        contextLabel = 0;\n        shift = templateLength - 1;\n        for (k = 0; k < templateLength; k++, shift--) {\n          j0 = j + templateX[k];\n          if (j0 >= 0 && j0 < width) {\n            i0 = i + templateY[k];\n            if (i0 >= 0) {\n              bit = bitmap[i0][j0];\n              if (bit) {\n                contextLabel |= bit << shift;\n              }\n            }\n          }\n        }\n      }\n      const pixel = decoder.readBit(contexts, contextLabel);\n      row[j] = pixel;\n    }\n  }\n  return bitmap;\n}\n\n// 6.3.2 Generic Refinement Region Decoding Procedure\nfunction decodeRefinement(\n  width,\n  height,\n  templateIndex,\n  referenceBitmap,\n  offsetX,\n  offsetY,\n  prediction,\n  at,\n  decodingContext\n) {\n  let codingTemplate = RefinementTemplates[templateIndex].coding;\n  if (templateIndex === 0) {\n    codingTemplate = codingTemplate.concat([at[0]]);\n  }\n  const codingTemplateLength = codingTemplate.length;\n  const codingTemplateX = new Int32Array(codingTemplateLength);\n  const codingTemplateY = new Int32Array(codingTemplateLength);\n  let k;\n  for (k = 0; k < codingTemplateLength; k++) {\n    codingTemplateX[k] = codingTemplate[k].x;\n    codingTemplateY[k] = codingTemplate[k].y;\n  }\n\n  let referenceTemplate = RefinementTemplates[templateIndex].reference;\n  if (templateIndex === 0) {\n    referenceTemplate = referenceTemplate.concat([at[1]]);\n  }\n  const referenceTemplateLength = referenceTemplate.length;\n  const referenceTemplateX = new Int32Array(referenceTemplateLength);\n  const referenceTemplateY = new Int32Array(referenceTemplateLength);\n  for (k = 0; k < referenceTemplateLength; k++) {\n    referenceTemplateX[k] = referenceTemplate[k].x;\n    referenceTemplateY[k] = referenceTemplate[k].y;\n  }\n  const referenceWidth = referenceBitmap[0].length;\n  const referenceHeight = referenceBitmap.length;\n\n  const pseudoPixelContext = RefinementReusedContexts[templateIndex];\n  const bitmap = [];\n\n  const decoder = decodingContext.decoder;\n  const contexts = decodingContext.contextCache.getContexts(\"GR\");\n\n  let ltp = 0;\n  for (let i = 0; i < height; i++) {\n    if (prediction) {\n      const sltp = decoder.readBit(contexts, pseudoPixelContext);\n      ltp ^= sltp;\n      if (ltp) {\n        throw new Jbig2Error(\"prediction is not supported\");\n      }\n    }\n    const row = new Uint8Array(width);\n    bitmap.push(row);\n    for (let j = 0; j < width; j++) {\n      let i0, j0;\n      let contextLabel = 0;\n      for (k = 0; k < codingTemplateLength; k++) {\n        i0 = i + codingTemplateY[k];\n        j0 = j + codingTemplateX[k];\n        if (i0 < 0 || j0 < 0 || j0 >= width) {\n          contextLabel <<= 1; // out of bound pixel\n        } else {\n          contextLabel = (contextLabel << 1) | bitmap[i0][j0];\n        }\n      }\n      for (k = 0; k < referenceTemplateLength; k++) {\n        i0 = i + referenceTemplateY[k] - offsetY;\n        j0 = j + referenceTemplateX[k] - offsetX;\n        if (i0 < 0 || i0 >= referenceHeight || j0 < 0 || j0 >= referenceWidth) {\n          contextLabel <<= 1; // out of bound pixel\n        } else {\n          contextLabel = (contextLabel << 1) | referenceBitmap[i0][j0];\n        }\n      }\n      const pixel = decoder.readBit(contexts, contextLabel);\n      row[j] = pixel;\n    }\n  }\n\n  return bitmap;\n}\n\n// 6.5.5 Decoding the symbol dictionary\nfunction decodeSymbolDictionary(\n  huffman,\n  refinement,\n  symbols,\n  numberOfNewSymbols,\n  numberOfExportedSymbols,\n  huffmanTables,\n  templateIndex,\n  at,\n  refinementTemplateIndex,\n  refinementAt,\n  decodingContext,\n  huffmanInput\n) {\n  if (huffman && refinement) {\n    throw new Jbig2Error(\"symbol refinement with Huffman is not supported\");\n  }\n\n  const newSymbols = [];\n  let currentHeight = 0;\n  let symbolCodeLength = log2(symbols.length + numberOfNewSymbols);\n\n  const decoder = decodingContext.decoder;\n  const contextCache = decodingContext.contextCache;\n  let tableB1, symbolWidths;\n  if (huffman) {\n    tableB1 = getStandardTable(1); // standard table B.1\n    symbolWidths = [];\n    symbolCodeLength = Math.max(symbolCodeLength, 1); // 6.5.8.2.3\n  }\n\n  while (newSymbols.length < numberOfNewSymbols) {\n    const deltaHeight = huffman\n      ? huffmanTables.tableDeltaHeight.decode(huffmanInput)\n      : decodeInteger(contextCache, \"IADH\", decoder); // 6.5.6\n    currentHeight += deltaHeight;\n    let currentWidth = 0,\n      totalWidth = 0;\n    const firstSymbol = huffman ? symbolWidths.length : 0;\n    while (true) {\n      const deltaWidth = huffman\n        ? huffmanTables.tableDeltaWidth.decode(huffmanInput)\n        : decodeInteger(contextCache, \"IADW\", decoder); // 6.5.7\n      if (deltaWidth === null) {\n        break; // OOB\n      }\n      currentWidth += deltaWidth;\n      totalWidth += currentWidth;\n      let bitmap;\n      if (refinement) {\n        // 6.5.8.2 Refinement/aggregate-coded symbol bitmap\n        const numberOfInstances = decodeInteger(contextCache, \"IAAI\", decoder);\n        if (numberOfInstances > 1) {\n          bitmap = decodeTextRegion(\n            huffman,\n            refinement,\n            currentWidth,\n            currentHeight,\n            0,\n            numberOfInstances,\n            1, // strip size\n            symbols.concat(newSymbols),\n            symbolCodeLength,\n            0, // transposed\n            0, // ds offset\n            1, // top left 7.4.3.1.1\n            0, // OR operator\n            huffmanTables,\n            refinementTemplateIndex,\n            refinementAt,\n            decodingContext,\n            0,\n            huffmanInput\n          );\n        } else {\n          const symbolId = decodeIAID(contextCache, decoder, symbolCodeLength);\n          const rdx = decodeInteger(contextCache, \"IARDX\", decoder); // 6.4.11.3\n          const rdy = decodeInteger(contextCache, \"IARDY\", decoder); // 6.4.11.4\n          const symbol =\n            symbolId < symbols.length\n              ? symbols[symbolId]\n              : newSymbols[symbolId - symbols.length];\n          bitmap = decodeRefinement(\n            currentWidth,\n            currentHeight,\n            refinementTemplateIndex,\n            symbol,\n            rdx,\n            rdy,\n            false,\n            refinementAt,\n            decodingContext\n          );\n        }\n        newSymbols.push(bitmap);\n      } else if (huffman) {\n        // Store only symbol width and decode a collective bitmap when the\n        // height class is done.\n        symbolWidths.push(currentWidth);\n      } else {\n        // 6.5.8.1 Direct-coded symbol bitmap\n        bitmap = decodeBitmap(\n          false,\n          currentWidth,\n          currentHeight,\n          templateIndex,\n          false,\n          null,\n          at,\n          decodingContext\n        );\n        newSymbols.push(bitmap);\n      }\n    }\n    if (huffman && !refinement) {\n      // 6.5.9 Height class collective bitmap\n      const bitmapSize = huffmanTables.tableBitmapSize.decode(huffmanInput);\n      huffmanInput.byteAlign();\n      let collectiveBitmap;\n      if (bitmapSize === 0) {\n        // Uncompressed collective bitmap\n        collectiveBitmap = readUncompressedBitmap(\n          huffmanInput,\n          totalWidth,\n          currentHeight\n        );\n      } else {\n        // MMR collective bitmap\n        const originalEnd = huffmanInput.end;\n        const bitmapEnd = huffmanInput.position + bitmapSize;\n        huffmanInput.end = bitmapEnd;\n        collectiveBitmap = decodeMMRBitmap(\n          huffmanInput,\n          totalWidth,\n          currentHeight,\n          false\n        );\n        huffmanInput.end = originalEnd;\n        huffmanInput.position = bitmapEnd;\n      }\n      const numberOfSymbolsDecoded = symbolWidths.length;\n      if (firstSymbol === numberOfSymbolsDecoded - 1) {\n        // collectiveBitmap is a single symbol.\n        newSymbols.push(collectiveBitmap);\n      } else {\n        // Divide collectiveBitmap into symbols.\n        let i,\n          y,\n          xMin = 0,\n          xMax,\n          bitmapWidth,\n          symbolBitmap;\n        for (i = firstSymbol; i < numberOfSymbolsDecoded; i++) {\n          bitmapWidth = symbolWidths[i];\n          xMax = xMin + bitmapWidth;\n          symbolBitmap = [];\n          for (y = 0; y < currentHeight; y++) {\n            symbolBitmap.push(collectiveBitmap[y].subarray(xMin, xMax));\n          }\n          newSymbols.push(symbolBitmap);\n          xMin = xMax;\n        }\n      }\n    }\n  }\n\n  // 6.5.10 Exported symbols\n  const exportedSymbols = [],\n    flags = [];\n  let currentFlag = false,\n    i,\n    ii;\n  const totalSymbolsLength = symbols.length + numberOfNewSymbols;\n  while (flags.length < totalSymbolsLength) {\n    let runLength = huffman\n      ? tableB1.decode(huffmanInput)\n      : decodeInteger(contextCache, \"IAEX\", decoder);\n    while (runLength--) {\n      flags.push(currentFlag);\n    }\n    currentFlag = !currentFlag;\n  }\n  for (i = 0, ii = symbols.length; i < ii; i++) {\n    if (flags[i]) {\n      exportedSymbols.push(symbols[i]);\n    }\n  }\n  for (let j = 0; j < numberOfNewSymbols; i++, j++) {\n    if (flags[i]) {\n      exportedSymbols.push(newSymbols[j]);\n    }\n  }\n  return exportedSymbols;\n}\n\nfunction decodeTextRegion(\n  huffman,\n  refinement,\n  width,\n  height,\n  defaultPixelValue,\n  numberOfSymbolInstances,\n  stripSize,\n  inputSymbols,\n  symbolCodeLength,\n  transposed,\n  dsOffset,\n  referenceCorner,\n  combinationOperator,\n  huffmanTables,\n  refinementTemplateIndex,\n  refinementAt,\n  decodingContext,\n  logStripSize,\n  huffmanInput\n) {\n  if (huffman && refinement) {\n    throw new Jbig2Error(\"refinement with Huffman is not supported\");\n  }\n\n  // Prepare bitmap\n  const bitmap = [];\n  let i, row;\n  for (i = 0; i < height; i++) {\n    row = new Uint8Array(width);\n    if (defaultPixelValue) {\n      for (let j = 0; j < width; j++) {\n        row[j] = defaultPixelValue;\n      }\n    }\n    bitmap.push(row);\n  }\n\n  const decoder = decodingContext.decoder;\n  const contextCache = decodingContext.contextCache;\n\n  let stripT = huffman\n    ? -huffmanTables.tableDeltaT.decode(huffmanInput)\n    : -decodeInteger(contextCache, \"IADT\", decoder); // 6.4.6\n  let firstS = 0;\n  i = 0;\n  while (i < numberOfSymbolInstances) {\n    const deltaT = huffman\n      ? huffmanTables.tableDeltaT.decode(huffmanInput)\n      : decodeInteger(contextCache, \"IADT\", decoder); // 6.4.6\n    stripT += deltaT;\n\n    const deltaFirstS = huffman\n      ? huffmanTables.tableFirstS.decode(huffmanInput)\n      : decodeInteger(contextCache, \"IAFS\", decoder); // 6.4.7\n    firstS += deltaFirstS;\n    let currentS = firstS;\n    do {\n      let currentT = 0; // 6.4.9\n      if (stripSize > 1) {\n        currentT = huffman\n          ? huffmanInput.readBits(logStripSize)\n          : decodeInteger(contextCache, \"IAIT\", decoder);\n      }\n      const t = stripSize * stripT + currentT;\n      const symbolId = huffman\n        ? huffmanTables.symbolIDTable.decode(huffmanInput)\n        : decodeIAID(contextCache, decoder, symbolCodeLength);\n      const applyRefinement =\n        refinement &&\n        (huffman\n          ? huffmanInput.readBit()\n          : decodeInteger(contextCache, \"IARI\", decoder));\n      let symbolBitmap = inputSymbols[symbolId];\n      let symbolWidth = symbolBitmap[0].length;\n      let symbolHeight = symbolBitmap.length;\n      if (applyRefinement) {\n        const rdw = decodeInteger(contextCache, \"IARDW\", decoder); // 6.4.11.1\n        const rdh = decodeInteger(contextCache, \"IARDH\", decoder); // 6.4.11.2\n        const rdx = decodeInteger(contextCache, \"IARDX\", decoder); // 6.4.11.3\n        const rdy = decodeInteger(contextCache, \"IARDY\", decoder); // 6.4.11.4\n        symbolWidth += rdw;\n        symbolHeight += rdh;\n        symbolBitmap = decodeRefinement(\n          symbolWidth,\n          symbolHeight,\n          refinementTemplateIndex,\n          symbolBitmap,\n          (rdw >> 1) + rdx,\n          (rdh >> 1) + rdy,\n          false,\n          refinementAt,\n          decodingContext\n        );\n      }\n      const offsetT = t - (referenceCorner & 1 ? 0 : symbolHeight - 1);\n      const offsetS = currentS - (referenceCorner & 2 ? symbolWidth - 1 : 0);\n      let s2, t2, symbolRow;\n      if (transposed) {\n        // Place Symbol Bitmap from T1,S1\n        for (s2 = 0; s2 < symbolHeight; s2++) {\n          row = bitmap[offsetS + s2];\n          if (!row) {\n            continue;\n          }\n          symbolRow = symbolBitmap[s2];\n          // To ignore Parts of Symbol bitmap which goes\n          // outside bitmap region\n          const maxWidth = Math.min(width - offsetT, symbolWidth);\n          switch (combinationOperator) {\n            case 0: // OR\n              for (t2 = 0; t2 < maxWidth; t2++) {\n                row[offsetT + t2] |= symbolRow[t2];\n              }\n              break;\n            case 2: // XOR\n              for (t2 = 0; t2 < maxWidth; t2++) {\n                row[offsetT + t2] ^= symbolRow[t2];\n              }\n              break;\n            default:\n              throw new Jbig2Error(\n                `operator ${combinationOperator} is not supported`\n              );\n          }\n        }\n        currentS += symbolHeight - 1;\n      } else {\n        for (t2 = 0; t2 < symbolHeight; t2++) {\n          row = bitmap[offsetT + t2];\n          if (!row) {\n            continue;\n          }\n          symbolRow = symbolBitmap[t2];\n          switch (combinationOperator) {\n            case 0: // OR\n              for (s2 = 0; s2 < symbolWidth; s2++) {\n                row[offsetS + s2] |= symbolRow[s2];\n              }\n              break;\n            case 2: // XOR\n              for (s2 = 0; s2 < symbolWidth; s2++) {\n                row[offsetS + s2] ^= symbolRow[s2];\n              }\n              break;\n            default:\n              throw new Jbig2Error(\n                `operator ${combinationOperator} is not supported`\n              );\n          }\n        }\n        currentS += symbolWidth - 1;\n      }\n      i++;\n      const deltaS = huffman\n        ? huffmanTables.tableDeltaS.decode(huffmanInput)\n        : decodeInteger(contextCache, \"IADS\", decoder); // 6.4.8\n      if (deltaS === null) {\n        break; // OOB\n      }\n      currentS += deltaS + dsOffset;\n    } while (true);\n  }\n  return bitmap;\n}\n\nfunction decodePatternDictionary(\n  mmr,\n  patternWidth,\n  patternHeight,\n  maxPatternIndex,\n  template,\n  decodingContext\n) {\n  const at = [];\n  if (!mmr) {\n    at.push({\n      x: -patternWidth,\n      y: 0,\n    });\n    if (template === 0) {\n      at.push(\n        {\n          x: -3,\n          y: -1,\n        },\n        {\n          x: 2,\n          y: -2,\n        },\n        {\n          x: -2,\n          y: -2,\n        }\n      );\n    }\n  }\n  const collectiveWidth = (maxPatternIndex + 1) * patternWidth;\n  const collectiveBitmap = decodeBitmap(\n    mmr,\n    collectiveWidth,\n    patternHeight,\n    template,\n    false,\n    null,\n    at,\n    decodingContext\n  );\n  // Divide collective bitmap into patterns.\n  const patterns = [];\n  for (let i = 0; i <= maxPatternIndex; i++) {\n    const patternBitmap = [];\n    const xMin = patternWidth * i;\n    const xMax = xMin + patternWidth;\n    for (let y = 0; y < patternHeight; y++) {\n      patternBitmap.push(collectiveBitmap[y].subarray(xMin, xMax));\n    }\n    patterns.push(patternBitmap);\n  }\n  return patterns;\n}\n\nfunction decodeHalftoneRegion(\n  mmr,\n  patterns,\n  template,\n  regionWidth,\n  regionHeight,\n  defaultPixelValue,\n  enableSkip,\n  combinationOperator,\n  gridWidth,\n  gridHeight,\n  gridOffsetX,\n  gridOffsetY,\n  gridVectorX,\n  gridVectorY,\n  decodingContext\n) {\n  const skip = null;\n  if (enableSkip) {\n    throw new Jbig2Error(\"skip is not supported\");\n  }\n  if (combinationOperator !== 0) {\n    throw new Jbig2Error(\n      `operator \"${combinationOperator}\" is not supported in halftone region`\n    );\n  }\n\n  // Prepare bitmap.\n  const regionBitmap = [];\n  let i, j, row;\n  for (i = 0; i < regionHeight; i++) {\n    row = new Uint8Array(regionWidth);\n    if (defaultPixelValue) {\n      for (j = 0; j < regionWidth; j++) {\n        row[j] = defaultPixelValue;\n      }\n    }\n    regionBitmap.push(row);\n  }\n\n  const numberOfPatterns = patterns.length;\n  const pattern0 = patterns[0];\n  const patternWidth = pattern0[0].length,\n    patternHeight = pattern0.length;\n  const bitsPerValue = log2(numberOfPatterns);\n  const at = [];\n  if (!mmr) {\n    at.push({\n      x: template <= 1 ? 3 : 2,\n      y: -1,\n    });\n    if (template === 0) {\n      at.push(\n        {\n          x: -3,\n          y: -1,\n        },\n        {\n          x: 2,\n          y: -2,\n        },\n        {\n          x: -2,\n          y: -2,\n        }\n      );\n    }\n  }\n  // Annex C. Gray-scale Image Decoding Procedure.\n  const grayScaleBitPlanes = [];\n  let mmrInput, bitmap;\n  if (mmr) {\n    // MMR bit planes are in one continuous stream. Only EOFB codes indicate\n    // the end of each bitmap, so EOFBs must be decoded.\n    mmrInput = new Reader(\n      decodingContext.data,\n      decodingContext.start,\n      decodingContext.end\n    );\n  }\n  for (i = bitsPerValue - 1; i >= 0; i--) {\n    if (mmr) {\n      bitmap = decodeMMRBitmap(mmrInput, gridWidth, gridHeight, true);\n    } else {\n      bitmap = decodeBitmap(\n        false,\n        gridWidth,\n        gridHeight,\n        template,\n        false,\n        skip,\n        at,\n        decodingContext\n      );\n    }\n    grayScaleBitPlanes[i] = bitmap;\n  }\n  // 6.6.5.2 Rendering the patterns.\n  let mg, ng, bit, patternIndex, patternBitmap, x, y, patternRow, regionRow;\n  for (mg = 0; mg < gridHeight; mg++) {\n    for (ng = 0; ng < gridWidth; ng++) {\n      bit = 0;\n      patternIndex = 0;\n      for (j = bitsPerValue - 1; j >= 0; j--) {\n        bit ^= grayScaleBitPlanes[j][mg][ng]; // Gray decoding\n        patternIndex |= bit << j;\n      }\n      patternBitmap = patterns[patternIndex];\n      x = (gridOffsetX + mg * gridVectorY + ng * gridVectorX) >> 8;\n      y = (gridOffsetY + mg * gridVectorX - ng * gridVectorY) >> 8;\n      // Draw patternBitmap at (x, y).\n      if (\n        x >= 0 &&\n        x + patternWidth <= regionWidth &&\n        y >= 0 &&\n        y + patternHeight <= regionHeight\n      ) {\n        for (i = 0; i < patternHeight; i++) {\n          regionRow = regionBitmap[y + i];\n          patternRow = patternBitmap[i];\n          for (j = 0; j < patternWidth; j++) {\n            regionRow[x + j] |= patternRow[j];\n          }\n        }\n      } else {\n        let regionX, regionY;\n        for (i = 0; i < patternHeight; i++) {\n          regionY = y + i;\n          if (regionY < 0 || regionY >= regionHeight) {\n            continue;\n          }\n          regionRow = regionBitmap[regionY];\n          patternRow = patternBitmap[i];\n          for (j = 0; j < patternWidth; j++) {\n            regionX = x + j;\n            if (regionX >= 0 && regionX < regionWidth) {\n              regionRow[regionX] |= patternRow[j];\n            }\n          }\n        }\n      }\n    }\n  }\n  return regionBitmap;\n}\n\nfunction readSegmentHeader(data, start) {\n  const segmentHeader = {};\n  segmentHeader.number = readUint32(data, start);\n  const flags = data[start + 4];\n  const segmentType = flags & 0x3f;\n  if (!SegmentTypes[segmentType]) {\n    throw new Jbig2Error(\"invalid segment type: \" + segmentType);\n  }\n  segmentHeader.type = segmentType;\n  segmentHeader.typeName = SegmentTypes[segmentType];\n  segmentHeader.deferredNonRetain = !!(flags & 0x80);\n\n  const pageAssociationFieldSize = !!(flags & 0x40);\n  const referredFlags = data[start + 5];\n  let referredToCount = (referredFlags >> 5) & 7;\n  const retainBits = [referredFlags & 31];\n  let position = start + 6;\n  if (referredFlags === 7) {\n    referredToCount = readUint32(data, position - 1) & 0x1fffffff;\n    position += 3;\n    let bytes = (referredToCount + 7) >> 3;\n    retainBits[0] = data[position++];\n    while (--bytes > 0) {\n      retainBits.push(data[position++]);\n    }\n  } else if (referredFlags === 5 || referredFlags === 6) {\n    throw new Jbig2Error(\"invalid referred-to flags\");\n  }\n\n  segmentHeader.retainBits = retainBits;\n\n  let referredToSegmentNumberSize = 4;\n  if (segmentHeader.number <= 256) {\n    referredToSegmentNumberSize = 1;\n  } else if (segmentHeader.number <= 65536) {\n    referredToSegmentNumberSize = 2;\n  }\n  const referredTo = [];\n  let i, ii;\n  for (i = 0; i < referredToCount; i++) {\n    let number;\n    if (referredToSegmentNumberSize === 1) {\n      number = data[position];\n    } else if (referredToSegmentNumberSize === 2) {\n      number = readUint16(data, position);\n    } else {\n      number = readUint32(data, position);\n    }\n    referredTo.push(number);\n    position += referredToSegmentNumberSize;\n  }\n  segmentHeader.referredTo = referredTo;\n  if (!pageAssociationFieldSize) {\n    segmentHeader.pageAssociation = data[position++];\n  } else {\n    segmentHeader.pageAssociation = readUint32(data, position);\n    position += 4;\n  }\n  segmentHeader.length = readUint32(data, position);\n  position += 4;\n\n  if (segmentHeader.length === 0xffffffff) {\n    // 7.2.7 Segment data length, unknown segment length\n    if (segmentType === 38) {\n      // ImmediateGenericRegion\n      const genericRegionInfo = readRegionSegmentInformation(data, position);\n      const genericRegionSegmentFlags =\n        data[position + RegionSegmentInformationFieldLength];\n      const genericRegionMmr = !!(genericRegionSegmentFlags & 1);\n      // searching for the segment end\n      const searchPatternLength = 6;\n      const searchPattern = new Uint8Array(searchPatternLength);\n      if (!genericRegionMmr) {\n        searchPattern[0] = 0xff;\n        searchPattern[1] = 0xac;\n      }\n      searchPattern[2] = (genericRegionInfo.height >>> 24) & 0xff;\n      searchPattern[3] = (genericRegionInfo.height >> 16) & 0xff;\n      searchPattern[4] = (genericRegionInfo.height >> 8) & 0xff;\n      searchPattern[5] = genericRegionInfo.height & 0xff;\n      for (i = position, ii = data.length; i < ii; i++) {\n        let j = 0;\n        while (j < searchPatternLength && searchPattern[j] === data[i + j]) {\n          j++;\n        }\n        if (j === searchPatternLength) {\n          segmentHeader.length = i + searchPatternLength;\n          break;\n        }\n      }\n      if (segmentHeader.length === 0xffffffff) {\n        throw new Jbig2Error(\"segment end was not found\");\n      }\n    } else {\n      throw new Jbig2Error(\"invalid unknown segment length\");\n    }\n  }\n  segmentHeader.headerEnd = position;\n  return segmentHeader;\n}\n\nfunction readSegments(header, data, start, end) {\n  const segments = [];\n  let position = start;\n  while (position < end) {\n    const segmentHeader = readSegmentHeader(data, position);\n    position = segmentHeader.headerEnd;\n    const segment = {\n      header: segmentHeader,\n      data,\n    };\n    if (!header.randomAccess) {\n      segment.start = position;\n      position += segmentHeader.length;\n      segment.end = position;\n    }\n    segments.push(segment);\n    if (segmentHeader.type === 51) {\n      break; // end of file is found\n    }\n  }\n  if (header.randomAccess) {\n    for (let i = 0, ii = segments.length; i < ii; i++) {\n      segments[i].start = position;\n      position += segments[i].header.length;\n      segments[i].end = position;\n    }\n  }\n  return segments;\n}\n\n// 7.4.1 Region segment information field\nfunction readRegionSegmentInformation(data, start) {\n  return {\n    width: readUint32(data, start),\n    height: readUint32(data, start + 4),\n    x: readUint32(data, start + 8),\n    y: readUint32(data, start + 12),\n    combinationOperator: data[start + 16] & 7,\n  };\n}\nconst RegionSegmentInformationFieldLength = 17;\n\nfunction processSegment(segment, visitor) {\n  const header = segment.header;\n\n  const data = segment.data,\n    end = segment.end;\n  let position = segment.start;\n  let args, at, i, atLength;\n  switch (header.type) {\n    case 0: // SymbolDictionary\n      // 7.4.2 Symbol dictionary segment syntax\n      const dictionary = {};\n      const dictionaryFlags = readUint16(data, position); // 7.4.2.1.1\n      dictionary.huffman = !!(dictionaryFlags & 1);\n      dictionary.refinement = !!(dictionaryFlags & 2);\n      dictionary.huffmanDHSelector = (dictionaryFlags >> 2) & 3;\n      dictionary.huffmanDWSelector = (dictionaryFlags >> 4) & 3;\n      dictionary.bitmapSizeSelector = (dictionaryFlags >> 6) & 1;\n      dictionary.aggregationInstancesSelector = (dictionaryFlags >> 7) & 1;\n      dictionary.bitmapCodingContextUsed = !!(dictionaryFlags & 256);\n      dictionary.bitmapCodingContextRetained = !!(dictionaryFlags & 512);\n      dictionary.template = (dictionaryFlags >> 10) & 3;\n      dictionary.refinementTemplate = (dictionaryFlags >> 12) & 1;\n      position += 2;\n      if (!dictionary.huffman) {\n        atLength = dictionary.template === 0 ? 4 : 1;\n        at = [];\n        for (i = 0; i < atLength; i++) {\n          at.push({\n            x: readInt8(data, position),\n            y: readInt8(data, position + 1),\n          });\n          position += 2;\n        }\n        dictionary.at = at;\n      }\n      if (dictionary.refinement && !dictionary.refinementTemplate) {\n        at = [];\n        for (i = 0; i < 2; i++) {\n          at.push({\n            x: readInt8(data, position),\n            y: readInt8(data, position + 1),\n          });\n          position += 2;\n        }\n        dictionary.refinementAt = at;\n      }\n      dictionary.numberOfExportedSymbols = readUint32(data, position);\n      position += 4;\n      dictionary.numberOfNewSymbols = readUint32(data, position);\n      position += 4;\n      args = [\n        dictionary,\n        header.number,\n        header.referredTo,\n        data,\n        position,\n        end,\n      ];\n      break;\n    case 6: // ImmediateTextRegion\n    case 7: // ImmediateLosslessTextRegion\n      const textRegion = {};\n      textRegion.info = readRegionSegmentInformation(data, position);\n      position += RegionSegmentInformationFieldLength;\n      const textRegionSegmentFlags = readUint16(data, position);\n      position += 2;\n      textRegion.huffman = !!(textRegionSegmentFlags & 1);\n      textRegion.refinement = !!(textRegionSegmentFlags & 2);\n      textRegion.logStripSize = (textRegionSegmentFlags >> 2) & 3;\n      textRegion.stripSize = 1 << textRegion.logStripSize;\n      textRegion.referenceCorner = (textRegionSegmentFlags >> 4) & 3;\n      textRegion.transposed = !!(textRegionSegmentFlags & 64);\n      textRegion.combinationOperator = (textRegionSegmentFlags >> 7) & 3;\n      textRegion.defaultPixelValue = (textRegionSegmentFlags >> 9) & 1;\n      textRegion.dsOffset = (textRegionSegmentFlags << 17) >> 27;\n      textRegion.refinementTemplate = (textRegionSegmentFlags >> 15) & 1;\n      if (textRegion.huffman) {\n        const textRegionHuffmanFlags = readUint16(data, position);\n        position += 2;\n        textRegion.huffmanFS = textRegionHuffmanFlags & 3;\n        textRegion.huffmanDS = (textRegionHuffmanFlags >> 2) & 3;\n        textRegion.huffmanDT = (textRegionHuffmanFlags >> 4) & 3;\n        textRegion.huffmanRefinementDW = (textRegionHuffmanFlags >> 6) & 3;\n        textRegion.huffmanRefinementDH = (textRegionHuffmanFlags >> 8) & 3;\n        textRegion.huffmanRefinementDX = (textRegionHuffmanFlags >> 10) & 3;\n        textRegion.huffmanRefinementDY = (textRegionHuffmanFlags >> 12) & 3;\n        textRegion.huffmanRefinementSizeSelector = !!(\n          textRegionHuffmanFlags & 0x4000\n        );\n      }\n      if (textRegion.refinement && !textRegion.refinementTemplate) {\n        at = [];\n        for (i = 0; i < 2; i++) {\n          at.push({\n            x: readInt8(data, position),\n            y: readInt8(data, position + 1),\n          });\n          position += 2;\n        }\n        textRegion.refinementAt = at;\n      }\n      textRegion.numberOfSymbolInstances = readUint32(data, position);\n      position += 4;\n      args = [textRegion, header.referredTo, data, position, end];\n      break;\n    case 16: // PatternDictionary\n      // 7.4.4. Pattern dictionary segment syntax\n      const patternDictionary = {};\n      const patternDictionaryFlags = data[position++];\n      patternDictionary.mmr = !!(patternDictionaryFlags & 1);\n      patternDictionary.template = (patternDictionaryFlags >> 1) & 3;\n      patternDictionary.patternWidth = data[position++];\n      patternDictionary.patternHeight = data[position++];\n      patternDictionary.maxPatternIndex = readUint32(data, position);\n      position += 4;\n      args = [patternDictionary, header.number, data, position, end];\n      break;\n    case 22: // ImmediateHalftoneRegion\n    case 23: // ImmediateLosslessHalftoneRegion\n      // 7.4.5 Halftone region segment syntax\n      const halftoneRegion = {};\n      halftoneRegion.info = readRegionSegmentInformation(data, position);\n      position += RegionSegmentInformationFieldLength;\n      const halftoneRegionFlags = data[position++];\n      halftoneRegion.mmr = !!(halftoneRegionFlags & 1);\n      halftoneRegion.template = (halftoneRegionFlags >> 1) & 3;\n      halftoneRegion.enableSkip = !!(halftoneRegionFlags & 8);\n      halftoneRegion.combinationOperator = (halftoneRegionFlags >> 4) & 7;\n      halftoneRegion.defaultPixelValue = (halftoneRegionFlags >> 7) & 1;\n      halftoneRegion.gridWidth = readUint32(data, position);\n      position += 4;\n      halftoneRegion.gridHeight = readUint32(data, position);\n      position += 4;\n      halftoneRegion.gridOffsetX = readUint32(data, position) & 0xffffffff;\n      position += 4;\n      halftoneRegion.gridOffsetY = readUint32(data, position) & 0xffffffff;\n      position += 4;\n      halftoneRegion.gridVectorX = readUint16(data, position);\n      position += 2;\n      halftoneRegion.gridVectorY = readUint16(data, position);\n      position += 2;\n      args = [halftoneRegion, header.referredTo, data, position, end];\n      break;\n    case 38: // ImmediateGenericRegion\n    case 39: // ImmediateLosslessGenericRegion\n      const genericRegion = {};\n      genericRegion.info = readRegionSegmentInformation(data, position);\n      position += RegionSegmentInformationFieldLength;\n      const genericRegionSegmentFlags = data[position++];\n      genericRegion.mmr = !!(genericRegionSegmentFlags & 1);\n      genericRegion.template = (genericRegionSegmentFlags >> 1) & 3;\n      genericRegion.prediction = !!(genericRegionSegmentFlags & 8);\n      if (!genericRegion.mmr) {\n        atLength = genericRegion.template === 0 ? 4 : 1;\n        at = [];\n        for (i = 0; i < atLength; i++) {\n          at.push({\n            x: readInt8(data, position),\n            y: readInt8(data, position + 1),\n          });\n          position += 2;\n        }\n        genericRegion.at = at;\n      }\n      args = [genericRegion, data, position, end];\n      break;\n    case 48: // PageInformation\n      const pageInfo = {\n        width: readUint32(data, position),\n        height: readUint32(data, position + 4),\n        resolutionX: readUint32(data, position + 8),\n        resolutionY: readUint32(data, position + 12),\n      };\n      if (pageInfo.height === 0xffffffff) {\n        delete pageInfo.height;\n      }\n      const pageSegmentFlags = data[position + 16];\n      readUint16(data, position + 17); // pageStripingInformation\n      pageInfo.lossless = !!(pageSegmentFlags & 1);\n      pageInfo.refinement = !!(pageSegmentFlags & 2);\n      pageInfo.defaultPixelValue = (pageSegmentFlags >> 2) & 1;\n      pageInfo.combinationOperator = (pageSegmentFlags >> 3) & 3;\n      pageInfo.requiresBuffer = !!(pageSegmentFlags & 32);\n      pageInfo.combinationOperatorOverride = !!(pageSegmentFlags & 64);\n      args = [pageInfo];\n      break;\n    case 49: // EndOfPage\n      break;\n    case 50: // EndOfStripe\n      break;\n    case 51: // EndOfFile\n      break;\n    case 53: // Tables\n      args = [header.number, data, position, end];\n      break;\n    case 62: // 7.4.15 defines 2 extension types which\n      // are comments and can be ignored.\n      break;\n    default:\n      throw new Jbig2Error(\n        `segment type ${header.typeName}(${header.type})` +\n          \" is not implemented\"\n      );\n  }\n  const callbackName = \"on\" + header.typeName;\n  if (callbackName in visitor) {\n    visitor[callbackName].apply(visitor, args);\n  }\n}\n\nfunction processSegments(segments, visitor) {\n  for (let i = 0, ii = segments.length; i < ii; i++) {\n    processSegment(segments[i], visitor);\n  }\n}\n\nfunction parseJbig2Chunks(chunks) {\n  const visitor = new SimpleSegmentVisitor();\n  for (let i = 0, ii = chunks.length; i < ii; i++) {\n    const chunk = chunks[i];\n    const segments = readSegments({}, chunk.data, chunk.start, chunk.end);\n    processSegments(segments, visitor);\n  }\n  return visitor.buffer;\n}\n\nfunction parseJbig2(data) {\n  const end = data.length;\n  let position = 0;\n\n  if (\n    data[position] !== 0x97 ||\n    data[position + 1] !== 0x4a ||\n    data[position + 2] !== 0x42 ||\n    data[position + 3] !== 0x32 ||\n    data[position + 4] !== 0x0d ||\n    data[position + 5] !== 0x0a ||\n    data[position + 6] !== 0x1a ||\n    data[position + 7] !== 0x0a\n  ) {\n    throw new Jbig2Error(\"parseJbig2 - invalid header.\");\n  }\n\n  const header = Object.create(null);\n  position += 8;\n  const flags = data[position++];\n  header.randomAccess = !(flags & 1);\n  if (!(flags & 2)) {\n    header.numberOfPages = readUint32(data, position);\n    position += 4;\n  }\n\n  const segments = readSegments(header, data, position, end);\n  const visitor = new SimpleSegmentVisitor();\n  processSegments(segments, visitor);\n\n  const { width, height } = visitor.currentPageInfo;\n  const bitPacked = visitor.buffer;\n  const imgData = new Uint8ClampedArray(width * height);\n  let q = 0,\n    k = 0;\n  for (let i = 0; i < height; i++) {\n    let mask = 0,\n      buffer;\n    for (let j = 0; j < width; j++) {\n      if (!mask) {\n        mask = 128;\n        buffer = bitPacked[k++];\n      }\n      imgData[q++] = buffer & mask ? 0 : 255;\n      mask >>= 1;\n    }\n  }\n\n  return { imgData, width, height };\n}\n\nclass SimpleSegmentVisitor {\n  onPageInformation(info) {\n    this.currentPageInfo = info;\n    const rowSize = (info.width + 7) >> 3;\n    const buffer = new Uint8ClampedArray(rowSize * info.height);\n    // The contents of ArrayBuffers are initialized to 0.\n    // Fill the buffer with 0xFF only if info.defaultPixelValue is set\n    if (info.defaultPixelValue) {\n      for (let i = 0, ii = buffer.length; i < ii; i++) {\n        buffer[i] = 0xff;\n      }\n    }\n    this.buffer = buffer;\n  }\n\n  drawBitmap(regionInfo, bitmap) {\n    const pageInfo = this.currentPageInfo;\n    const width = regionInfo.width,\n      height = regionInfo.height;\n    const rowSize = (pageInfo.width + 7) >> 3;\n    const combinationOperator = pageInfo.combinationOperatorOverride\n      ? regionInfo.combinationOperator\n      : pageInfo.combinationOperator;\n    const buffer = this.buffer;\n    const mask0 = 128 >> (regionInfo.x & 7);\n    let offset0 = regionInfo.y * rowSize + (regionInfo.x >> 3);\n    let i, j, mask, offset;\n    switch (combinationOperator) {\n      case 0: // OR\n        for (i = 0; i < height; i++) {\n          mask = mask0;\n          offset = offset0;\n          for (j = 0; j < width; j++) {\n            if (bitmap[i][j]) {\n              buffer[offset] |= mask;\n            }\n            mask >>= 1;\n            if (!mask) {\n              mask = 128;\n              offset++;\n            }\n          }\n          offset0 += rowSize;\n        }\n        break;\n      case 2: // XOR\n        for (i = 0; i < height; i++) {\n          mask = mask0;\n          offset = offset0;\n          for (j = 0; j < width; j++) {\n            if (bitmap[i][j]) {\n              buffer[offset] ^= mask;\n            }\n            mask >>= 1;\n            if (!mask) {\n              mask = 128;\n              offset++;\n            }\n          }\n          offset0 += rowSize;\n        }\n        break;\n      default:\n        throw new Jbig2Error(\n          `operator ${combinationOperator} is not supported`\n        );\n    }\n  }\n\n  onImmediateGenericRegion(region, data, start, end) {\n    const regionInfo = region.info;\n    const decodingContext = new DecodingContext(data, start, end);\n    const bitmap = decodeBitmap(\n      region.mmr,\n      regionInfo.width,\n      regionInfo.height,\n      region.template,\n      region.prediction,\n      null,\n      region.at,\n      decodingContext\n    );\n    this.drawBitmap(regionInfo, bitmap);\n  }\n\n  onImmediateLosslessGenericRegion() {\n    this.onImmediateGenericRegion.apply(this, arguments);\n  }\n\n  onSymbolDictionary(\n    dictionary,\n    currentSegment,\n    referredSegments,\n    data,\n    start,\n    end\n  ) {\n    let huffmanTables, huffmanInput;\n    if (dictionary.huffman) {\n      huffmanTables = getSymbolDictionaryHuffmanTables(\n        dictionary,\n        referredSegments,\n        this.customTables\n      );\n      huffmanInput = new Reader(data, start, end);\n    }\n\n    // Combines exported symbols from all referred segments\n    let symbols = this.symbols;\n    if (!symbols) {\n      this.symbols = symbols = {};\n    }\n\n    let inputSymbols = [];\n    for (let i = 0, ii = referredSegments.length; i < ii; i++) {\n      const referredSymbols = symbols[referredSegments[i]];\n      // referredSymbols is undefined when we have a reference to a Tables\n      // segment instead of a SymbolDictionary.\n      if (referredSymbols) {\n        inputSymbols = inputSymbols.concat(referredSymbols);\n      }\n    }\n\n    const decodingContext = new DecodingContext(data, start, end);\n    symbols[currentSegment] = decodeSymbolDictionary(\n      dictionary.huffman,\n      dictionary.refinement,\n      inputSymbols,\n      dictionary.numberOfNewSymbols,\n      dictionary.numberOfExportedSymbols,\n      huffmanTables,\n      dictionary.template,\n      dictionary.at,\n      dictionary.refinementTemplate,\n      dictionary.refinementAt,\n      decodingContext,\n      huffmanInput\n    );\n  }\n\n  onImmediateTextRegion(region, referredSegments, data, start, end) {\n    const regionInfo = region.info;\n    let huffmanTables, huffmanInput;\n\n    // Combines exported symbols from all referred segments\n    const symbols = this.symbols;\n    let inputSymbols = [];\n    for (let i = 0, ii = referredSegments.length; i < ii; i++) {\n      const referredSymbols = symbols[referredSegments[i]];\n      // referredSymbols is undefined when we have a reference to a Tables\n      // segment instead of a SymbolDictionary.\n      if (referredSymbols) {\n        inputSymbols = inputSymbols.concat(referredSymbols);\n      }\n    }\n    const symbolCodeLength = log2(inputSymbols.length);\n    if (region.huffman) {\n      huffmanInput = new Reader(data, start, end);\n      huffmanTables = getTextRegionHuffmanTables(\n        region,\n        referredSegments,\n        this.customTables,\n        inputSymbols.length,\n        huffmanInput\n      );\n    }\n\n    const decodingContext = new DecodingContext(data, start, end);\n    const bitmap = decodeTextRegion(\n      region.huffman,\n      region.refinement,\n      regionInfo.width,\n      regionInfo.height,\n      region.defaultPixelValue,\n      region.numberOfSymbolInstances,\n      region.stripSize,\n      inputSymbols,\n      symbolCodeLength,\n      region.transposed,\n      region.dsOffset,\n      region.referenceCorner,\n      region.combinationOperator,\n      huffmanTables,\n      region.refinementTemplate,\n      region.refinementAt,\n      decodingContext,\n      region.logStripSize,\n      huffmanInput\n    );\n    this.drawBitmap(regionInfo, bitmap);\n  }\n\n  onImmediateLosslessTextRegion() {\n    this.onImmediateTextRegion.apply(this, arguments);\n  }\n\n  onPatternDictionary(dictionary, currentSegment, data, start, end) {\n    let patterns = this.patterns;\n    if (!patterns) {\n      this.patterns = patterns = {};\n    }\n    const decodingContext = new DecodingContext(data, start, end);\n    patterns[currentSegment] = decodePatternDictionary(\n      dictionary.mmr,\n      dictionary.patternWidth,\n      dictionary.patternHeight,\n      dictionary.maxPatternIndex,\n      dictionary.template,\n      decodingContext\n    );\n  }\n\n  onImmediateHalftoneRegion(region, referredSegments, data, start, end) {\n    // HalftoneRegion refers to exactly one PatternDictionary.\n    const patterns = this.patterns[referredSegments[0]];\n    const regionInfo = region.info;\n    const decodingContext = new DecodingContext(data, start, end);\n    const bitmap = decodeHalftoneRegion(\n      region.mmr,\n      patterns,\n      region.template,\n      regionInfo.width,\n      regionInfo.height,\n      region.defaultPixelValue,\n      region.enableSkip,\n      region.combinationOperator,\n      region.gridWidth,\n      region.gridHeight,\n      region.gridOffsetX,\n      region.gridOffsetY,\n      region.gridVectorX,\n      region.gridVectorY,\n      decodingContext\n    );\n    this.drawBitmap(regionInfo, bitmap);\n  }\n\n  onImmediateLosslessHalftoneRegion() {\n    this.onImmediateHalftoneRegion.apply(this, arguments);\n  }\n\n  onTables(currentSegment, data, start, end) {\n    let customTables = this.customTables;\n    if (!customTables) {\n      this.customTables = customTables = {};\n    }\n    customTables[currentSegment] = decodeTablesSegment(data, start, end);\n  }\n}\n\nclass HuffmanLine {\n  constructor(lineData) {\n    if (lineData.length === 2) {\n      // OOB line.\n      this.isOOB = true;\n      this.rangeLow = 0;\n      this.prefixLength = lineData[0];\n      this.rangeLength = 0;\n      this.prefixCode = lineData[1];\n      this.isLowerRange = false;\n    } else {\n      // Normal, upper range or lower range line.\n      // Upper range lines are processed like normal lines.\n      this.isOOB = false;\n      this.rangeLow = lineData[0];\n      this.prefixLength = lineData[1];\n      this.rangeLength = lineData[2];\n      this.prefixCode = lineData[3];\n      this.isLowerRange = lineData[4] === \"lower\";\n    }\n  }\n}\n\nclass HuffmanTreeNode {\n  constructor(line) {\n    this.children = [];\n    if (line) {\n      // Leaf node\n      this.isLeaf = true;\n      this.rangeLength = line.rangeLength;\n      this.rangeLow = line.rangeLow;\n      this.isLowerRange = line.isLowerRange;\n      this.isOOB = line.isOOB;\n    } else {\n      // Intermediate or root node\n      this.isLeaf = false;\n    }\n  }\n\n  buildTree(line, shift) {\n    const bit = (line.prefixCode >> shift) & 1;\n    if (shift <= 0) {\n      // Create a leaf node.\n      this.children[bit] = new HuffmanTreeNode(line);\n    } else {\n      // Create an intermediate node and continue recursively.\n      let node = this.children[bit];\n      if (!node) {\n        this.children[bit] = node = new HuffmanTreeNode(null);\n      }\n      node.buildTree(line, shift - 1);\n    }\n  }\n\n  decodeNode(reader) {\n    if (this.isLeaf) {\n      if (this.isOOB) {\n        return null;\n      }\n      const htOffset = reader.readBits(this.rangeLength);\n      return this.rangeLow + (this.isLowerRange ? -htOffset : htOffset);\n    }\n    const node = this.children[reader.readBit()];\n    if (!node) {\n      throw new Jbig2Error(\"invalid Huffman data\");\n    }\n    return node.decodeNode(reader);\n  }\n}\n\nclass HuffmanTable {\n  constructor(lines, prefixCodesDone) {\n    if (!prefixCodesDone) {\n      this.assignPrefixCodes(lines);\n    }\n    // Create Huffman tree.\n    this.rootNode = new HuffmanTreeNode(null);\n    for (let i = 0, ii = lines.length; i < ii; i++) {\n      const line = lines[i];\n      if (line.prefixLength > 0) {\n        this.rootNode.buildTree(line, line.prefixLength - 1);\n      }\n    }\n  }\n\n  decode(reader) {\n    return this.rootNode.decodeNode(reader);\n  }\n\n  assignPrefixCodes(lines) {\n    // Annex B.3 Assigning the prefix codes.\n    const linesLength = lines.length;\n    let prefixLengthMax = 0;\n    for (let i = 0; i < linesLength; i++) {\n      prefixLengthMax = Math.max(prefixLengthMax, lines[i].prefixLength);\n    }\n\n    const histogram = new Uint32Array(prefixLengthMax + 1);\n    for (let i = 0; i < linesLength; i++) {\n      histogram[lines[i].prefixLength]++;\n    }\n    let currentLength = 1,\n      firstCode = 0,\n      currentCode,\n      currentTemp,\n      line;\n    histogram[0] = 0;\n\n    while (currentLength <= prefixLengthMax) {\n      firstCode = (firstCode + histogram[currentLength - 1]) << 1;\n      currentCode = firstCode;\n      currentTemp = 0;\n      while (currentTemp < linesLength) {\n        line = lines[currentTemp];\n        if (line.prefixLength === currentLength) {\n          line.prefixCode = currentCode;\n          currentCode++;\n        }\n        currentTemp++;\n      }\n      currentLength++;\n    }\n  }\n}\n\nfunction decodeTablesSegment(data, start, end) {\n  // Decodes a Tables segment, i.e., a custom Huffman table.\n  // Annex B.2 Code table structure.\n  const flags = data[start];\n  const lowestValue = readUint32(data, start + 1) & 0xffffffff;\n  const highestValue = readUint32(data, start + 5) & 0xffffffff;\n  const reader = new Reader(data, start + 9, end);\n\n  const prefixSizeBits = ((flags >> 1) & 7) + 1;\n  const rangeSizeBits = ((flags >> 4) & 7) + 1;\n  const lines = [];\n  let prefixLength,\n    rangeLength,\n    currentRangeLow = lowestValue;\n\n  // Normal table lines\n  do {\n    prefixLength = reader.readBits(prefixSizeBits);\n    rangeLength = reader.readBits(rangeSizeBits);\n    lines.push(\n      new HuffmanLine([currentRangeLow, prefixLength, rangeLength, 0])\n    );\n    currentRangeLow += 1 << rangeLength;\n  } while (currentRangeLow < highestValue);\n\n  // Lower range table line\n  prefixLength = reader.readBits(prefixSizeBits);\n  lines.push(new HuffmanLine([lowestValue - 1, prefixLength, 32, 0, \"lower\"]));\n\n  // Upper range table line\n  prefixLength = reader.readBits(prefixSizeBits);\n  lines.push(new HuffmanLine([highestValue, prefixLength, 32, 0]));\n\n  if (flags & 1) {\n    // Out-of-band table line\n    prefixLength = reader.readBits(prefixSizeBits);\n    lines.push(new HuffmanLine([prefixLength, 0]));\n  }\n\n  return new HuffmanTable(lines, false);\n}\n\nconst standardTablesCache = {};\n\nfunction getStandardTable(number) {\n  // Annex B.5 Standard Huffman tables.\n  let table = standardTablesCache[number];\n  if (table) {\n    return table;\n  }\n  let lines;\n  switch (number) {\n    case 1:\n      lines = [\n        [0, 1, 4, 0x0],\n        [16, 2, 8, 0x2],\n        [272, 3, 16, 0x6],\n        [65808, 3, 32, 0x7], // upper\n      ];\n      break;\n    case 2:\n      lines = [\n        [0, 1, 0, 0x0],\n        [1, 2, 0, 0x2],\n        [2, 3, 0, 0x6],\n        [3, 4, 3, 0xe],\n        [11, 5, 6, 0x1e],\n        [75, 6, 32, 0x3e], // upper\n        [6, 0x3f], // OOB\n      ];\n      break;\n    case 3:\n      lines = [\n        [-256, 8, 8, 0xfe],\n        [0, 1, 0, 0x0],\n        [1, 2, 0, 0x2],\n        [2, 3, 0, 0x6],\n        [3, 4, 3, 0xe],\n        [11, 5, 6, 0x1e],\n        [-257, 8, 32, 0xff, \"lower\"],\n        [75, 7, 32, 0x7e], // upper\n        [6, 0x3e], // OOB\n      ];\n      break;\n    case 4:\n      lines = [\n        [1, 1, 0, 0x0],\n        [2, 2, 0, 0x2],\n        [3, 3, 0, 0x6],\n        [4, 4, 3, 0xe],\n        [12, 5, 6, 0x1e],\n        [76, 5, 32, 0x1f], // upper\n      ];\n      break;\n    case 5:\n      lines = [\n        [-255, 7, 8, 0x7e],\n        [1, 1, 0, 0x0],\n        [2, 2, 0, 0x2],\n        [3, 3, 0, 0x6],\n        [4, 4, 3, 0xe],\n        [12, 5, 6, 0x1e],\n        [-256, 7, 32, 0x7f, \"lower\"],\n        [76, 6, 32, 0x3e], // upper\n      ];\n      break;\n    case 6:\n      lines = [\n        [-2048, 5, 10, 0x1c],\n        [-1024, 4, 9, 0x8],\n        [-512, 4, 8, 0x9],\n        [-256, 4, 7, 0xa],\n        [-128, 5, 6, 0x1d],\n        [-64, 5, 5, 0x1e],\n        [-32, 4, 5, 0xb],\n        [0, 2, 7, 0x0],\n        [128, 3, 7, 0x2],\n        [256, 3, 8, 0x3],\n        [512, 4, 9, 0xc],\n        [1024, 4, 10, 0xd],\n        [-2049, 6, 32, 0x3e, \"lower\"],\n        [2048, 6, 32, 0x3f], // upper\n      ];\n      break;\n    case 7:\n      lines = [\n        [-1024, 4, 9, 0x8],\n        [-512, 3, 8, 0x0],\n        [-256, 4, 7, 0x9],\n        [-128, 5, 6, 0x1a],\n        [-64, 5, 5, 0x1b],\n        [-32, 4, 5, 0xa],\n        [0, 4, 5, 0xb],\n        [32, 5, 5, 0x1c],\n        [64, 5, 6, 0x1d],\n        [128, 4, 7, 0xc],\n        [256, 3, 8, 0x1],\n        [512, 3, 9, 0x2],\n        [1024, 3, 10, 0x3],\n        [-1025, 5, 32, 0x1e, \"lower\"],\n        [2048, 5, 32, 0x1f], // upper\n      ];\n      break;\n    case 8:\n      lines = [\n        [-15, 8, 3, 0xfc],\n        [-7, 9, 1, 0x1fc],\n        [-5, 8, 1, 0xfd],\n        [-3, 9, 0, 0x1fd],\n        [-2, 7, 0, 0x7c],\n        [-1, 4, 0, 0xa],\n        [0, 2, 1, 0x0],\n        [2, 5, 0, 0x1a],\n        [3, 6, 0, 0x3a],\n        [4, 3, 4, 0x4],\n        [20, 6, 1, 0x3b],\n        [22, 4, 4, 0xb],\n        [38, 4, 5, 0xc],\n        [70, 5, 6, 0x1b],\n        [134, 5, 7, 0x1c],\n        [262, 6, 7, 0x3c],\n        [390, 7, 8, 0x7d],\n        [646, 6, 10, 0x3d],\n        [-16, 9, 32, 0x1fe, \"lower\"],\n        [1670, 9, 32, 0x1ff], // upper\n        [2, 0x1], // OOB\n      ];\n      break;\n    case 9:\n      lines = [\n        [-31, 8, 4, 0xfc],\n        [-15, 9, 2, 0x1fc],\n        [-11, 8, 2, 0xfd],\n        [-7, 9, 1, 0x1fd],\n        [-5, 7, 1, 0x7c],\n        [-3, 4, 1, 0xa],\n        [-1, 3, 1, 0x2],\n        [1, 3, 1, 0x3],\n        [3, 5, 1, 0x1a],\n        [5, 6, 1, 0x3a],\n        [7, 3, 5, 0x4],\n        [39, 6, 2, 0x3b],\n        [43, 4, 5, 0xb],\n        [75, 4, 6, 0xc],\n        [139, 5, 7, 0x1b],\n        [267, 5, 8, 0x1c],\n        [523, 6, 8, 0x3c],\n        [779, 7, 9, 0x7d],\n        [1291, 6, 11, 0x3d],\n        [-32, 9, 32, 0x1fe, \"lower\"],\n        [3339, 9, 32, 0x1ff], // upper\n        [2, 0x0], // OOB\n      ];\n      break;\n    case 10:\n      lines = [\n        [-21, 7, 4, 0x7a],\n        [-5, 8, 0, 0xfc],\n        [-4, 7, 0, 0x7b],\n        [-3, 5, 0, 0x18],\n        [-2, 2, 2, 0x0],\n        [2, 5, 0, 0x19],\n        [3, 6, 0, 0x36],\n        [4, 7, 0, 0x7c],\n        [5, 8, 0, 0xfd],\n        [6, 2, 6, 0x1],\n        [70, 5, 5, 0x1a],\n        [102, 6, 5, 0x37],\n        [134, 6, 6, 0x38],\n        [198, 6, 7, 0x39],\n        [326, 6, 8, 0x3a],\n        [582, 6, 9, 0x3b],\n        [1094, 6, 10, 0x3c],\n        [2118, 7, 11, 0x7d],\n        [-22, 8, 32, 0xfe, \"lower\"],\n        [4166, 8, 32, 0xff], // upper\n        [2, 0x2], // OOB\n      ];\n      break;\n    case 11:\n      lines = [\n        [1, 1, 0, 0x0],\n        [2, 2, 1, 0x2],\n        [4, 4, 0, 0xc],\n        [5, 4, 1, 0xd],\n        [7, 5, 1, 0x1c],\n        [9, 5, 2, 0x1d],\n        [13, 6, 2, 0x3c],\n        [17, 7, 2, 0x7a],\n        [21, 7, 3, 0x7b],\n        [29, 7, 4, 0x7c],\n        [45, 7, 5, 0x7d],\n        [77, 7, 6, 0x7e],\n        [141, 7, 32, 0x7f], // upper\n      ];\n      break;\n    case 12:\n      lines = [\n        [1, 1, 0, 0x0],\n        [2, 2, 0, 0x2],\n        [3, 3, 1, 0x6],\n        [5, 5, 0, 0x1c],\n        [6, 5, 1, 0x1d],\n        [8, 6, 1, 0x3c],\n        [10, 7, 0, 0x7a],\n        [11, 7, 1, 0x7b],\n        [13, 7, 2, 0x7c],\n        [17, 7, 3, 0x7d],\n        [25, 7, 4, 0x7e],\n        [41, 8, 5, 0xfe],\n        [73, 8, 32, 0xff], // upper\n      ];\n      break;\n    case 13:\n      lines = [\n        [1, 1, 0, 0x0],\n        [2, 3, 0, 0x4],\n        [3, 4, 0, 0xc],\n        [4, 5, 0, 0x1c],\n        [5, 4, 1, 0xd],\n        [7, 3, 3, 0x5],\n        [15, 6, 1, 0x3a],\n        [17, 6, 2, 0x3b],\n        [21, 6, 3, 0x3c],\n        [29, 6, 4, 0x3d],\n        [45, 6, 5, 0x3e],\n        [77, 7, 6, 0x7e],\n        [141, 7, 32, 0x7f], // upper\n      ];\n      break;\n    case 14:\n      lines = [\n        [-2, 3, 0, 0x4],\n        [-1, 3, 0, 0x5],\n        [0, 1, 0, 0x0],\n        [1, 3, 0, 0x6],\n        [2, 3, 0, 0x7],\n      ];\n      break;\n    case 15:\n      lines = [\n        [-24, 7, 4, 0x7c],\n        [-8, 6, 2, 0x3c],\n        [-4, 5, 1, 0x1c],\n        [-2, 4, 0, 0xc],\n        [-1, 3, 0, 0x4],\n        [0, 1, 0, 0x0],\n        [1, 3, 0, 0x5],\n        [2, 4, 0, 0xd],\n        [3, 5, 1, 0x1d],\n        [5, 6, 2, 0x3d],\n        [9, 7, 4, 0x7d],\n        [-25, 7, 32, 0x7e, \"lower\"],\n        [25, 7, 32, 0x7f], // upper\n      ];\n      break;\n    default:\n      throw new Jbig2Error(`standard table B.${number} does not exist`);\n  }\n\n  for (let i = 0, ii = lines.length; i < ii; i++) {\n    lines[i] = new HuffmanLine(lines[i]);\n  }\n  table = new HuffmanTable(lines, true);\n  standardTablesCache[number] = table;\n  return table;\n}\n\nclass Reader {\n  constructor(data, start, end) {\n    this.data = data;\n    this.start = start;\n    this.end = end;\n    this.position = start;\n    this.shift = -1;\n    this.currentByte = 0;\n  }\n\n  readBit() {\n    if (this.shift < 0) {\n      if (this.position >= this.end) {\n        throw new Jbig2Error(\"end of data while reading bit\");\n      }\n      this.currentByte = this.data[this.position++];\n      this.shift = 7;\n    }\n    const bit = (this.currentByte >> this.shift) & 1;\n    this.shift--;\n    return bit;\n  }\n\n  readBits(numBits) {\n    let result = 0,\n      i;\n    for (i = numBits - 1; i >= 0; i--) {\n      result |= this.readBit() << i;\n    }\n    return result;\n  }\n\n  byteAlign() {\n    this.shift = -1;\n  }\n\n  next() {\n    if (this.position >= this.end) {\n      return -1;\n    }\n    return this.data[this.position++];\n  }\n}\n\nfunction getCustomHuffmanTable(index, referredTo, customTables) {\n  // Returns a Tables segment that has been earlier decoded.\n  // See 7.4.2.1.6 (symbol dictionary) or 7.4.3.1.6 (text region).\n  let currentIndex = 0;\n  for (let i = 0, ii = referredTo.length; i < ii; i++) {\n    const table = customTables[referredTo[i]];\n    if (table) {\n      if (index === currentIndex) {\n        return table;\n      }\n      currentIndex++;\n    }\n  }\n  throw new Jbig2Error(\"can't find custom Huffman table\");\n}\n\nfunction getTextRegionHuffmanTables(\n  textRegion,\n  referredTo,\n  customTables,\n  numberOfSymbols,\n  reader\n) {\n  // 7.4.3.1.7 Symbol ID Huffman table decoding\n\n  // Read code lengths for RUNCODEs 0...34.\n  const codes = [];\n  for (let i = 0; i <= 34; i++) {\n    const codeLength = reader.readBits(4);\n    codes.push(new HuffmanLine([i, codeLength, 0, 0]));\n  }\n  // Assign Huffman codes for RUNCODEs.\n  const runCodesTable = new HuffmanTable(codes, false);\n\n  // Read a Huffman code using the assignment above.\n  // Interpret the RUNCODE codes and the additional bits (if any).\n  codes.length = 0;\n  for (let i = 0; i < numberOfSymbols; ) {\n    const codeLength = runCodesTable.decode(reader);\n    if (codeLength >= 32) {\n      let repeatedLength, numberOfRepeats, j;\n      switch (codeLength) {\n        case 32:\n          if (i === 0) {\n            throw new Jbig2Error(\"no previous value in symbol ID table\");\n          }\n          numberOfRepeats = reader.readBits(2) + 3;\n          repeatedLength = codes[i - 1].prefixLength;\n          break;\n        case 33:\n          numberOfRepeats = reader.readBits(3) + 3;\n          repeatedLength = 0;\n          break;\n        case 34:\n          numberOfRepeats = reader.readBits(7) + 11;\n          repeatedLength = 0;\n          break;\n        default:\n          throw new Jbig2Error(\"invalid code length in symbol ID table\");\n      }\n      for (j = 0; j < numberOfRepeats; j++) {\n        codes.push(new HuffmanLine([i, repeatedLength, 0, 0]));\n        i++;\n      }\n    } else {\n      codes.push(new HuffmanLine([i, codeLength, 0, 0]));\n      i++;\n    }\n  }\n  reader.byteAlign();\n  const symbolIDTable = new HuffmanTable(codes, false);\n\n  // 7.4.3.1.6 Text region segment Huffman table selection\n\n  let customIndex = 0,\n    tableFirstS,\n    tableDeltaS,\n    tableDeltaT;\n\n  switch (textRegion.huffmanFS) {\n    case 0:\n    case 1:\n      tableFirstS = getStandardTable(textRegion.huffmanFS + 6);\n      break;\n    case 3:\n      tableFirstS = getCustomHuffmanTable(\n        customIndex,\n        referredTo,\n        customTables\n      );\n      customIndex++;\n      break;\n    default:\n      throw new Jbig2Error(\"invalid Huffman FS selector\");\n  }\n\n  switch (textRegion.huffmanDS) {\n    case 0:\n    case 1:\n    case 2:\n      tableDeltaS = getStandardTable(textRegion.huffmanDS + 8);\n      break;\n    case 3:\n      tableDeltaS = getCustomHuffmanTable(\n        customIndex,\n        referredTo,\n        customTables\n      );\n      customIndex++;\n      break;\n    default:\n      throw new Jbig2Error(\"invalid Huffman DS selector\");\n  }\n\n  switch (textRegion.huffmanDT) {\n    case 0:\n    case 1:\n    case 2:\n      tableDeltaT = getStandardTable(textRegion.huffmanDT + 11);\n      break;\n    case 3:\n      tableDeltaT = getCustomHuffmanTable(\n        customIndex,\n        referredTo,\n        customTables\n      );\n      customIndex++;\n      break;\n    default:\n      throw new Jbig2Error(\"invalid Huffman DT selector\");\n  }\n\n  if (textRegion.refinement) {\n    // Load tables RDW, RDH, RDX and RDY.\n    throw new Jbig2Error(\"refinement with Huffman is not supported\");\n  }\n\n  return {\n    symbolIDTable,\n    tableFirstS,\n    tableDeltaS,\n    tableDeltaT,\n  };\n}\n\nfunction getSymbolDictionaryHuffmanTables(\n  dictionary,\n  referredTo,\n  customTables\n) {\n  // 7.4.2.1.6 Symbol dictionary segment Huffman table selection\n\n  let customIndex = 0,\n    tableDeltaHeight,\n    tableDeltaWidth;\n  switch (dictionary.huffmanDHSelector) {\n    case 0:\n    case 1:\n      tableDeltaHeight = getStandardTable(dictionary.huffmanDHSelector + 4);\n      break;\n    case 3:\n      tableDeltaHeight = getCustomHuffmanTable(\n        customIndex,\n        referredTo,\n        customTables\n      );\n      customIndex++;\n      break;\n    default:\n      throw new Jbig2Error(\"invalid Huffman DH selector\");\n  }\n\n  switch (dictionary.huffmanDWSelector) {\n    case 0:\n    case 1:\n      tableDeltaWidth = getStandardTable(dictionary.huffmanDWSelector + 2);\n      break;\n    case 3:\n      tableDeltaWidth = getCustomHuffmanTable(\n        customIndex,\n        referredTo,\n        customTables\n      );\n      customIndex++;\n      break;\n    default:\n      throw new Jbig2Error(\"invalid Huffman DW selector\");\n  }\n\n  let tableBitmapSize, tableAggregateInstances;\n  if (dictionary.bitmapSizeSelector) {\n    tableBitmapSize = getCustomHuffmanTable(\n      customIndex,\n      referredTo,\n      customTables\n    );\n    customIndex++;\n  } else {\n    tableBitmapSize = getStandardTable(1);\n  }\n\n  if (dictionary.aggregationInstancesSelector) {\n    tableAggregateInstances = getCustomHuffmanTable(\n      customIndex,\n      referredTo,\n      customTables\n    );\n  } else {\n    tableAggregateInstances = getStandardTable(1);\n  }\n\n  return {\n    tableDeltaHeight,\n    tableDeltaWidth,\n    tableBitmapSize,\n    tableAggregateInstances,\n  };\n}\n\nfunction readUncompressedBitmap(reader, width, height) {\n  const bitmap = [];\n  for (let y = 0; y < height; y++) {\n    const row = new Uint8Array(width);\n    bitmap.push(row);\n    for (let x = 0; x < width; x++) {\n      row[x] = reader.readBit();\n    }\n    reader.byteAlign();\n  }\n  return bitmap;\n}\n\nfunction decodeMMRBitmap(input, width, height, endOfBlock) {\n  // MMR is the same compression algorithm as the PDF filter\n  // CCITTFaxDecode with /K -1.\n  const params = {\n    K: -1,\n    Columns: width,\n    Rows: height,\n    BlackIs1: true,\n    EndOfBlock: endOfBlock,\n  };\n  const decoder = new CCITTFaxDecoder(input, params);\n  const bitmap = [];\n  let currentByte,\n    eof = false;\n\n  for (let y = 0; y < height; y++) {\n    const row = new Uint8Array(width);\n    bitmap.push(row);\n    let shift = -1;\n    for (let x = 0; x < width; x++) {\n      if (shift < 0) {\n        currentByte = decoder.readNextChar();\n        if (currentByte === -1) {\n          // Set the rest of the bits to zero.\n          currentByte = 0;\n          eof = true;\n        }\n        shift = 7;\n      }\n      row[x] = (currentByte >> shift) & 1;\n      shift--;\n    }\n  }\n\n  if (endOfBlock && !eof) {\n    // Read until EOFB has been consumed.\n    const lookForEOFLimit = 5;\n    for (let i = 0; i < lookForEOFLimit; i++) {\n      if (decoder.readNextChar() === -1) {\n        break;\n      }\n    }\n  }\n\n  return bitmap;\n}\n\nclass Jbig2Image {\n  parseChunks(chunks) {\n    return parseJbig2Chunks(chunks);\n  }\n\n  parse(data) {\n    const { imgData, width, height } = parseJbig2(data);\n    this.width = width;\n    this.height = height;\n    return imgData;\n  }\n}\n\nexport { Jbig2Image };\n","/* Copyright 2019 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  assert,\n  BaseException,\n  objectSize,\n  stringToPDFString,\n  warn,\n} from \"../shared/util.js\";\nimport { Dict, isName, isRef, isStream, RefSet } from \"./primitives.js\";\n\nfunction getLookupTableFactory(initializer) {\n  let lookup;\n  return function () {\n    if (initializer) {\n      lookup = Object.create(null);\n      initializer(lookup);\n      initializer = null;\n    }\n    return lookup;\n  };\n}\n\nfunction getArrayLookupTableFactory(initializer) {\n  let lookup;\n  return function () {\n    if (initializer) {\n      let arr = initializer();\n      initializer = null;\n      lookup = Object.create(null);\n      for (let i = 0, ii = arr.length; i < ii; i += 2) {\n        lookup[arr[i]] = arr[i + 1];\n      }\n      arr = null;\n    }\n    return lookup;\n  };\n}\n\nclass MissingDataException extends BaseException {\n  constructor(begin, end) {\n    super(`Missing data [${begin}, ${end})`, \"MissingDataException\");\n    this.begin = begin;\n    this.end = end;\n  }\n}\n\nclass ParserEOFException extends BaseException {\n  constructor(msg) {\n    super(msg, \"ParserEOFException\");\n  }\n}\n\nclass XRefEntryException extends BaseException {\n  constructor(msg) {\n    super(msg, \"XRefEntryException\");\n  }\n}\n\nclass XRefParseException extends BaseException {\n  constructor(msg) {\n    super(msg, \"XRefParseException\");\n  }\n}\n\n/**\n * Get the value of an inheritable property.\n *\n * If the PDF specification explicitly lists a property in a dictionary as\n * inheritable, then the value of the property may be present in the dictionary\n * itself or in one or more parents of the dictionary.\n *\n * If the key is not found in the tree, `undefined` is returned. Otherwise,\n * the value for the key is returned or, if `stopWhenFound` is `false`, a list\n * of values is returned.\n *\n * @param {Dict} dict - Dictionary from where to start the traversal.\n * @param {string} key - The key of the property to find the value for.\n * @param {boolean} getArray - Whether or not the value should be fetched as an\n *   array. The default value is `false`.\n * @param {boolean} stopWhenFound - Whether or not to stop the traversal when\n *   the key is found. If set to `false`, we always walk up the entire parent\n *   chain, for example to be able to find `\\Resources` placed on multiple\n *   levels of the tree. The default value is `true`.\n */\nfunction getInheritableProperty({\n  dict,\n  key,\n  getArray = false,\n  stopWhenFound = true,\n}) {\n  let values;\n  const visited = new RefSet();\n\n  while (dict instanceof Dict && !(dict.objId && visited.has(dict.objId))) {\n    if (dict.objId) {\n      visited.put(dict.objId);\n    }\n    const value = getArray ? dict.getArray(key) : dict.get(key);\n    if (value !== undefined) {\n      if (stopWhenFound) {\n        return value;\n      }\n      if (!values) {\n        values = [];\n      }\n      values.push(value);\n    }\n    dict = dict.get(\"Parent\");\n  }\n  return values;\n}\n\n// prettier-ignore\nconst ROMAN_NUMBER_MAP = [\n  \"\", \"C\", \"CC\", \"CCC\", \"CD\", \"D\", \"DC\", \"DCC\", \"DCCC\", \"CM\",\n  \"\", \"X\", \"XX\", \"XXX\", \"XL\", \"L\", \"LX\", \"LXX\", \"LXXX\", \"XC\",\n  \"\", \"I\", \"II\", \"III\", \"IV\", \"V\", \"VI\", \"VII\", \"VIII\", \"IX\"\n];\n\n/**\n * Converts positive integers to (upper case) Roman numerals.\n * @param {number} number - The number that should be converted.\n * @param {boolean} lowerCase - Indicates if the result should be converted\n *   to lower case letters. The default value is `false`.\n * @returns {string} The resulting Roman number.\n */\nfunction toRomanNumerals(number, lowerCase = false) {\n  assert(\n    Number.isInteger(number) && number > 0,\n    \"The number should be a positive integer.\"\n  );\n  const romanBuf = [];\n  let pos;\n  // Thousands\n  while (number >= 1000) {\n    number -= 1000;\n    romanBuf.push(\"M\");\n  }\n  // Hundreds\n  pos = (number / 100) | 0;\n  number %= 100;\n  romanBuf.push(ROMAN_NUMBER_MAP[pos]);\n  // Tens\n  pos = (number / 10) | 0;\n  number %= 10;\n  romanBuf.push(ROMAN_NUMBER_MAP[10 + pos]);\n  // Ones\n  romanBuf.push(ROMAN_NUMBER_MAP[20 + number]); // eslint-disable-line unicorn/no-array-push-push\n\n  const romanStr = romanBuf.join(\"\");\n  return lowerCase ? romanStr.toLowerCase() : romanStr;\n}\n\n// Calculate the base 2 logarithm of the number `x`. This differs from the\n// native function in the sense that it returns the ceiling value and that it\n// returns 0 instead of `Infinity`/`NaN` for `x` values smaller than/equal to 0.\nfunction log2(x) {\n  if (x <= 0) {\n    return 0;\n  }\n  return Math.ceil(Math.log2(x));\n}\n\nfunction readInt8(data, offset) {\n  return (data[offset] << 24) >> 24;\n}\n\nfunction readUint16(data, offset) {\n  return (data[offset] << 8) | data[offset + 1];\n}\n\nfunction readUint32(data, offset) {\n  return (\n    ((data[offset] << 24) |\n      (data[offset + 1] << 16) |\n      (data[offset + 2] << 8) |\n      data[offset + 3]) >>>\n    0\n  );\n}\n\n// Checks if ch is one of the following characters: SPACE, TAB, CR or LF.\nfunction isWhiteSpace(ch) {\n  return ch === 0x20 || ch === 0x09 || ch === 0x0d || ch === 0x0a;\n}\n\n/**\n * AcroForm field names use an array like notation to refer to\n * repeated XFA elements e.g. foo.bar[nnn].\n * see: XFA Spec Chapter 3 - Repeated Elements\n *\n * @param {string} path - XFA path name.\n * @returns {Array} - Array of Objects with the name and pos of\n * each part of the path.\n */\nfunction parseXFAPath(path) {\n  const positionPattern = /(.+)\\[(\\d+)\\]$/;\n  return path.split(\".\").map(component => {\n    const m = component.match(positionPattern);\n    if (m) {\n      return { name: m[1], pos: parseInt(m[2], 10) };\n    }\n    return { name: component, pos: 0 };\n  });\n}\n\nfunction escapePDFName(str) {\n  const buffer = [];\n  let start = 0;\n  for (let i = 0, ii = str.length; i < ii; i++) {\n    const char = str.charCodeAt(i);\n    // Whitespace or delimiters aren't regular chars, so escape them.\n    if (\n      char < 0x21 ||\n      char > 0x7e ||\n      char === 0x23 /* # */ ||\n      char === 0x28 /* ( */ ||\n      char === 0x29 /* ) */ ||\n      char === 0x3c /* < */ ||\n      char === 0x3e /* > */ ||\n      char === 0x5b /* [ */ ||\n      char === 0x5d /* ] */ ||\n      char === 0x7b /* { */ ||\n      char === 0x7d /* } */ ||\n      char === 0x2f /* / */ ||\n      char === 0x25 /* % */\n    ) {\n      if (start < i) {\n        buffer.push(str.substring(start, i));\n      }\n      buffer.push(`#${char.toString(16)}`);\n      start = i + 1;\n    }\n  }\n\n  if (buffer.length === 0) {\n    return str;\n  }\n\n  if (start < str.length) {\n    buffer.push(str.substring(start, str.length));\n  }\n\n  return buffer.join(\"\");\n}\n\nfunction _collectJS(entry, xref, list, parents) {\n  if (!entry) {\n    return;\n  }\n\n  let parent = null;\n  if (isRef(entry)) {\n    if (parents.has(entry)) {\n      // If we've already found entry then we've a cycle.\n      return;\n    }\n    parent = entry;\n    parents.put(parent);\n    entry = xref.fetch(entry);\n  }\n  if (Array.isArray(entry)) {\n    for (const element of entry) {\n      _collectJS(element, xref, list, parents);\n    }\n  } else if (entry instanceof Dict) {\n    if (isName(entry.get(\"S\"), \"JavaScript\") && entry.has(\"JS\")) {\n      const js = entry.get(\"JS\");\n      let code;\n      if (isStream(js)) {\n        code = js.getString();\n      } else {\n        code = js;\n      }\n      code = stringToPDFString(code);\n      if (code) {\n        list.push(code);\n      }\n    }\n    _collectJS(entry.getRaw(\"Next\"), xref, list, parents);\n  }\n\n  if (parent) {\n    parents.remove(parent);\n  }\n}\n\nfunction collectActions(xref, dict, eventType) {\n  const actions = Object.create(null);\n  const additionalActionsDicts = getInheritableProperty({\n    dict,\n    key: \"AA\",\n    stopWhenFound: false,\n  });\n  if (additionalActionsDicts) {\n    // additionalActionsDicts contains dicts from ancestors\n    // as they're found in the tree from bottom to top.\n    // So the dicts are visited in reverse order to guarantee\n    // that actions from elder ancestors will be overwritten\n    // by ones from younger ancestors.\n    for (let i = additionalActionsDicts.length - 1; i >= 0; i--) {\n      const additionalActions = additionalActionsDicts[i];\n      if (!(additionalActions instanceof Dict)) {\n        continue;\n      }\n      for (const key of additionalActions.getKeys()) {\n        const action = eventType[key];\n        if (!action) {\n          continue;\n        }\n        const actionDict = additionalActions.getRaw(key);\n        const parents = new RefSet();\n        const list = [];\n        _collectJS(actionDict, xref, list, parents);\n        if (list.length > 0) {\n          actions[action] = list;\n        }\n      }\n    }\n  }\n  // Collect the Action if any (we may have one on pushbutton).\n  if (dict.has(\"A\")) {\n    const actionDict = dict.get(\"A\");\n    const parents = new RefSet();\n    const list = [];\n    _collectJS(actionDict, xref, list, parents);\n    if (list.length > 0) {\n      actions.Action = list;\n    }\n  }\n  return objectSize(actions) > 0 ? actions : null;\n}\n\nconst XMLEntities = {\n  /* < */ 0x3c: \"&lt;\",\n  /* > */ 0x3e: \"&gt;\",\n  /* & */ 0x26: \"&amp;\",\n  /* \" */ 0x22: \"&quot;\",\n  /* ' */ 0x27: \"&apos;\",\n};\n\nfunction encodeToXmlString(str) {\n  const buffer = [];\n  let start = 0;\n  for (let i = 0, ii = str.length; i < ii; i++) {\n    const char = str.codePointAt(i);\n    if (0x20 <= char && char <= 0x7e) {\n      // ascii\n      const entity = XMLEntities[char];\n      if (entity) {\n        if (start < i) {\n          buffer.push(str.substring(start, i));\n        }\n        buffer.push(entity);\n        start = i + 1;\n      }\n    } else {\n      if (start < i) {\n        buffer.push(str.substring(start, i));\n      }\n      buffer.push(`&#x${char.toString(16).toUpperCase()};`);\n      if (char > 0xd7ff && (char < 0xe000 || char > 0xfffd)) {\n        // char is represented by two u16\n        i++;\n      }\n      start = i + 1;\n    }\n  }\n\n  if (buffer.length === 0) {\n    return str;\n  }\n  if (start < str.length) {\n    buffer.push(str.substring(start, str.length));\n  }\n  return buffer.join(\"\");\n}\n\nfunction validateCSSFont(cssFontInfo) {\n  // See https://developer.mozilla.org/en-US/docs/Web/CSS/font-style.\n  const DEFAULT_CSS_FONT_OBLIQUE = \"14\";\n  // See https://developer.mozilla.org/en-US/docs/Web/CSS/font-weight.\n  const DEFAULT_CSS_FONT_WEIGHT = \"400\";\n  const CSS_FONT_WEIGHT_VALUES = new Set([\n    \"100\",\n    \"200\",\n    \"300\",\n    \"400\",\n    \"500\",\n    \"600\",\n    \"700\",\n    \"800\",\n    \"900\",\n    \"1000\",\n    \"normal\",\n    \"bold\",\n    \"bolder\",\n    \"lighter\",\n  ]);\n\n  const { fontFamily, fontWeight, italicAngle } = cssFontInfo;\n\n  // See https://developer.mozilla.org/en-US/docs/Web/CSS/string.\n  if (/^\".*\"$/.test(fontFamily)) {\n    if (/[^\\\\]\"/.test(fontFamily.slice(1, fontFamily.length - 1))) {\n      warn(`XFA - FontFamily contains some unescaped \": ${fontFamily}.`);\n      return false;\n    }\n  } else if (/^'.*'$/.test(fontFamily)) {\n    if (/[^\\\\]'/.test(fontFamily.slice(1, fontFamily.length - 1))) {\n      warn(`XFA - FontFamily contains some unescaped ': ${fontFamily}.`);\n      return false;\n    }\n  } else {\n    // See https://developer.mozilla.org/en-US/docs/Web/CSS/custom-ident.\n    for (const ident of fontFamily.split(/[ \\t]+/)) {\n      if (/^(\\d|(-(\\d|-)))/.test(ident) || !/^[\\w-\\\\]+$/.test(ident)) {\n        warn(\n          `XFA - FontFamily contains some invalid <custom-ident>: ${fontFamily}.`\n        );\n        return false;\n      }\n    }\n  }\n\n  const weight = fontWeight ? fontWeight.toString() : \"\";\n  cssFontInfo.fontWeight = CSS_FONT_WEIGHT_VALUES.has(weight)\n    ? weight\n    : DEFAULT_CSS_FONT_WEIGHT;\n\n  const angle = parseFloat(italicAngle);\n  cssFontInfo.italicAngle =\n    isNaN(angle) || angle < -90 || angle > 90\n      ? DEFAULT_CSS_FONT_OBLIQUE\n      : italicAngle.toString();\n\n  return true;\n}\n\nfunction recoverJsURL(str) {\n  // Attempt to recover valid URLs from `JS` entries with certain\n  // white-listed formats:\n  //  - window.open('http://example.com')\n  //  - app.launchURL('http://example.com', true)\n  //  - xfa.host.gotoURL('http://example.com')\n  const URL_OPEN_METHODS = [\"app.launchURL\", \"window.open\", \"xfa.host.gotoURL\"];\n  const regex = new RegExp(\n    \"^\\\\s*(\" +\n      URL_OPEN_METHODS.join(\"|\").split(\".\").join(\"\\\\.\") +\n      \")\\\\((?:'|\\\")([^'\\\"]*)(?:'|\\\")(?:,\\\\s*(\\\\w+)\\\\)|\\\\))\",\n    \"i\"\n  );\n\n  const jsUrl = regex.exec(str);\n  if (jsUrl && jsUrl[2]) {\n    const url = jsUrl[2];\n    let newWindow = false;\n\n    if (jsUrl[3] === \"true\" && jsUrl[1] === \"app.launchURL\") {\n      newWindow = true;\n    }\n    return { url, newWindow };\n  }\n\n  return null;\n}\n\nexport {\n  collectActions,\n  encodeToXmlString,\n  escapePDFName,\n  getArrayLookupTableFactory,\n  getInheritableProperty,\n  getLookupTableFactory,\n  isWhiteSpace,\n  log2,\n  MissingDataException,\n  ParserEOFException,\n  parseXFAPath,\n  readInt8,\n  readUint16,\n  readUint32,\n  recoverJsURL,\n  toRomanNumerals,\n  validateCSSFont,\n  XRefEntryException,\n  XRefParseException,\n};\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, shadow, unreachable } from \"../shared/util.js\";\nimport { BaseStream } from \"./base_stream.js\";\n\nconst EOF = Symbol(\"EOF\");\n\nconst Name = (function NameClosure() {\n  let nameCache = Object.create(null);\n\n  // eslint-disable-next-line no-shadow\n  class Name {\n    constructor(name) {\n      this.name = name;\n    }\n\n    static get(name) {\n      const nameValue = nameCache[name];\n      // eslint-disable-next-line no-restricted-syntax\n      return nameValue ? nameValue : (nameCache[name] = new Name(name));\n    }\n\n    static _clearCache() {\n      nameCache = Object.create(null);\n    }\n  }\n\n  return Name;\n})();\n\nconst Cmd = (function CmdClosure() {\n  let cmdCache = Object.create(null);\n\n  // eslint-disable-next-line no-shadow\n  class Cmd {\n    constructor(cmd) {\n      this.cmd = cmd;\n    }\n\n    static get(cmd) {\n      const cmdValue = cmdCache[cmd];\n      // eslint-disable-next-line no-restricted-syntax\n      return cmdValue ? cmdValue : (cmdCache[cmd] = new Cmd(cmd));\n    }\n\n    static _clearCache() {\n      cmdCache = Object.create(null);\n    }\n  }\n\n  return Cmd;\n})();\n\nconst nonSerializable = function nonSerializableClosure() {\n  return nonSerializable; // Creating closure on some variable.\n};\n\nclass Dict {\n  constructor(xref = null) {\n    // Map should only be used internally, use functions below to access.\n    this._map = Object.create(null);\n    this.xref = xref;\n    this.objId = null;\n    this.suppressEncryption = false;\n    this.__nonSerializable__ = nonSerializable; // Disable cloning of the Dict.\n  }\n\n  assignXref(newXref) {\n    this.xref = newXref;\n  }\n\n  get size() {\n    return Object.keys(this._map).length;\n  }\n\n  // Automatically dereferences Ref objects.\n  get(key1, key2, key3) {\n    let value = this._map[key1];\n    if (value === undefined && key2 !== undefined) {\n      value = this._map[key2];\n      if (value === undefined && key3 !== undefined) {\n        value = this._map[key3];\n      }\n    }\n    if (value instanceof Ref && this.xref) {\n      return this.xref.fetch(value, this.suppressEncryption);\n    }\n    return value;\n  }\n\n  // Same as get(), but returns a promise and uses fetchIfRefAsync().\n  async getAsync(key1, key2, key3) {\n    let value = this._map[key1];\n    if (value === undefined && key2 !== undefined) {\n      value = this._map[key2];\n      if (value === undefined && key3 !== undefined) {\n        value = this._map[key3];\n      }\n    }\n    if (value instanceof Ref && this.xref) {\n      return this.xref.fetchAsync(value, this.suppressEncryption);\n    }\n    return value;\n  }\n\n  // Same as get(), but dereferences all elements if the result is an Array.\n  getArray(key1, key2, key3) {\n    let value = this._map[key1];\n    if (value === undefined && key2 !== undefined) {\n      value = this._map[key2];\n      if (value === undefined && key3 !== undefined) {\n        value = this._map[key3];\n      }\n    }\n    if (value instanceof Ref && this.xref) {\n      value = this.xref.fetch(value, this.suppressEncryption);\n    }\n\n    if (Array.isArray(value)) {\n      value = value.slice(); // Ensure that we don't modify the Dict data.\n      for (let i = 0, ii = value.length; i < ii; i++) {\n        if (value[i] instanceof Ref && this.xref) {\n          value[i] = this.xref.fetch(value[i], this.suppressEncryption);\n        }\n      }\n    }\n    return value;\n  }\n\n  // No dereferencing.\n  getRaw(key) {\n    return this._map[key];\n  }\n\n  getKeys() {\n    return Object.keys(this._map);\n  }\n\n  // No dereferencing.\n  getRawValues() {\n    return Object.values(this._map);\n  }\n\n  set(key, value) {\n    if (\n      (typeof PDFJSDev === \"undefined\" ||\n        PDFJSDev.test(\"!PRODUCTION || TESTING\")) &&\n      value === undefined\n    ) {\n      unreachable('Dict.set: The \"value\" cannot be undefined.');\n    }\n    this._map[key] = value;\n  }\n\n  has(key) {\n    return this._map[key] !== undefined;\n  }\n\n  forEach(callback) {\n    for (const key in this._map) {\n      callback(key, this.get(key));\n    }\n  }\n\n  static get empty() {\n    const emptyDict = new Dict(null);\n\n    emptyDict.set = (key, value) => {\n      unreachable(\"Should not call `set` on the empty dictionary.\");\n    };\n    return shadow(this, \"empty\", emptyDict);\n  }\n\n  static merge({ xref, dictArray, mergeSubDicts = false }) {\n    const mergedDict = new Dict(xref),\n      properties = new Map();\n\n    for (const dict of dictArray) {\n      if (!(dict instanceof Dict)) {\n        continue;\n      }\n      for (const [key, value] of Object.entries(dict._map)) {\n        let property = properties.get(key);\n        if (property === undefined) {\n          property = [];\n          properties.set(key, property);\n        } else if (!mergeSubDicts || !(value instanceof Dict)) {\n          // Ignore additional entries, if either:\n          //  - This is a \"shallow\" merge, where only the first element matters.\n          //  - The value is *not* a `Dict`, since other types cannot be merged.\n          continue;\n        }\n        property.push(value);\n      }\n    }\n    for (const [name, values] of properties) {\n      if (values.length === 1 || !(values[0] instanceof Dict)) {\n        mergedDict._map[name] = values[0];\n        continue;\n      }\n      const subDict = new Dict(xref);\n\n      for (const dict of values) {\n        for (const [key, value] of Object.entries(dict._map)) {\n          if (subDict._map[key] === undefined) {\n            subDict._map[key] = value;\n          }\n        }\n      }\n      if (subDict.size > 0) {\n        mergedDict._map[name] = subDict;\n      }\n    }\n    properties.clear();\n\n    return mergedDict.size > 0 ? mergedDict : Dict.empty;\n  }\n}\n\nconst Ref = (function RefClosure() {\n  let refCache = Object.create(null);\n\n  // eslint-disable-next-line no-shadow\n  class Ref {\n    constructor(num, gen) {\n      this.num = num;\n      this.gen = gen;\n    }\n\n    toString() {\n      // This function is hot, so we make the string as compact as possible.\n      // |this.gen| is almost always zero, so we treat that case specially.\n      if (this.gen === 0) {\n        return `${this.num}R`;\n      }\n      return `${this.num}R${this.gen}`;\n    }\n\n    static get(num, gen) {\n      const key = gen === 0 ? `${num}R` : `${num}R${gen}`;\n      const refValue = refCache[key];\n      // eslint-disable-next-line no-restricted-syntax\n      return refValue ? refValue : (refCache[key] = new Ref(num, gen));\n    }\n\n    static _clearCache() {\n      refCache = Object.create(null);\n    }\n  }\n\n  return Ref;\n})();\n\n// The reference is identified by number and generation.\n// This structure stores only one instance of the reference.\nclass RefSet {\n  constructor(parent = null) {\n    if (\n      (typeof PDFJSDev === \"undefined\" ||\n        PDFJSDev.test(\"!PRODUCTION || TESTING\")) &&\n      parent &&\n      !(parent instanceof RefSet)\n    ) {\n      unreachable('RefSet: Invalid \"parent\" value.');\n    }\n    this._set = new Set(parent && parent._set);\n  }\n\n  has(ref) {\n    return this._set.has(ref.toString());\n  }\n\n  put(ref) {\n    this._set.add(ref.toString());\n  }\n\n  remove(ref) {\n    this._set.delete(ref.toString());\n  }\n\n  forEach(callback) {\n    for (const ref of this._set.values()) {\n      callback(ref);\n    }\n  }\n\n  clear() {\n    this._set.clear();\n  }\n}\n\nclass RefSetCache {\n  constructor() {\n    this._map = new Map();\n  }\n\n  get size() {\n    return this._map.size;\n  }\n\n  get(ref) {\n    return this._map.get(ref.toString());\n  }\n\n  has(ref) {\n    return this._map.has(ref.toString());\n  }\n\n  put(ref, obj) {\n    this._map.set(ref.toString(), obj);\n  }\n\n  putAlias(ref, aliasRef) {\n    this._map.set(ref.toString(), this.get(aliasRef));\n  }\n\n  forEach(callback) {\n    for (const value of this._map.values()) {\n      callback(value);\n    }\n  }\n\n  clear() {\n    this._map.clear();\n  }\n}\n\nfunction isName(v, name) {\n  return v instanceof Name && (name === undefined || v.name === name);\n}\n\nfunction isCmd(v, cmd) {\n  return v instanceof Cmd && (cmd === undefined || v.cmd === cmd);\n}\n\nfunction isDict(v, type) {\n  return (\n    v instanceof Dict && (type === undefined || isName(v.get(\"Type\"), type))\n  );\n}\n\nfunction isRef(v) {\n  return v instanceof Ref;\n}\n\nfunction isRefsEqual(v1, v2) {\n  if (\n    typeof PDFJSDev === \"undefined\" ||\n    PDFJSDev.test(\"!PRODUCTION || TESTING\")\n  ) {\n    assert(\n      v1 instanceof Ref && v2 instanceof Ref,\n      \"isRefsEqual: Both parameters should be `Ref`s.\"\n    );\n  }\n  return v1.num === v2.num && v1.gen === v2.gen;\n}\n\nfunction isStream(v) {\n  return v instanceof BaseStream;\n}\n\nfunction clearPrimitiveCaches() {\n  Cmd._clearCache();\n  Name._clearCache();\n  Ref._clearCache();\n}\n\nexport {\n  clearPrimitiveCaches,\n  Cmd,\n  Dict,\n  EOF,\n  isCmd,\n  isDict,\n  isName,\n  isRef,\n  isRefsEqual,\n  isStream,\n  Name,\n  Ref,\n  RefSet,\n  RefSetCache,\n};\n","module.exports = require(\"regenerator-runtime\");\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = GeneratorFunctionPrototype;\n  define(Gp, \"constructor\", GeneratorFunctionPrototype);\n  define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction);\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  });\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  define(Gp, iteratorSymbol, function() {\n    return this;\n  });\n\n  define(Gp, \"toString\", function() {\n    return \"[object Generator]\";\n  });\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, in modern engines\n  // we can explicitly access globalThis. In older engines we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  if (typeof globalThis === \"object\") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n  }\n}\n","/* Copyright 2021 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { bytesToString, shadow, unreachable } from \"../shared/util.js\";\n\nclass BaseStream {\n  constructor() {\n    if (this.constructor === BaseStream) {\n      unreachable(\"Cannot initialize BaseStream.\");\n    }\n  }\n\n  // eslint-disable-next-line getter-return\n  get length() {\n    unreachable(\"Abstract getter `length` accessed\");\n  }\n\n  // eslint-disable-next-line getter-return\n  get isEmpty() {\n    unreachable(\"Abstract getter `isEmpty` accessed\");\n  }\n\n  get isDataLoaded() {\n    return shadow(this, \"isDataLoaded\", true);\n  }\n\n  getByte() {\n    unreachable(\"Abstract method `getByte` called\");\n  }\n\n  getBytes(length, forceClamped = false) {\n    unreachable(\"Abstract method `getBytes` called\");\n  }\n\n  peekByte() {\n    const peekedByte = this.getByte();\n    if (peekedByte !== -1) {\n      this.pos--;\n    }\n    return peekedByte;\n  }\n\n  peekBytes(length, forceClamped = false) {\n    const bytes = this.getBytes(length, forceClamped);\n    this.pos -= bytes.length;\n    return bytes;\n  }\n\n  getUint16() {\n    const b0 = this.getByte();\n    const b1 = this.getByte();\n    if (b0 === -1 || b1 === -1) {\n      return -1;\n    }\n    return (b0 << 8) + b1;\n  }\n\n  getInt32() {\n    const b0 = this.getByte();\n    const b1 = this.getByte();\n    const b2 = this.getByte();\n    const b3 = this.getByte();\n    return (b0 << 24) + (b1 << 16) + (b2 << 8) + b3;\n  }\n\n  getByteRange(begin, end) {\n    unreachable(\"Abstract method `getByteRange` called\");\n  }\n\n  getString(length) {\n    return bytesToString(this.getBytes(length, /* forceClamped = */ false));\n  }\n\n  skip(n) {\n    this.pos += n || 1;\n  }\n\n  reset() {\n    unreachable(\"Abstract method `reset` called\");\n  }\n\n  moveStart() {\n    unreachable(\"Abstract method `moveStart` called\");\n  }\n\n  makeSubStream(start, length, dict = null) {\n    unreachable(\"Abstract method `makeSubStream` called\");\n  }\n\n  /**\n   * @returns {Array | null}\n   */\n  getBaseStreams() {\n    return null;\n  }\n}\n\nexport { BaseStream };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// Table C-2\nconst QeTable = [\n  { qe: 0x5601, nmps: 1, nlps: 1, switchFlag: 1 },\n  { qe: 0x3401, nmps: 2, nlps: 6, switchFlag: 0 },\n  { qe: 0x1801, nmps: 3, nlps: 9, switchFlag: 0 },\n  { qe: 0x0ac1, nmps: 4, nlps: 12, switchFlag: 0 },\n  { qe: 0x0521, nmps: 5, nlps: 29, switchFlag: 0 },\n  { qe: 0x0221, nmps: 38, nlps: 33, switchFlag: 0 },\n  { qe: 0x5601, nmps: 7, nlps: 6, switchFlag: 1 },\n  { qe: 0x5401, nmps: 8, nlps: 14, switchFlag: 0 },\n  { qe: 0x4801, nmps: 9, nlps: 14, switchFlag: 0 },\n  { qe: 0x3801, nmps: 10, nlps: 14, switchFlag: 0 },\n  { qe: 0x3001, nmps: 11, nlps: 17, switchFlag: 0 },\n  { qe: 0x2401, nmps: 12, nlps: 18, switchFlag: 0 },\n  { qe: 0x1c01, nmps: 13, nlps: 20, switchFlag: 0 },\n  { qe: 0x1601, nmps: 29, nlps: 21, switchFlag: 0 },\n  { qe: 0x5601, nmps: 15, nlps: 14, switchFlag: 1 },\n  { qe: 0x5401, nmps: 16, nlps: 14, switchFlag: 0 },\n  { qe: 0x5101, nmps: 17, nlps: 15, switchFlag: 0 },\n  { qe: 0x4801, nmps: 18, nlps: 16, switchFlag: 0 },\n  { qe: 0x3801, nmps: 19, nlps: 17, switchFlag: 0 },\n  { qe: 0x3401, nmps: 20, nlps: 18, switchFlag: 0 },\n  { qe: 0x3001, nmps: 21, nlps: 19, switchFlag: 0 },\n  { qe: 0x2801, nmps: 22, nlps: 19, switchFlag: 0 },\n  { qe: 0x2401, nmps: 23, nlps: 20, switchFlag: 0 },\n  { qe: 0x2201, nmps: 24, nlps: 21, switchFlag: 0 },\n  { qe: 0x1c01, nmps: 25, nlps: 22, switchFlag: 0 },\n  { qe: 0x1801, nmps: 26, nlps: 23, switchFlag: 0 },\n  { qe: 0x1601, nmps: 27, nlps: 24, switchFlag: 0 },\n  { qe: 0x1401, nmps: 28, nlps: 25, switchFlag: 0 },\n  { qe: 0x1201, nmps: 29, nlps: 26, switchFlag: 0 },\n  { qe: 0x1101, nmps: 30, nlps: 27, switchFlag: 0 },\n  { qe: 0x0ac1, nmps: 31, nlps: 28, switchFlag: 0 },\n  { qe: 0x09c1, nmps: 32, nlps: 29, switchFlag: 0 },\n  { qe: 0x08a1, nmps: 33, nlps: 30, switchFlag: 0 },\n  { qe: 0x0521, nmps: 34, nlps: 31, switchFlag: 0 },\n  { qe: 0x0441, nmps: 35, nlps: 32, switchFlag: 0 },\n  { qe: 0x02a1, nmps: 36, nlps: 33, switchFlag: 0 },\n  { qe: 0x0221, nmps: 37, nlps: 34, switchFlag: 0 },\n  { qe: 0x0141, nmps: 38, nlps: 35, switchFlag: 0 },\n  { qe: 0x0111, nmps: 39, nlps: 36, switchFlag: 0 },\n  { qe: 0x0085, nmps: 40, nlps: 37, switchFlag: 0 },\n  { qe: 0x0049, nmps: 41, nlps: 38, switchFlag: 0 },\n  { qe: 0x0025, nmps: 42, nlps: 39, switchFlag: 0 },\n  { qe: 0x0015, nmps: 43, nlps: 40, switchFlag: 0 },\n  { qe: 0x0009, nmps: 44, nlps: 41, switchFlag: 0 },\n  { qe: 0x0005, nmps: 45, nlps: 42, switchFlag: 0 },\n  { qe: 0x0001, nmps: 45, nlps: 43, switchFlag: 0 },\n  { qe: 0x5601, nmps: 46, nlps: 46, switchFlag: 0 },\n];\n\n/**\n * This class implements the QM Coder decoding as defined in\n *   JPEG 2000 Part I Final Committee Draft Version 1.0\n *   Annex C.3 Arithmetic decoding procedure\n * available at http://www.jpeg.org/public/fcd15444-1.pdf\n *\n * The arithmetic decoder is used in conjunction with context models to decode\n * JPEG2000 and JBIG2 streams.\n */\nclass ArithmeticDecoder {\n  // C.3.5 Initialisation of the decoder (INITDEC)\n  constructor(data, start, end) {\n    this.data = data;\n    this.bp = start;\n    this.dataEnd = end;\n\n    this.chigh = data[start];\n    this.clow = 0;\n\n    this.byteIn();\n\n    this.chigh = ((this.chigh << 7) & 0xffff) | ((this.clow >> 9) & 0x7f);\n    this.clow = (this.clow << 7) & 0xffff;\n    this.ct -= 7;\n    this.a = 0x8000;\n  }\n\n  // C.3.4 Compressed data input (BYTEIN)\n  byteIn() {\n    const data = this.data;\n    let bp = this.bp;\n\n    if (data[bp] === 0xff) {\n      if (data[bp + 1] > 0x8f) {\n        this.clow += 0xff00;\n        this.ct = 8;\n      } else {\n        bp++;\n        this.clow += data[bp] << 9;\n        this.ct = 7;\n        this.bp = bp;\n      }\n    } else {\n      bp++;\n      this.clow += bp < this.dataEnd ? data[bp] << 8 : 0xff00;\n      this.ct = 8;\n      this.bp = bp;\n    }\n    if (this.clow > 0xffff) {\n      this.chigh += this.clow >> 16;\n      this.clow &= 0xffff;\n    }\n  }\n\n  // C.3.2 Decoding a decision (DECODE)\n  readBit(contexts, pos) {\n    // Contexts are packed into 1 byte:\n    // highest 7 bits carry cx.index, lowest bit carries cx.mps\n    let cx_index = contexts[pos] >> 1,\n      cx_mps = contexts[pos] & 1;\n    const qeTableIcx = QeTable[cx_index];\n    const qeIcx = qeTableIcx.qe;\n    let d;\n    let a = this.a - qeIcx;\n\n    if (this.chigh < qeIcx) {\n      // exchangeLps\n      if (a < qeIcx) {\n        a = qeIcx;\n        d = cx_mps;\n        cx_index = qeTableIcx.nmps;\n      } else {\n        a = qeIcx;\n        d = 1 ^ cx_mps;\n        if (qeTableIcx.switchFlag === 1) {\n          cx_mps = d;\n        }\n        cx_index = qeTableIcx.nlps;\n      }\n    } else {\n      this.chigh -= qeIcx;\n      if ((a & 0x8000) !== 0) {\n        this.a = a;\n        return cx_mps;\n      }\n      // exchangeMps\n      if (a < qeIcx) {\n        d = 1 ^ cx_mps;\n        if (qeTableIcx.switchFlag === 1) {\n          cx_mps = d;\n        }\n        cx_index = qeTableIcx.nlps;\n      } else {\n        d = cx_mps;\n        cx_index = qeTableIcx.nmps;\n      }\n    }\n    // C.3.3 renormD;\n    do {\n      if (this.ct === 0) {\n        this.byteIn();\n      }\n\n      a <<= 1;\n      this.chigh = ((this.chigh << 1) & 0xffff) | ((this.clow >> 15) & 1);\n      this.clow = (this.clow << 1) & 0xffff;\n      this.ct--;\n    } while ((a & 0x8000) === 0);\n    this.a = a;\n\n    contexts[pos] = (cx_index << 1) | cx_mps;\n    return d;\n  }\n}\n\nexport { ArithmeticDecoder };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* Copyright 1996-2003 Glyph & Cog, LLC\n *\n * The CCITT stream implementation contained in this file is a JavaScript port\n * of XPDF's implementation, made available under the Apache 2.0 open source\n * license.\n */\n\nimport { info } from \"../shared/util.js\";\n\n/**\n * @typedef {Object} CCITTFaxDecoderSource\n * @property {function} next - Method that return one byte of data for decoding,\n *   or -1 when EOF is reached.\n */\n\nconst ccittEOL = -2;\nconst ccittEOF = -1;\nconst twoDimPass = 0;\nconst twoDimHoriz = 1;\nconst twoDimVert0 = 2;\nconst twoDimVertR1 = 3;\nconst twoDimVertL1 = 4;\nconst twoDimVertR2 = 5;\nconst twoDimVertL2 = 6;\nconst twoDimVertR3 = 7;\nconst twoDimVertL3 = 8;\n\n// prettier-ignore\nconst twoDimTable = [\n  [-1, -1], [-1, -1],                   // 000000x\n  [7, twoDimVertL3],                    // 0000010\n  [7, twoDimVertR3],                    // 0000011\n  [6, twoDimVertL2], [6, twoDimVertL2], // 000010x\n  [6, twoDimVertR2], [6, twoDimVertR2], // 000011x\n  [4, twoDimPass], [4, twoDimPass],     // 0001xxx\n  [4, twoDimPass], [4, twoDimPass],\n  [4, twoDimPass], [4, twoDimPass],\n  [4, twoDimPass], [4, twoDimPass],\n  [3, twoDimHoriz], [3, twoDimHoriz],   // 001xxxx\n  [3, twoDimHoriz], [3, twoDimHoriz],\n  [3, twoDimHoriz], [3, twoDimHoriz],\n  [3, twoDimHoriz], [3, twoDimHoriz],\n  [3, twoDimHoriz], [3, twoDimHoriz],\n  [3, twoDimHoriz], [3, twoDimHoriz],\n  [3, twoDimHoriz], [3, twoDimHoriz],\n  [3, twoDimHoriz], [3, twoDimHoriz],\n  [3, twoDimVertL1], [3, twoDimVertL1], // 010xxxx\n  [3, twoDimVertL1], [3, twoDimVertL1],\n  [3, twoDimVertL1], [3, twoDimVertL1],\n  [3, twoDimVertL1], [3, twoDimVertL1],\n  [3, twoDimVertL1], [3, twoDimVertL1],\n  [3, twoDimVertL1], [3, twoDimVertL1],\n  [3, twoDimVertL1], [3, twoDimVertL1],\n  [3, twoDimVertL1], [3, twoDimVertL1],\n  [3, twoDimVertR1], [3, twoDimVertR1], // 011xxxx\n  [3, twoDimVertR1], [3, twoDimVertR1],\n  [3, twoDimVertR1], [3, twoDimVertR1],\n  [3, twoDimVertR1], [3, twoDimVertR1],\n  [3, twoDimVertR1], [3, twoDimVertR1],\n  [3, twoDimVertR1], [3, twoDimVertR1],\n  [3, twoDimVertR1], [3, twoDimVertR1],\n  [3, twoDimVertR1], [3, twoDimVertR1],\n  [1, twoDimVert0], [1, twoDimVert0],   // 1xxxxxx\n  [1, twoDimVert0], [1, twoDimVert0],\n  [1, twoDimVert0], [1, twoDimVert0],\n  [1, twoDimVert0], [1, twoDimVert0],\n  [1, twoDimVert0], [1, twoDimVert0],\n  [1, twoDimVert0], [1, twoDimVert0],\n  [1, twoDimVert0], [1, twoDimVert0],\n  [1, twoDimVert0], [1, twoDimVert0],\n  [1, twoDimVert0], [1, twoDimVert0],\n  [1, twoDimVert0], [1, twoDimVert0],\n  [1, twoDimVert0], [1, twoDimVert0],\n  [1, twoDimVert0], [1, twoDimVert0],\n  [1, twoDimVert0], [1, twoDimVert0],\n  [1, twoDimVert0], [1, twoDimVert0],\n  [1, twoDimVert0], [1, twoDimVert0],\n  [1, twoDimVert0], [1, twoDimVert0],\n  [1, twoDimVert0], [1, twoDimVert0],\n  [1, twoDimVert0], [1, twoDimVert0],\n  [1, twoDimVert0], [1, twoDimVert0],\n  [1, twoDimVert0], [1, twoDimVert0],\n  [1, twoDimVert0], [1, twoDimVert0],\n  [1, twoDimVert0], [1, twoDimVert0],\n  [1, twoDimVert0], [1, twoDimVert0],\n  [1, twoDimVert0], [1, twoDimVert0],\n  [1, twoDimVert0], [1, twoDimVert0],\n  [1, twoDimVert0], [1, twoDimVert0],\n  [1, twoDimVert0], [1, twoDimVert0],\n  [1, twoDimVert0], [1, twoDimVert0],\n  [1, twoDimVert0], [1, twoDimVert0],\n  [1, twoDimVert0], [1, twoDimVert0],\n  [1, twoDimVert0], [1, twoDimVert0],\n  [1, twoDimVert0], [1, twoDimVert0]\n];\n\n// prettier-ignore\nconst whiteTable1 = [\n  [-1, -1],                               // 00000\n  [12, ccittEOL],                         // 00001\n  [-1, -1], [-1, -1],                     // 0001x\n  [-1, -1], [-1, -1], [-1, -1], [-1, -1], // 001xx\n  [-1, -1], [-1, -1], [-1, -1], [-1, -1], // 010xx\n  [-1, -1], [-1, -1], [-1, -1], [-1, -1], // 011xx\n  [11, 1792], [11, 1792],                 // 1000x\n  [12, 1984],                             // 10010\n  [12, 2048],                             // 10011\n  [12, 2112],                             // 10100\n  [12, 2176],                             // 10101\n  [12, 2240],                             // 10110\n  [12, 2304],                             // 10111\n  [11, 1856], [11, 1856],                 // 1100x\n  [11, 1920], [11, 1920],                 // 1101x\n  [12, 2368],                             // 11100\n  [12, 2432],                             // 11101\n  [12, 2496],                             // 11110\n  [12, 2560]                              // 11111\n];\n\n// prettier-ignore\nconst whiteTable2 = [\n  [-1, -1], [-1, -1], [-1, -1], [-1, -1],     // 0000000xx\n  [8, 29], [8, 29],                           // 00000010x\n  [8, 30], [8, 30],                           // 00000011x\n  [8, 45], [8, 45],                           // 00000100x\n  [8, 46], [8, 46],                           // 00000101x\n  [7, 22], [7, 22], [7, 22], [7, 22],         // 0000011xx\n  [7, 23], [7, 23], [7, 23], [7, 23],         // 0000100xx\n  [8, 47], [8, 47],                           // 00001010x\n  [8, 48], [8, 48],                           // 00001011x\n  [6, 13], [6, 13], [6, 13], [6, 13],         // 000011xxx\n  [6, 13], [6, 13], [6, 13], [6, 13],\n  [7, 20], [7, 20], [7, 20], [7, 20],         // 0001000xx\n  [8, 33], [8, 33],                           // 00010010x\n  [8, 34], [8, 34],                           // 00010011x\n  [8, 35], [8, 35],                           // 00010100x\n  [8, 36], [8, 36],                           // 00010101x\n  [8, 37], [8, 37],                           // 00010110x\n  [8, 38], [8, 38],                           // 00010111x\n  [7, 19], [7, 19], [7, 19], [7, 19],         // 0001100xx\n  [8, 31], [8, 31],                           // 00011010x\n  [8, 32], [8, 32],                           // 00011011x\n  [6, 1], [6, 1], [6, 1], [6, 1],             // 000111xxx\n  [6, 1], [6, 1], [6, 1], [6, 1],\n  [6, 12], [6, 12], [6, 12], [6, 12],         // 001000xxx\n  [6, 12], [6, 12], [6, 12], [6, 12],\n  [8, 53], [8, 53],                           // 00100100x\n  [8, 54], [8, 54],                           // 00100101x\n  [7, 26], [7, 26], [7, 26], [7, 26],         // 0010011xx\n  [8, 39], [8, 39],                           // 00101000x\n  [8, 40], [8, 40],                           // 00101001x\n  [8, 41], [8, 41],                           // 00101010x\n  [8, 42], [8, 42],                           // 00101011x\n  [8, 43], [8, 43],                           // 00101100x\n  [8, 44], [8, 44],                           // 00101101x\n  [7, 21], [7, 21], [7, 21], [7, 21],         // 0010111xx\n  [7, 28], [7, 28], [7, 28], [7, 28],         // 0011000xx\n  [8, 61], [8, 61],                           // 00110010x\n  [8, 62], [8, 62],                           // 00110011x\n  [8, 63], [8, 63],                           // 00110100x\n  [8, 0], [8, 0],                             // 00110101x\n  [8, 320], [8, 320],                         // 00110110x\n  [8, 384], [8, 384],                         // 00110111x\n  [5, 10], [5, 10], [5, 10], [5, 10],         // 00111xxxx\n  [5, 10], [5, 10], [5, 10], [5, 10],\n  [5, 10], [5, 10], [5, 10], [5, 10],\n  [5, 10], [5, 10], [5, 10], [5, 10],\n  [5, 11], [5, 11], [5, 11], [5, 11],         // 01000xxxx\n  [5, 11], [5, 11], [5, 11], [5, 11],\n  [5, 11], [5, 11], [5, 11], [5, 11],\n  [5, 11], [5, 11], [5, 11], [5, 11],\n  [7, 27], [7, 27], [7, 27], [7, 27],         // 0100100xx\n  [8, 59], [8, 59],                           // 01001010x\n  [8, 60], [8, 60],                           // 01001011x\n  [9, 1472],                                  // 010011000\n  [9, 1536],                                  // 010011001\n  [9, 1600],                                  // 010011010\n  [9, 1728],                                  // 010011011\n  [7, 18], [7, 18], [7, 18], [7, 18],         // 0100111xx\n  [7, 24], [7, 24], [7, 24], [7, 24],         // 0101000xx\n  [8, 49], [8, 49],                           // 01010010x\n  [8, 50], [8, 50],                           // 01010011x\n  [8, 51], [8, 51],                           // 01010100x\n  [8, 52], [8, 52],                           // 01010101x\n  [7, 25], [7, 25], [7, 25], [7, 25],         // 0101011xx\n  [8, 55], [8, 55],                           // 01011000x\n  [8, 56], [8, 56],                           // 01011001x\n  [8, 57], [8, 57],                           // 01011010x\n  [8, 58], [8, 58],                           // 01011011x\n  [6, 192], [6, 192], [6, 192], [6, 192],     // 010111xxx\n  [6, 192], [6, 192], [6, 192], [6, 192],\n  [6, 1664], [6, 1664], [6, 1664], [6, 1664], // 011000xxx\n  [6, 1664], [6, 1664], [6, 1664], [6, 1664],\n  [8, 448], [8, 448],                         // 01100100x\n  [8, 512], [8, 512],                         // 01100101x\n  [9, 704],                                   // 011001100\n  [9, 768],                                   // 011001101\n  [8, 640], [8, 640],                         // 01100111x\n  [8, 576], [8, 576],                         // 01101000x\n  [9, 832],                                   // 011010010\n  [9, 896],                                   // 011010011\n  [9, 960],                                   // 011010100\n  [9, 1024],                                  // 011010101\n  [9, 1088],                                  // 011010110\n  [9, 1152],                                  // 011010111\n  [9, 1216],                                  // 011011000\n  [9, 1280],                                  // 011011001\n  [9, 1344],                                  // 011011010\n  [9, 1408],                                  // 011011011\n  [7, 256], [7, 256], [7, 256], [7, 256],     // 0110111xx\n  [4, 2], [4, 2], [4, 2], [4, 2],             // 0111xxxxx\n  [4, 2], [4, 2], [4, 2], [4, 2],\n  [4, 2], [4, 2], [4, 2], [4, 2],\n  [4, 2], [4, 2], [4, 2], [4, 2],\n  [4, 2], [4, 2], [4, 2], [4, 2],\n  [4, 2], [4, 2], [4, 2], [4, 2],\n  [4, 2], [4, 2], [4, 2], [4, 2],\n  [4, 2], [4, 2], [4, 2], [4, 2],\n  [4, 3], [4, 3], [4, 3], [4, 3],             // 1000xxxxx\n  [4, 3], [4, 3], [4, 3], [4, 3],\n  [4, 3], [4, 3], [4, 3], [4, 3],\n  [4, 3], [4, 3], [4, 3], [4, 3],\n  [4, 3], [4, 3], [4, 3], [4, 3],\n  [4, 3], [4, 3], [4, 3], [4, 3],\n  [4, 3], [4, 3], [4, 3], [4, 3],\n  [4, 3], [4, 3], [4, 3], [4, 3],\n  [5, 128], [5, 128], [5, 128], [5, 128],     // 10010xxxx\n  [5, 128], [5, 128], [5, 128], [5, 128],\n  [5, 128], [5, 128], [5, 128], [5, 128],\n  [5, 128], [5, 128], [5, 128], [5, 128],\n  [5, 8], [5, 8], [5, 8], [5, 8],             // 10011xxxx\n  [5, 8], [5, 8], [5, 8], [5, 8],\n  [5, 8], [5, 8], [5, 8], [5, 8],\n  [5, 8], [5, 8], [5, 8], [5, 8],\n  [5, 9], [5, 9], [5, 9], [5, 9],             // 10100xxxx\n  [5, 9], [5, 9], [5, 9], [5, 9],\n  [5, 9], [5, 9], [5, 9], [5, 9],\n  [5, 9], [5, 9], [5, 9], [5, 9],\n  [6, 16], [6, 16], [6, 16], [6, 16],         // 101010xxx\n  [6, 16], [6, 16], [6, 16], [6, 16],\n  [6, 17], [6, 17], [6, 17], [6, 17],         // 101011xxx\n  [6, 17], [6, 17], [6, 17], [6, 17],\n  [4, 4], [4, 4], [4, 4], [4, 4],             // 1011xxxxx\n  [4, 4], [4, 4], [4, 4], [4, 4],\n  [4, 4], [4, 4], [4, 4], [4, 4],\n  [4, 4], [4, 4], [4, 4], [4, 4],\n  [4, 4], [4, 4], [4, 4], [4, 4],\n  [4, 4], [4, 4], [4, 4], [4, 4],\n  [4, 4], [4, 4], [4, 4], [4, 4],\n  [4, 4], [4, 4], [4, 4], [4, 4],\n  [4, 5], [4, 5], [4, 5], [4, 5],             // 1100xxxxx\n  [4, 5], [4, 5], [4, 5], [4, 5],\n  [4, 5], [4, 5], [4, 5], [4, 5],\n  [4, 5], [4, 5], [4, 5], [4, 5],\n  [4, 5], [4, 5], [4, 5], [4, 5],\n  [4, 5], [4, 5], [4, 5], [4, 5],\n  [4, 5], [4, 5], [4, 5], [4, 5],\n  [4, 5], [4, 5], [4, 5], [4, 5],\n  [6, 14], [6, 14], [6, 14], [6, 14],         // 110100xxx\n  [6, 14], [6, 14], [6, 14], [6, 14],\n  [6, 15], [6, 15], [6, 15], [6, 15],         // 110101xxx\n  [6, 15], [6, 15], [6, 15], [6, 15],\n  [5, 64], [5, 64], [5, 64], [5, 64],         // 11011xxxx\n  [5, 64], [5, 64], [5, 64], [5, 64],\n  [5, 64], [5, 64], [5, 64], [5, 64],\n  [5, 64], [5, 64], [5, 64], [5, 64],\n  [4, 6], [4, 6], [4, 6], [4, 6],             // 1110xxxxx\n  [4, 6], [4, 6], [4, 6], [4, 6],\n  [4, 6], [4, 6], [4, 6], [4, 6],\n  [4, 6], [4, 6], [4, 6], [4, 6],\n  [4, 6], [4, 6], [4, 6], [4, 6],\n  [4, 6], [4, 6], [4, 6], [4, 6],\n  [4, 6], [4, 6], [4, 6], [4, 6],\n  [4, 6], [4, 6], [4, 6], [4, 6],\n  [4, 7], [4, 7], [4, 7], [4, 7],             // 1111xxxxx\n  [4, 7], [4, 7], [4, 7], [4, 7],\n  [4, 7], [4, 7], [4, 7], [4, 7],\n  [4, 7], [4, 7], [4, 7], [4, 7],\n  [4, 7], [4, 7], [4, 7], [4, 7],\n  [4, 7], [4, 7], [4, 7], [4, 7],\n  [4, 7], [4, 7], [4, 7], [4, 7],\n  [4, 7], [4, 7], [4, 7], [4, 7]\n];\n\n// prettier-ignore\nconst blackTable1 = [\n  [-1, -1], [-1, -1],                             // 000000000000x\n  [12, ccittEOL], [12, ccittEOL],                 // 000000000001x\n  [-1, -1], [-1, -1], [-1, -1], [-1, -1],         // 00000000001xx\n  [-1, -1], [-1, -1], [-1, -1], [-1, -1],         // 00000000010xx\n  [-1, -1], [-1, -1], [-1, -1], [-1, -1],         // 00000000011xx\n  [-1, -1], [-1, -1], [-1, -1], [-1, -1],         // 00000000100xx\n  [-1, -1], [-1, -1], [-1, -1], [-1, -1],         // 00000000101xx\n  [-1, -1], [-1, -1], [-1, -1], [-1, -1],         // 00000000110xx\n  [-1, -1], [-1, -1], [-1, -1], [-1, -1],         // 00000000111xx\n  [11, 1792], [11, 1792], [11, 1792], [11, 1792], // 00000001000xx\n  [12, 1984], [12, 1984],                         // 000000010010x\n  [12, 2048], [12, 2048],                         // 000000010011x\n  [12, 2112], [12, 2112],                         // 000000010100x\n  [12, 2176], [12, 2176],                         // 000000010101x\n  [12, 2240], [12, 2240],                         // 000000010110x\n  [12, 2304], [12, 2304],                         // 000000010111x\n  [11, 1856], [11, 1856], [11, 1856], [11, 1856], // 00000001100xx\n  [11, 1920], [11, 1920], [11, 1920], [11, 1920], // 00000001101xx\n  [12, 2368], [12, 2368],                         // 000000011100x\n  [12, 2432], [12, 2432],                         // 000000011101x\n  [12, 2496], [12, 2496],                         // 000000011110x\n  [12, 2560], [12, 2560],                         // 000000011111x\n  [10, 18], [10, 18], [10, 18], [10, 18],         // 0000001000xxx\n  [10, 18], [10, 18], [10, 18], [10, 18],\n  [12, 52], [12, 52],                             // 000000100100x\n  [13, 640],                                      // 0000001001010\n  [13, 704],                                      // 0000001001011\n  [13, 768],                                      // 0000001001100\n  [13, 832],                                      // 0000001001101\n  [12, 55], [12, 55],                             // 000000100111x\n  [12, 56], [12, 56],                             // 000000101000x\n  [13, 1280],                                     // 0000001010010\n  [13, 1344],                                     // 0000001010011\n  [13, 1408],                                     // 0000001010100\n  [13, 1472],                                     // 0000001010101\n  [12, 59], [12, 59],                             // 000000101011x\n  [12, 60], [12, 60],                             // 000000101100x\n  [13, 1536],                                     // 0000001011010\n  [13, 1600],                                     // 0000001011011\n  [11, 24], [11, 24], [11, 24], [11, 24],         // 00000010111xx\n  [11, 25], [11, 25], [11, 25], [11, 25],         // 00000011000xx\n  [13, 1664],                                     // 0000001100100\n  [13, 1728],                                     // 0000001100101\n  [12, 320], [12, 320],                           // 000000110011x\n  [12, 384], [12, 384],                           // 000000110100x\n  [12, 448], [12, 448],                           // 000000110101x\n  [13, 512],                                      // 0000001101100\n  [13, 576],                                      // 0000001101101\n  [12, 53], [12, 53],                             // 000000110111x\n  [12, 54], [12, 54],                             // 000000111000x\n  [13, 896],                                      // 0000001110010\n  [13, 960],                                      // 0000001110011\n  [13, 1024],                                     // 0000001110100\n  [13, 1088],                                     // 0000001110101\n  [13, 1152],                                     // 0000001110110\n  [13, 1216],                                     // 0000001110111\n  [10, 64], [10, 64], [10, 64], [10, 64],         // 0000001111xxx\n  [10, 64], [10, 64], [10, 64], [10, 64]\n];\n\n// prettier-ignore\nconst blackTable2 = [\n  [8, 13], [8, 13], [8, 13], [8, 13],     // 00000100xxxx\n  [8, 13], [8, 13], [8, 13], [8, 13],\n  [8, 13], [8, 13], [8, 13], [8, 13],\n  [8, 13], [8, 13], [8, 13], [8, 13],\n  [11, 23], [11, 23],                     // 00000101000x\n  [12, 50],                               // 000001010010\n  [12, 51],                               // 000001010011\n  [12, 44],                               // 000001010100\n  [12, 45],                               // 000001010101\n  [12, 46],                               // 000001010110\n  [12, 47],                               // 000001010111\n  [12, 57],                               // 000001011000\n  [12, 58],                               // 000001011001\n  [12, 61],                               // 000001011010\n  [12, 256],                              // 000001011011\n  [10, 16], [10, 16], [10, 16], [10, 16], // 0000010111xx\n  [10, 17], [10, 17], [10, 17], [10, 17], // 0000011000xx\n  [12, 48],                               // 000001100100\n  [12, 49],                               // 000001100101\n  [12, 62],                               // 000001100110\n  [12, 63],                               // 000001100111\n  [12, 30],                               // 000001101000\n  [12, 31],                               // 000001101001\n  [12, 32],                               // 000001101010\n  [12, 33],                               // 000001101011\n  [12, 40],                               // 000001101100\n  [12, 41],                               // 000001101101\n  [11, 22], [11, 22],                     // 00000110111x\n  [8, 14], [8, 14], [8, 14], [8, 14],     // 00000111xxxx\n  [8, 14], [8, 14], [8, 14], [8, 14],\n  [8, 14], [8, 14], [8, 14], [8, 14],\n  [8, 14], [8, 14], [8, 14], [8, 14],\n  [7, 10], [7, 10], [7, 10], [7, 10],     // 0000100xxxxx\n  [7, 10], [7, 10], [7, 10], [7, 10],\n  [7, 10], [7, 10], [7, 10], [7, 10],\n  [7, 10], [7, 10], [7, 10], [7, 10],\n  [7, 10], [7, 10], [7, 10], [7, 10],\n  [7, 10], [7, 10], [7, 10], [7, 10],\n  [7, 10], [7, 10], [7, 10], [7, 10],\n  [7, 10], [7, 10], [7, 10], [7, 10],\n  [7, 11], [7, 11], [7, 11], [7, 11],     // 0000101xxxxx\n  [7, 11], [7, 11], [7, 11], [7, 11],\n  [7, 11], [7, 11], [7, 11], [7, 11],\n  [7, 11], [7, 11], [7, 11], [7, 11],\n  [7, 11], [7, 11], [7, 11], [7, 11],\n  [7, 11], [7, 11], [7, 11], [7, 11],\n  [7, 11], [7, 11], [7, 11], [7, 11],\n  [7, 11], [7, 11], [7, 11], [7, 11],\n  [9, 15], [9, 15], [9, 15], [9, 15],     // 000011000xxx\n  [9, 15], [9, 15], [9, 15], [9, 15],\n  [12, 128],                              // 000011001000\n  [12, 192],                              // 000011001001\n  [12, 26],                               // 000011001010\n  [12, 27],                               // 000011001011\n  [12, 28],                               // 000011001100\n  [12, 29],                               // 000011001101\n  [11, 19], [11, 19],                     // 00001100111x\n  [11, 20], [11, 20],                     // 00001101000x\n  [12, 34],                               // 000011010010\n  [12, 35],                               // 000011010011\n  [12, 36],                               // 000011010100\n  [12, 37],                               // 000011010101\n  [12, 38],                               // 000011010110\n  [12, 39],                               // 000011010111\n  [11, 21], [11, 21],                     // 00001101100x\n  [12, 42],                               // 000011011010\n  [12, 43],                               // 000011011011\n  [10, 0], [10, 0], [10, 0], [10, 0],     // 0000110111xx\n  [7, 12], [7, 12], [7, 12], [7, 12],     // 0000111xxxxx\n  [7, 12], [7, 12], [7, 12], [7, 12],\n  [7, 12], [7, 12], [7, 12], [7, 12],\n  [7, 12], [7, 12], [7, 12], [7, 12],\n  [7, 12], [7, 12], [7, 12], [7, 12],\n  [7, 12], [7, 12], [7, 12], [7, 12],\n  [7, 12], [7, 12], [7, 12], [7, 12],\n  [7, 12], [7, 12], [7, 12], [7, 12]\n];\n\n// prettier-ignore\nconst blackTable3 = [\n  [-1, -1], [-1, -1], [-1, -1], [-1, -1], // 0000xx\n  [6, 9],                                 // 000100\n  [6, 8],                                 // 000101\n  [5, 7], [5, 7],                         // 00011x\n  [4, 6], [4, 6], [4, 6], [4, 6],         // 0010xx\n  [4, 5], [4, 5], [4, 5], [4, 5],         // 0011xx\n  [3, 1], [3, 1], [3, 1], [3, 1],         // 010xxx\n  [3, 1], [3, 1], [3, 1], [3, 1],\n  [3, 4], [3, 4], [3, 4], [3, 4],         // 011xxx\n  [3, 4], [3, 4], [3, 4], [3, 4],\n  [2, 3], [2, 3], [2, 3], [2, 3],         // 10xxxx\n  [2, 3], [2, 3], [2, 3], [2, 3],\n  [2, 3], [2, 3], [2, 3], [2, 3],\n  [2, 3], [2, 3], [2, 3], [2, 3],\n  [2, 2], [2, 2], [2, 2], [2, 2],         // 11xxxx\n  [2, 2], [2, 2], [2, 2], [2, 2],\n  [2, 2], [2, 2], [2, 2], [2, 2],\n  [2, 2], [2, 2], [2, 2], [2, 2]\n];\n\n/**\n * @param {CCITTFaxDecoderSource} source - The data which should be decoded.\n * @param {Object} [options] - Decoding options.\n */\nclass CCITTFaxDecoder {\n  constructor(source, options = {}) {\n    if (!source || typeof source.next !== \"function\") {\n      throw new Error('CCITTFaxDecoder - invalid \"source\" parameter.');\n    }\n    this.source = source;\n    this.eof = false;\n\n    this.encoding = options.K || 0;\n    this.eoline = options.EndOfLine || false;\n    this.byteAlign = options.EncodedByteAlign || false;\n    this.columns = options.Columns || 1728;\n    this.rows = options.Rows || 0;\n    let eoblock = options.EndOfBlock;\n    if (eoblock === null || eoblock === undefined) {\n      eoblock = true;\n    }\n    this.eoblock = eoblock;\n    this.black = options.BlackIs1 || false;\n\n    this.codingLine = new Uint32Array(this.columns + 1);\n    this.refLine = new Uint32Array(this.columns + 2);\n\n    this.codingLine[0] = this.columns;\n    this.codingPos = 0;\n\n    this.row = 0;\n    this.nextLine2D = this.encoding < 0;\n    this.inputBits = 0;\n    this.inputBuf = 0;\n    this.outputBits = 0;\n    this.rowsDone = false;\n\n    let code1;\n    while ((code1 = this._lookBits(12)) === 0) {\n      this._eatBits(1);\n    }\n    if (code1 === 1) {\n      this._eatBits(12);\n    }\n    if (this.encoding > 0) {\n      this.nextLine2D = !this._lookBits(1);\n      this._eatBits(1);\n    }\n  }\n\n  readNextChar() {\n    if (this.eof) {\n      return -1;\n    }\n    const refLine = this.refLine;\n    const codingLine = this.codingLine;\n    const columns = this.columns;\n\n    let refPos, blackPixels, bits, i;\n\n    if (this.outputBits === 0) {\n      if (this.rowsDone) {\n        this.eof = true;\n      }\n      if (this.eof) {\n        return -1;\n      }\n      this.err = false;\n\n      let code1, code2, code3;\n      if (this.nextLine2D) {\n        for (i = 0; codingLine[i] < columns; ++i) {\n          refLine[i] = codingLine[i];\n        }\n        refLine[i++] = columns;\n        refLine[i] = columns;\n        codingLine[0] = 0;\n        this.codingPos = 0;\n        refPos = 0;\n        blackPixels = 0;\n\n        while (codingLine[this.codingPos] < columns) {\n          code1 = this._getTwoDimCode();\n          switch (code1) {\n            case twoDimPass:\n              this._addPixels(refLine[refPos + 1], blackPixels);\n              if (refLine[refPos + 1] < columns) {\n                refPos += 2;\n              }\n              break;\n            case twoDimHoriz:\n              code1 = code2 = 0;\n              if (blackPixels) {\n                do {\n                  code1 += code3 = this._getBlackCode();\n                } while (code3 >= 64);\n                do {\n                  code2 += code3 = this._getWhiteCode();\n                } while (code3 >= 64);\n              } else {\n                do {\n                  code1 += code3 = this._getWhiteCode();\n                } while (code3 >= 64);\n                do {\n                  code2 += code3 = this._getBlackCode();\n                } while (code3 >= 64);\n              }\n              this._addPixels(codingLine[this.codingPos] + code1, blackPixels);\n              if (codingLine[this.codingPos] < columns) {\n                this._addPixels(\n                  codingLine[this.codingPos] + code2,\n                  blackPixels ^ 1\n                );\n              }\n              while (\n                refLine[refPos] <= codingLine[this.codingPos] &&\n                refLine[refPos] < columns\n              ) {\n                refPos += 2;\n              }\n              break;\n            case twoDimVertR3:\n              this._addPixels(refLine[refPos] + 3, blackPixels);\n              blackPixels ^= 1;\n              if (codingLine[this.codingPos] < columns) {\n                ++refPos;\n                while (\n                  refLine[refPos] <= codingLine[this.codingPos] &&\n                  refLine[refPos] < columns\n                ) {\n                  refPos += 2;\n                }\n              }\n              break;\n            case twoDimVertR2:\n              this._addPixels(refLine[refPos] + 2, blackPixels);\n              blackPixels ^= 1;\n              if (codingLine[this.codingPos] < columns) {\n                ++refPos;\n                while (\n                  refLine[refPos] <= codingLine[this.codingPos] &&\n                  refLine[refPos] < columns\n                ) {\n                  refPos += 2;\n                }\n              }\n              break;\n            case twoDimVertR1:\n              this._addPixels(refLine[refPos] + 1, blackPixels);\n              blackPixels ^= 1;\n              if (codingLine[this.codingPos] < columns) {\n                ++refPos;\n                while (\n                  refLine[refPos] <= codingLine[this.codingPos] &&\n                  refLine[refPos] < columns\n                ) {\n                  refPos += 2;\n                }\n              }\n              break;\n            case twoDimVert0:\n              this._addPixels(refLine[refPos], blackPixels);\n              blackPixels ^= 1;\n              if (codingLine[this.codingPos] < columns) {\n                ++refPos;\n                while (\n                  refLine[refPos] <= codingLine[this.codingPos] &&\n                  refLine[refPos] < columns\n                ) {\n                  refPos += 2;\n                }\n              }\n              break;\n            case twoDimVertL3:\n              this._addPixelsNeg(refLine[refPos] - 3, blackPixels);\n              blackPixels ^= 1;\n              if (codingLine[this.codingPos] < columns) {\n                if (refPos > 0) {\n                  --refPos;\n                } else {\n                  ++refPos;\n                }\n                while (\n                  refLine[refPos] <= codingLine[this.codingPos] &&\n                  refLine[refPos] < columns\n                ) {\n                  refPos += 2;\n                }\n              }\n              break;\n            case twoDimVertL2:\n              this._addPixelsNeg(refLine[refPos] - 2, blackPixels);\n              blackPixels ^= 1;\n              if (codingLine[this.codingPos] < columns) {\n                if (refPos > 0) {\n                  --refPos;\n                } else {\n                  ++refPos;\n                }\n                while (\n                  refLine[refPos] <= codingLine[this.codingPos] &&\n                  refLine[refPos] < columns\n                ) {\n                  refPos += 2;\n                }\n              }\n              break;\n            case twoDimVertL1:\n              this._addPixelsNeg(refLine[refPos] - 1, blackPixels);\n              blackPixels ^= 1;\n              if (codingLine[this.codingPos] < columns) {\n                if (refPos > 0) {\n                  --refPos;\n                } else {\n                  ++refPos;\n                }\n                while (\n                  refLine[refPos] <= codingLine[this.codingPos] &&\n                  refLine[refPos] < columns\n                ) {\n                  refPos += 2;\n                }\n              }\n              break;\n            case ccittEOF:\n              this._addPixels(columns, 0);\n              this.eof = true;\n              break;\n            default:\n              info(\"bad 2d code\");\n              this._addPixels(columns, 0);\n              this.err = true;\n          }\n        }\n      } else {\n        codingLine[0] = 0;\n        this.codingPos = 0;\n        blackPixels = 0;\n        while (codingLine[this.codingPos] < columns) {\n          code1 = 0;\n          if (blackPixels) {\n            do {\n              code1 += code3 = this._getBlackCode();\n            } while (code3 >= 64);\n          } else {\n            do {\n              code1 += code3 = this._getWhiteCode();\n            } while (code3 >= 64);\n          }\n          this._addPixels(codingLine[this.codingPos] + code1, blackPixels);\n          blackPixels ^= 1;\n        }\n      }\n\n      let gotEOL = false;\n\n      if (this.byteAlign) {\n        this.inputBits &= ~7;\n      }\n\n      if (!this.eoblock && this.row === this.rows - 1) {\n        this.rowsDone = true;\n      } else {\n        code1 = this._lookBits(12);\n        if (this.eoline) {\n          while (code1 !== ccittEOF && code1 !== 1) {\n            this._eatBits(1);\n            code1 = this._lookBits(12);\n          }\n        } else {\n          while (code1 === 0) {\n            this._eatBits(1);\n            code1 = this._lookBits(12);\n          }\n        }\n        if (code1 === 1) {\n          this._eatBits(12);\n          gotEOL = true;\n        } else if (code1 === ccittEOF) {\n          this.eof = true;\n        }\n      }\n\n      if (!this.eof && this.encoding > 0 && !this.rowsDone) {\n        this.nextLine2D = !this._lookBits(1);\n        this._eatBits(1);\n      }\n\n      if (this.eoblock && gotEOL && this.byteAlign) {\n        code1 = this._lookBits(12);\n        if (code1 === 1) {\n          this._eatBits(12);\n          if (this.encoding > 0) {\n            this._lookBits(1);\n            this._eatBits(1);\n          }\n          if (this.encoding >= 0) {\n            for (i = 0; i < 4; ++i) {\n              code1 = this._lookBits(12);\n              if (code1 !== 1) {\n                info(\"bad rtc code: \" + code1);\n              }\n              this._eatBits(12);\n              if (this.encoding > 0) {\n                this._lookBits(1);\n                this._eatBits(1);\n              }\n            }\n          }\n          this.eof = true;\n        }\n      } else if (this.err && this.eoline) {\n        while (true) {\n          code1 = this._lookBits(13);\n          if (code1 === ccittEOF) {\n            this.eof = true;\n            return -1;\n          }\n          if (code1 >> 1 === 1) {\n            break;\n          }\n          this._eatBits(1);\n        }\n        this._eatBits(12);\n        if (this.encoding > 0) {\n          this._eatBits(1);\n          this.nextLine2D = !(code1 & 1);\n        }\n      }\n\n      if (codingLine[0] > 0) {\n        this.outputBits = codingLine[(this.codingPos = 0)];\n      } else {\n        this.outputBits = codingLine[(this.codingPos = 1)];\n      }\n      this.row++;\n    }\n\n    let c;\n    if (this.outputBits >= 8) {\n      c = this.codingPos & 1 ? 0 : 0xff;\n      this.outputBits -= 8;\n      if (this.outputBits === 0 && codingLine[this.codingPos] < columns) {\n        this.codingPos++;\n        this.outputBits =\n          codingLine[this.codingPos] - codingLine[this.codingPos - 1];\n      }\n    } else {\n      bits = 8;\n      c = 0;\n      do {\n        if (this.outputBits > bits) {\n          c <<= bits;\n          if (!(this.codingPos & 1)) {\n            c |= 0xff >> (8 - bits);\n          }\n          this.outputBits -= bits;\n          bits = 0;\n        } else {\n          c <<= this.outputBits;\n          if (!(this.codingPos & 1)) {\n            c |= 0xff >> (8 - this.outputBits);\n          }\n          bits -= this.outputBits;\n          this.outputBits = 0;\n          if (codingLine[this.codingPos] < columns) {\n            this.codingPos++;\n            this.outputBits =\n              codingLine[this.codingPos] - codingLine[this.codingPos - 1];\n          } else if (bits > 0) {\n            c <<= bits;\n            bits = 0;\n          }\n        }\n      } while (bits);\n    }\n    if (this.black) {\n      c ^= 0xff;\n    }\n    return c;\n  }\n\n  /**\n   * @private\n   */\n  _addPixels(a1, blackPixels) {\n    const codingLine = this.codingLine;\n    let codingPos = this.codingPos;\n\n    if (a1 > codingLine[codingPos]) {\n      if (a1 > this.columns) {\n        info(\"row is wrong length\");\n        this.err = true;\n        a1 = this.columns;\n      }\n      if ((codingPos & 1) ^ blackPixels) {\n        ++codingPos;\n      }\n\n      codingLine[codingPos] = a1;\n    }\n    this.codingPos = codingPos;\n  }\n\n  /**\n   * @private\n   */\n  _addPixelsNeg(a1, blackPixels) {\n    const codingLine = this.codingLine;\n    let codingPos = this.codingPos;\n\n    if (a1 > codingLine[codingPos]) {\n      if (a1 > this.columns) {\n        info(\"row is wrong length\");\n        this.err = true;\n        a1 = this.columns;\n      }\n      if ((codingPos & 1) ^ blackPixels) {\n        ++codingPos;\n      }\n\n      codingLine[codingPos] = a1;\n    } else if (a1 < codingLine[codingPos]) {\n      if (a1 < 0) {\n        info(\"invalid code\");\n        this.err = true;\n        a1 = 0;\n      }\n      while (codingPos > 0 && a1 < codingLine[codingPos - 1]) {\n        --codingPos;\n      }\n      codingLine[codingPos] = a1;\n    }\n\n    this.codingPos = codingPos;\n  }\n\n  /**\n   * This function returns the code found from the table.\n   * The start and end parameters set the boundaries for searching the table.\n   * The limit parameter is optional. Function returns an array with three\n   * values. The first array element indicates whether a valid code is being\n   * returned. The second array element is the actual code. The third array\n   * element indicates whether EOF was reached.\n   * @private\n   */\n  _findTableCode(start, end, table, limit) {\n    const limitValue = limit || 0;\n    for (let i = start; i <= end; ++i) {\n      let code = this._lookBits(i);\n      if (code === ccittEOF) {\n        return [true, 1, false];\n      }\n      if (i < end) {\n        code <<= end - i;\n      }\n      if (!limitValue || code >= limitValue) {\n        const p = table[code - limitValue];\n        if (p[0] === i) {\n          this._eatBits(i);\n          return [true, p[1], true];\n        }\n      }\n    }\n    return [false, 0, false];\n  }\n\n  /**\n   * @private\n   */\n  _getTwoDimCode() {\n    let code = 0;\n    let p;\n    if (this.eoblock) {\n      code = this._lookBits(7);\n      p = twoDimTable[code];\n      if (p && p[0] > 0) {\n        this._eatBits(p[0]);\n        return p[1];\n      }\n    } else {\n      const result = this._findTableCode(1, 7, twoDimTable);\n      if (result[0] && result[2]) {\n        return result[1];\n      }\n    }\n    info(\"Bad two dim code\");\n    return ccittEOF;\n  }\n\n  /**\n   * @private\n   */\n  _getWhiteCode() {\n    let code = 0;\n    let p;\n    if (this.eoblock) {\n      code = this._lookBits(12);\n      if (code === ccittEOF) {\n        return 1;\n      }\n\n      if (code >> 5 === 0) {\n        p = whiteTable1[code];\n      } else {\n        p = whiteTable2[code >> 3];\n      }\n\n      if (p[0] > 0) {\n        this._eatBits(p[0]);\n        return p[1];\n      }\n    } else {\n      let result = this._findTableCode(1, 9, whiteTable2);\n      if (result[0]) {\n        return result[1];\n      }\n\n      result = this._findTableCode(11, 12, whiteTable1);\n      if (result[0]) {\n        return result[1];\n      }\n    }\n    info(\"bad white code\");\n    this._eatBits(1);\n    return 1;\n  }\n\n  /**\n   * @private\n   */\n  _getBlackCode() {\n    let code, p;\n    if (this.eoblock) {\n      code = this._lookBits(13);\n      if (code === ccittEOF) {\n        return 1;\n      }\n      if (code >> 7 === 0) {\n        p = blackTable1[code];\n      } else if (code >> 9 === 0 && code >> 7 !== 0) {\n        p = blackTable2[(code >> 1) - 64];\n      } else {\n        p = blackTable3[code >> 7];\n      }\n\n      if (p[0] > 0) {\n        this._eatBits(p[0]);\n        return p[1];\n      }\n    } else {\n      let result = this._findTableCode(2, 6, blackTable3);\n      if (result[0]) {\n        return result[1];\n      }\n\n      result = this._findTableCode(7, 12, blackTable2, 64);\n      if (result[0]) {\n        return result[1];\n      }\n\n      result = this._findTableCode(10, 13, blackTable1);\n      if (result[0]) {\n        return result[1];\n      }\n    }\n    info(\"bad black code\");\n    this._eatBits(1);\n    return 1;\n  }\n\n  /**\n   * @private\n   */\n  _lookBits(n) {\n    let c;\n    while (this.inputBits < n) {\n      if ((c = this.source.next()) === -1) {\n        if (this.inputBits === 0) {\n          return ccittEOF;\n        }\n        return (this.inputBuf << (n - this.inputBits)) & (0xffff >> (16 - n));\n      }\n      this.inputBuf = (this.inputBuf << 8) | c;\n      this.inputBits += 8;\n    }\n    return (this.inputBuf >> (this.inputBits - n)) & (0xffff >> (16 - n));\n  }\n\n  /**\n   * @private\n   */\n  _eatBits(n) {\n    if ((this.inputBits -= n) < 0) {\n      this.inputBits = 0;\n    }\n  }\n}\n\nexport { CCITTFaxDecoder };\n","/* Copyright 2014 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, BaseException, warn } from \"../shared/util.js\";\nimport { readUint16 } from \"./core_utils.js\";\n\nclass JpegError extends BaseException {\n  constructor(msg) {\n    super(`JPEG error: ${msg}`, \"JpegError\");\n  }\n}\n\nclass DNLMarkerError extends BaseException {\n  constructor(message, scanLines) {\n    super(message, \"DNLMarkerError\");\n    this.scanLines = scanLines;\n  }\n}\n\nclass EOIMarkerError extends BaseException {\n  constructor(msg) {\n    super(msg, \"EOIMarkerError\");\n  }\n}\n\n/**\n * This code was forked from https://github.com/notmasteryet/jpgjs.\n * The original version was created by GitHub user notmasteryet.\n *\n * - The JPEG specification can be found in the ITU CCITT Recommendation T.81\n *   (www.w3.org/Graphics/JPEG/itu-t81.pdf)\n * - The JFIF specification can be found in the JPEG File Interchange Format\n *   (www.w3.org/Graphics/JPEG/jfif3.pdf)\n * - The Adobe Application-Specific JPEG markers in the\n *   Supporting the DCT Filters in PostScript Level 2, Technical Note #5116\n *   (partners.adobe.com/public/developer/en/ps/sdk/5116.DCT_Filter.pdf)\n */\n\n// prettier-ignore\nconst dctZigZag = new Uint8Array([\n   0,\n   1,  8,\n  16,  9,  2,\n   3, 10, 17, 24,\n  32, 25, 18, 11, 4,\n   5, 12, 19, 26, 33, 40,\n  48, 41, 34, 27, 20, 13,  6,\n   7, 14, 21, 28, 35, 42, 49, 56,\n  57, 50, 43, 36, 29, 22, 15,\n  23, 30, 37, 44, 51, 58,\n  59, 52, 45, 38, 31,\n  39, 46, 53, 60,\n  61, 54, 47,\n  55, 62,\n  63\n]);\n\nconst dctCos1 = 4017; // cos(pi/16)\nconst dctSin1 = 799; // sin(pi/16)\nconst dctCos3 = 3406; // cos(3*pi/16)\nconst dctSin3 = 2276; // sin(3*pi/16)\nconst dctCos6 = 1567; // cos(6*pi/16)\nconst dctSin6 = 3784; // sin(6*pi/16)\nconst dctSqrt2 = 5793; // sqrt(2)\nconst dctSqrt1d2 = 2896; // sqrt(2) / 2\n\nfunction buildHuffmanTable(codeLengths, values) {\n  let k = 0,\n    i,\n    j,\n    length = 16;\n  while (length > 0 && !codeLengths[length - 1]) {\n    length--;\n  }\n  const code = [{ children: [], index: 0 }];\n  let p = code[0],\n    q;\n  for (i = 0; i < length; i++) {\n    for (j = 0; j < codeLengths[i]; j++) {\n      p = code.pop();\n      p.children[p.index] = values[k];\n      while (p.index > 0) {\n        p = code.pop();\n      }\n      p.index++;\n      code.push(p);\n      while (code.length <= i) {\n        code.push((q = { children: [], index: 0 }));\n        p.children[p.index] = q.children;\n        p = q;\n      }\n      k++;\n    }\n    if (i + 1 < length) {\n      // p here points to last code\n      code.push((q = { children: [], index: 0 }));\n      p.children[p.index] = q.children;\n      p = q;\n    }\n  }\n  return code[0].children;\n}\n\nfunction getBlockBufferOffset(component, row, col) {\n  return 64 * ((component.blocksPerLine + 1) * row + col);\n}\n\nfunction decodeScan(\n  data,\n  offset,\n  frame,\n  components,\n  resetInterval,\n  spectralStart,\n  spectralEnd,\n  successivePrev,\n  successive,\n  parseDNLMarker = false\n) {\n  const mcusPerLine = frame.mcusPerLine;\n  const progressive = frame.progressive;\n\n  const startOffset = offset;\n  let bitsData = 0,\n    bitsCount = 0;\n\n  function readBit() {\n    if (bitsCount > 0) {\n      bitsCount--;\n      return (bitsData >> bitsCount) & 1;\n    }\n    bitsData = data[offset++];\n    if (bitsData === 0xff) {\n      const nextByte = data[offset++];\n      if (nextByte) {\n        if (nextByte === /* DNL = */ 0xdc && parseDNLMarker) {\n          offset += 2; // Skip marker length.\n\n          const scanLines = readUint16(data, offset);\n          offset += 2;\n          if (scanLines > 0 && scanLines !== frame.scanLines) {\n            throw new DNLMarkerError(\n              \"Found DNL marker (0xFFDC) while parsing scan data\",\n              scanLines\n            );\n          }\n        } else if (nextByte === /* EOI = */ 0xd9) {\n          if (parseDNLMarker) {\n            // NOTE: only 8-bit JPEG images are supported in this decoder.\n            const maybeScanLines = blockRow * (frame.precision === 8 ? 8 : 0);\n            // Heuristic to attempt to handle corrupt JPEG images with too\n            // large `scanLines` parameter, by falling back to the currently\n            // parsed number of scanLines when it's at least (approximately)\n            // one order of magnitude smaller than expected (fixes\n            // issue10880.pdf and issue10989.pdf).\n            if (\n              maybeScanLines > 0 &&\n              Math.round(frame.scanLines / maybeScanLines) >= 10\n            ) {\n              throw new DNLMarkerError(\n                \"Found EOI marker (0xFFD9) while parsing scan data, \" +\n                  \"possibly caused by incorrect `scanLines` parameter\",\n                maybeScanLines\n              );\n            }\n          }\n          throw new EOIMarkerError(\n            \"Found EOI marker (0xFFD9) while parsing scan data\"\n          );\n        }\n        throw new JpegError(\n          `unexpected marker ${((bitsData << 8) | nextByte).toString(16)}`\n        );\n      }\n      // unstuff 0\n    }\n    bitsCount = 7;\n    return bitsData >>> 7;\n  }\n\n  function decodeHuffman(tree) {\n    let node = tree;\n    while (true) {\n      node = node[readBit()];\n      switch (typeof node) {\n        case \"number\":\n          return node;\n        case \"object\":\n          continue;\n      }\n      throw new JpegError(\"invalid huffman sequence\");\n    }\n  }\n\n  function receive(length) {\n    let n = 0;\n    while (length > 0) {\n      n = (n << 1) | readBit();\n      length--;\n    }\n    return n;\n  }\n\n  function receiveAndExtend(length) {\n    if (length === 1) {\n      return readBit() === 1 ? 1 : -1;\n    }\n    const n = receive(length);\n    if (n >= 1 << (length - 1)) {\n      return n;\n    }\n    return n + (-1 << length) + 1;\n  }\n\n  function decodeBaseline(component, blockOffset) {\n    const t = decodeHuffman(component.huffmanTableDC);\n    const diff = t === 0 ? 0 : receiveAndExtend(t);\n    component.blockData[blockOffset] = component.pred += diff;\n    let k = 1;\n    while (k < 64) {\n      const rs = decodeHuffman(component.huffmanTableAC);\n      const s = rs & 15,\n        r = rs >> 4;\n      if (s === 0) {\n        if (r < 15) {\n          break;\n        }\n        k += 16;\n        continue;\n      }\n      k += r;\n      const z = dctZigZag[k];\n      component.blockData[blockOffset + z] = receiveAndExtend(s);\n      k++;\n    }\n  }\n\n  function decodeDCFirst(component, blockOffset) {\n    const t = decodeHuffman(component.huffmanTableDC);\n    const diff = t === 0 ? 0 : receiveAndExtend(t) << successive;\n    component.blockData[blockOffset] = component.pred += diff;\n  }\n\n  function decodeDCSuccessive(component, blockOffset) {\n    component.blockData[blockOffset] |= readBit() << successive;\n  }\n\n  let eobrun = 0;\n  function decodeACFirst(component, blockOffset) {\n    if (eobrun > 0) {\n      eobrun--;\n      return;\n    }\n    let k = spectralStart;\n    const e = spectralEnd;\n    while (k <= e) {\n      const rs = decodeHuffman(component.huffmanTableAC);\n      const s = rs & 15,\n        r = rs >> 4;\n      if (s === 0) {\n        if (r < 15) {\n          eobrun = receive(r) + (1 << r) - 1;\n          break;\n        }\n        k += 16;\n        continue;\n      }\n      k += r;\n      const z = dctZigZag[k];\n      component.blockData[blockOffset + z] =\n        receiveAndExtend(s) * (1 << successive);\n      k++;\n    }\n  }\n\n  let successiveACState = 0,\n    successiveACNextValue;\n  function decodeACSuccessive(component, blockOffset) {\n    let k = spectralStart;\n    const e = spectralEnd;\n    let r = 0;\n    let s;\n    let rs;\n    while (k <= e) {\n      const offsetZ = blockOffset + dctZigZag[k];\n      const sign = component.blockData[offsetZ] < 0 ? -1 : 1;\n      switch (successiveACState) {\n        case 0: // initial state\n          rs = decodeHuffman(component.huffmanTableAC);\n          s = rs & 15;\n          r = rs >> 4;\n          if (s === 0) {\n            if (r < 15) {\n              eobrun = receive(r) + (1 << r);\n              successiveACState = 4;\n            } else {\n              r = 16;\n              successiveACState = 1;\n            }\n          } else {\n            if (s !== 1) {\n              throw new JpegError(\"invalid ACn encoding\");\n            }\n            successiveACNextValue = receiveAndExtend(s);\n            successiveACState = r ? 2 : 3;\n          }\n          continue;\n        case 1: // skipping r zero items\n        case 2:\n          if (component.blockData[offsetZ]) {\n            component.blockData[offsetZ] += sign * (readBit() << successive);\n          } else {\n            r--;\n            if (r === 0) {\n              successiveACState = successiveACState === 2 ? 3 : 0;\n            }\n          }\n          break;\n        case 3: // set value for a zero item\n          if (component.blockData[offsetZ]) {\n            component.blockData[offsetZ] += sign * (readBit() << successive);\n          } else {\n            component.blockData[offsetZ] = successiveACNextValue << successive;\n            successiveACState = 0;\n          }\n          break;\n        case 4: // eob\n          if (component.blockData[offsetZ]) {\n            component.blockData[offsetZ] += sign * (readBit() << successive);\n          }\n          break;\n      }\n      k++;\n    }\n    if (successiveACState === 4) {\n      eobrun--;\n      if (eobrun === 0) {\n        successiveACState = 0;\n      }\n    }\n  }\n\n  let blockRow = 0;\n  function decodeMcu(component, decode, mcu, row, col) {\n    const mcuRow = (mcu / mcusPerLine) | 0;\n    const mcuCol = mcu % mcusPerLine;\n    blockRow = mcuRow * component.v + row;\n    const blockCol = mcuCol * component.h + col;\n    const blockOffset = getBlockBufferOffset(component, blockRow, blockCol);\n    decode(component, blockOffset);\n  }\n\n  function decodeBlock(component, decode, mcu) {\n    blockRow = (mcu / component.blocksPerLine) | 0;\n    const blockCol = mcu % component.blocksPerLine;\n    const blockOffset = getBlockBufferOffset(component, blockRow, blockCol);\n    decode(component, blockOffset);\n  }\n\n  const componentsLength = components.length;\n  let component, i, j, k, n;\n  let decodeFn;\n  if (progressive) {\n    if (spectralStart === 0) {\n      decodeFn = successivePrev === 0 ? decodeDCFirst : decodeDCSuccessive;\n    } else {\n      decodeFn = successivePrev === 0 ? decodeACFirst : decodeACSuccessive;\n    }\n  } else {\n    decodeFn = decodeBaseline;\n  }\n\n  let mcu = 0,\n    fileMarker;\n  let mcuExpected;\n  if (componentsLength === 1) {\n    mcuExpected = components[0].blocksPerLine * components[0].blocksPerColumn;\n  } else {\n    mcuExpected = mcusPerLine * frame.mcusPerColumn;\n  }\n\n  let h, v;\n  while (mcu <= mcuExpected) {\n    // reset interval stuff\n    const mcuToRead = resetInterval\n      ? Math.min(mcuExpected - mcu, resetInterval)\n      : mcuExpected;\n\n    // The `mcuToRead === 0` case should only occur when all of the expected\n    // MCU data has been already parsed, i.e. when `mcu === mcuExpected`, but\n    // some corrupt JPEG images contain more data than intended and we thus\n    // want to skip over any extra RSTx markers below (fixes issue11794.pdf).\n    if (mcuToRead > 0) {\n      for (i = 0; i < componentsLength; i++) {\n        components[i].pred = 0;\n      }\n      eobrun = 0;\n\n      if (componentsLength === 1) {\n        component = components[0];\n        for (n = 0; n < mcuToRead; n++) {\n          decodeBlock(component, decodeFn, mcu);\n          mcu++;\n        }\n      } else {\n        for (n = 0; n < mcuToRead; n++) {\n          for (i = 0; i < componentsLength; i++) {\n            component = components[i];\n            h = component.h;\n            v = component.v;\n            for (j = 0; j < v; j++) {\n              for (k = 0; k < h; k++) {\n                decodeMcu(component, decodeFn, mcu, j, k);\n              }\n            }\n          }\n          mcu++;\n        }\n      }\n    }\n\n    // find marker\n    bitsCount = 0;\n    fileMarker = findNextFileMarker(data, offset);\n    if (!fileMarker) {\n      break; // Reached the end of the image data without finding any marker.\n    }\n    if (fileMarker.invalid) {\n      // Some bad images seem to pad Scan blocks with e.g. zero bytes, skip\n      // past those to attempt to find a valid marker (fixes issue4090.pdf).\n      const partialMsg = mcuToRead > 0 ? \"unexpected\" : \"excessive\";\n      warn(\n        `decodeScan - ${partialMsg} MCU data, current marker is: ${fileMarker.invalid}`\n      );\n      offset = fileMarker.offset;\n    }\n    if (fileMarker.marker >= 0xffd0 && fileMarker.marker <= 0xffd7) {\n      // RSTx\n      offset += 2;\n    } else {\n      break;\n    }\n  }\n\n  return offset - startOffset;\n}\n\n// A port of poppler's IDCT method which in turn is taken from:\n//   Christoph Loeffler, Adriaan Ligtenberg, George S. Moschytz,\n//   'Practical Fast 1-D DCT Algorithms with 11 Multiplications',\n//   IEEE Intl. Conf. on Acoustics, Speech & Signal Processing, 1989,\n//   988-991.\nfunction quantizeAndInverse(component, blockBufferOffset, p) {\n  const qt = component.quantizationTable,\n    blockData = component.blockData;\n  let v0, v1, v2, v3, v4, v5, v6, v7;\n  let p0, p1, p2, p3, p4, p5, p6, p7;\n  let t;\n\n  if (!qt) {\n    throw new JpegError(\"missing required Quantization Table.\");\n  }\n\n  // inverse DCT on rows\n  for (let row = 0; row < 64; row += 8) {\n    // gather block data\n    p0 = blockData[blockBufferOffset + row];\n    p1 = blockData[blockBufferOffset + row + 1];\n    p2 = blockData[blockBufferOffset + row + 2];\n    p3 = blockData[blockBufferOffset + row + 3];\n    p4 = blockData[blockBufferOffset + row + 4];\n    p5 = blockData[blockBufferOffset + row + 5];\n    p6 = blockData[blockBufferOffset + row + 6];\n    p7 = blockData[blockBufferOffset + row + 7];\n\n    // dequant p0\n    p0 *= qt[row];\n\n    // check for all-zero AC coefficients\n    if ((p1 | p2 | p3 | p4 | p5 | p6 | p7) === 0) {\n      t = (dctSqrt2 * p0 + 512) >> 10;\n      p[row] = t;\n      p[row + 1] = t;\n      p[row + 2] = t;\n      p[row + 3] = t;\n      p[row + 4] = t;\n      p[row + 5] = t;\n      p[row + 6] = t;\n      p[row + 7] = t;\n      continue;\n    }\n    // dequant p1 ... p7\n    p1 *= qt[row + 1];\n    p2 *= qt[row + 2];\n    p3 *= qt[row + 3];\n    p4 *= qt[row + 4];\n    p5 *= qt[row + 5];\n    p6 *= qt[row + 6];\n    p7 *= qt[row + 7];\n\n    // stage 4\n    v0 = (dctSqrt2 * p0 + 128) >> 8;\n    v1 = (dctSqrt2 * p4 + 128) >> 8;\n    v2 = p2;\n    v3 = p6;\n    v4 = (dctSqrt1d2 * (p1 - p7) + 128) >> 8;\n    v7 = (dctSqrt1d2 * (p1 + p7) + 128) >> 8;\n    v5 = p3 << 4;\n    v6 = p5 << 4;\n\n    // stage 3\n    v0 = (v0 + v1 + 1) >> 1;\n    v1 = v0 - v1;\n    t = (v2 * dctSin6 + v3 * dctCos6 + 128) >> 8;\n    v2 = (v2 * dctCos6 - v3 * dctSin6 + 128) >> 8;\n    v3 = t;\n    v4 = (v4 + v6 + 1) >> 1;\n    v6 = v4 - v6;\n    v7 = (v7 + v5 + 1) >> 1;\n    v5 = v7 - v5;\n\n    // stage 2\n    v0 = (v0 + v3 + 1) >> 1;\n    v3 = v0 - v3;\n    v1 = (v1 + v2 + 1) >> 1;\n    v2 = v1 - v2;\n    t = (v4 * dctSin3 + v7 * dctCos3 + 2048) >> 12;\n    v4 = (v4 * dctCos3 - v7 * dctSin3 + 2048) >> 12;\n    v7 = t;\n    t = (v5 * dctSin1 + v6 * dctCos1 + 2048) >> 12;\n    v5 = (v5 * dctCos1 - v6 * dctSin1 + 2048) >> 12;\n    v6 = t;\n\n    // stage 1\n    p[row] = v0 + v7;\n    p[row + 7] = v0 - v7;\n    p[row + 1] = v1 + v6;\n    p[row + 6] = v1 - v6;\n    p[row + 2] = v2 + v5;\n    p[row + 5] = v2 - v5;\n    p[row + 3] = v3 + v4;\n    p[row + 4] = v3 - v4;\n  }\n\n  // inverse DCT on columns\n  for (let col = 0; col < 8; ++col) {\n    p0 = p[col];\n    p1 = p[col + 8];\n    p2 = p[col + 16];\n    p3 = p[col + 24];\n    p4 = p[col + 32];\n    p5 = p[col + 40];\n    p6 = p[col + 48];\n    p7 = p[col + 56];\n\n    // check for all-zero AC coefficients\n    if ((p1 | p2 | p3 | p4 | p5 | p6 | p7) === 0) {\n      t = (dctSqrt2 * p0 + 8192) >> 14;\n      // Convert to 8-bit.\n      if (t < -2040) {\n        t = 0;\n      } else if (t >= 2024) {\n        t = 255;\n      } else {\n        t = (t + 2056) >> 4;\n      }\n      blockData[blockBufferOffset + col] = t;\n      blockData[blockBufferOffset + col + 8] = t;\n      blockData[blockBufferOffset + col + 16] = t;\n      blockData[blockBufferOffset + col + 24] = t;\n      blockData[blockBufferOffset + col + 32] = t;\n      blockData[blockBufferOffset + col + 40] = t;\n      blockData[blockBufferOffset + col + 48] = t;\n      blockData[blockBufferOffset + col + 56] = t;\n      continue;\n    }\n\n    // stage 4\n    v0 = (dctSqrt2 * p0 + 2048) >> 12;\n    v1 = (dctSqrt2 * p4 + 2048) >> 12;\n    v2 = p2;\n    v3 = p6;\n    v4 = (dctSqrt1d2 * (p1 - p7) + 2048) >> 12;\n    v7 = (dctSqrt1d2 * (p1 + p7) + 2048) >> 12;\n    v5 = p3;\n    v6 = p5;\n\n    // stage 3\n    // Shift v0 by 128.5 << 5 here, so we don't need to shift p0...p7 when\n    // converting to UInt8 range later.\n    v0 = ((v0 + v1 + 1) >> 1) + 4112;\n    v1 = v0 - v1;\n    t = (v2 * dctSin6 + v3 * dctCos6 + 2048) >> 12;\n    v2 = (v2 * dctCos6 - v3 * dctSin6 + 2048) >> 12;\n    v3 = t;\n    v4 = (v4 + v6 + 1) >> 1;\n    v6 = v4 - v6;\n    v7 = (v7 + v5 + 1) >> 1;\n    v5 = v7 - v5;\n\n    // stage 2\n    v0 = (v0 + v3 + 1) >> 1;\n    v3 = v0 - v3;\n    v1 = (v1 + v2 + 1) >> 1;\n    v2 = v1 - v2;\n    t = (v4 * dctSin3 + v7 * dctCos3 + 2048) >> 12;\n    v4 = (v4 * dctCos3 - v7 * dctSin3 + 2048) >> 12;\n    v7 = t;\n    t = (v5 * dctSin1 + v6 * dctCos1 + 2048) >> 12;\n    v5 = (v5 * dctCos1 - v6 * dctSin1 + 2048) >> 12;\n    v6 = t;\n\n    // stage 1\n    p0 = v0 + v7;\n    p7 = v0 - v7;\n    p1 = v1 + v6;\n    p6 = v1 - v6;\n    p2 = v2 + v5;\n    p5 = v2 - v5;\n    p3 = v3 + v4;\n    p4 = v3 - v4;\n\n    // Convert to 8-bit integers.\n    if (p0 < 16) {\n      p0 = 0;\n    } else if (p0 >= 4080) {\n      p0 = 255;\n    } else {\n      p0 >>= 4;\n    }\n    if (p1 < 16) {\n      p1 = 0;\n    } else if (p1 >= 4080) {\n      p1 = 255;\n    } else {\n      p1 >>= 4;\n    }\n    if (p2 < 16) {\n      p2 = 0;\n    } else if (p2 >= 4080) {\n      p2 = 255;\n    } else {\n      p2 >>= 4;\n    }\n    if (p3 < 16) {\n      p3 = 0;\n    } else if (p3 >= 4080) {\n      p3 = 255;\n    } else {\n      p3 >>= 4;\n    }\n    if (p4 < 16) {\n      p4 = 0;\n    } else if (p4 >= 4080) {\n      p4 = 255;\n    } else {\n      p4 >>= 4;\n    }\n    if (p5 < 16) {\n      p5 = 0;\n    } else if (p5 >= 4080) {\n      p5 = 255;\n    } else {\n      p5 >>= 4;\n    }\n    if (p6 < 16) {\n      p6 = 0;\n    } else if (p6 >= 4080) {\n      p6 = 255;\n    } else {\n      p6 >>= 4;\n    }\n    if (p7 < 16) {\n      p7 = 0;\n    } else if (p7 >= 4080) {\n      p7 = 255;\n    } else {\n      p7 >>= 4;\n    }\n\n    // store block data\n    blockData[blockBufferOffset + col] = p0;\n    blockData[blockBufferOffset + col + 8] = p1;\n    blockData[blockBufferOffset + col + 16] = p2;\n    blockData[blockBufferOffset + col + 24] = p3;\n    blockData[blockBufferOffset + col + 32] = p4;\n    blockData[blockBufferOffset + col + 40] = p5;\n    blockData[blockBufferOffset + col + 48] = p6;\n    blockData[blockBufferOffset + col + 56] = p7;\n  }\n}\n\nfunction buildComponentData(frame, component) {\n  const blocksPerLine = component.blocksPerLine;\n  const blocksPerColumn = component.blocksPerColumn;\n  const computationBuffer = new Int16Array(64);\n\n  for (let blockRow = 0; blockRow < blocksPerColumn; blockRow++) {\n    for (let blockCol = 0; blockCol < blocksPerLine; blockCol++) {\n      const offset = getBlockBufferOffset(component, blockRow, blockCol);\n      quantizeAndInverse(component, offset, computationBuffer);\n    }\n  }\n  return component.blockData;\n}\n\nfunction findNextFileMarker(data, currentPos, startPos = currentPos) {\n  const maxPos = data.length - 1;\n  let newPos = startPos < currentPos ? startPos : currentPos;\n\n  if (currentPos >= maxPos) {\n    return null; // Don't attempt to read non-existent data and just return.\n  }\n  const currentMarker = readUint16(data, currentPos);\n  if (currentMarker >= 0xffc0 && currentMarker <= 0xfffe) {\n    return {\n      invalid: null,\n      marker: currentMarker,\n      offset: currentPos,\n    };\n  }\n  let newMarker = readUint16(data, newPos);\n  while (!(newMarker >= 0xffc0 && newMarker <= 0xfffe)) {\n    if (++newPos >= maxPos) {\n      return null; // Don't attempt to read non-existent data and just return.\n    }\n    newMarker = readUint16(data, newPos);\n  }\n  return {\n    invalid: currentMarker.toString(16),\n    marker: newMarker,\n    offset: newPos,\n  };\n}\n\nclass JpegImage {\n  constructor({ decodeTransform = null, colorTransform = -1 } = {}) {\n    this._decodeTransform = decodeTransform;\n    this._colorTransform = colorTransform;\n  }\n\n  parse(data, { dnlScanLines = null } = {}) {\n    function readDataBlock() {\n      const length = readUint16(data, offset);\n      offset += 2;\n      let endOffset = offset + length - 2;\n\n      const fileMarker = findNextFileMarker(data, endOffset, offset);\n      if (fileMarker && fileMarker.invalid) {\n        warn(\n          \"readDataBlock - incorrect length, current marker is: \" +\n            fileMarker.invalid\n        );\n        endOffset = fileMarker.offset;\n      }\n\n      const array = data.subarray(offset, endOffset);\n      offset += array.length;\n      return array;\n    }\n\n    function prepareComponents(frame) {\n      const mcusPerLine = Math.ceil(frame.samplesPerLine / 8 / frame.maxH);\n      const mcusPerColumn = Math.ceil(frame.scanLines / 8 / frame.maxV);\n      for (let i = 0, ii = frame.components.length; i < ii; i++) {\n        const component = frame.components[i];\n        const blocksPerLine = Math.ceil(\n          (Math.ceil(frame.samplesPerLine / 8) * component.h) / frame.maxH\n        );\n        const blocksPerColumn = Math.ceil(\n          (Math.ceil(frame.scanLines / 8) * component.v) / frame.maxV\n        );\n        const blocksPerLineForMcu = mcusPerLine * component.h;\n        const blocksPerColumnForMcu = mcusPerColumn * component.v;\n\n        const blocksBufferSize =\n          64 * blocksPerColumnForMcu * (blocksPerLineForMcu + 1);\n        component.blockData = new Int16Array(blocksBufferSize);\n        component.blocksPerLine = blocksPerLine;\n        component.blocksPerColumn = blocksPerColumn;\n      }\n      frame.mcusPerLine = mcusPerLine;\n      frame.mcusPerColumn = mcusPerColumn;\n    }\n\n    let offset = 0;\n    let jfif = null;\n    let adobe = null;\n    let frame, resetInterval;\n    let numSOSMarkers = 0;\n    const quantizationTables = [];\n    const huffmanTablesAC = [],\n      huffmanTablesDC = [];\n\n    let fileMarker = readUint16(data, offset);\n    offset += 2;\n    if (fileMarker !== /* SOI (Start of Image) = */ 0xffd8) {\n      throw new JpegError(\"SOI not found\");\n    }\n    fileMarker = readUint16(data, offset);\n    offset += 2;\n\n    markerLoop: while (fileMarker !== /* EOI (End of Image) = */ 0xffd9) {\n      let i, j, l;\n      switch (fileMarker) {\n        case 0xffe0: // APP0 (Application Specific)\n        case 0xffe1: // APP1\n        case 0xffe2: // APP2\n        case 0xffe3: // APP3\n        case 0xffe4: // APP4\n        case 0xffe5: // APP5\n        case 0xffe6: // APP6\n        case 0xffe7: // APP7\n        case 0xffe8: // APP8\n        case 0xffe9: // APP9\n        case 0xffea: // APP10\n        case 0xffeb: // APP11\n        case 0xffec: // APP12\n        case 0xffed: // APP13\n        case 0xffee: // APP14\n        case 0xffef: // APP15\n        case 0xfffe: // COM (Comment)\n          const appData = readDataBlock();\n\n          if (fileMarker === 0xffe0) {\n            // 'JFIF\\x00'\n            if (\n              appData[0] === 0x4a &&\n              appData[1] === 0x46 &&\n              appData[2] === 0x49 &&\n              appData[3] === 0x46 &&\n              appData[4] === 0\n            ) {\n              jfif = {\n                version: { major: appData[5], minor: appData[6] },\n                densityUnits: appData[7],\n                xDensity: (appData[8] << 8) | appData[9],\n                yDensity: (appData[10] << 8) | appData[11],\n                thumbWidth: appData[12],\n                thumbHeight: appData[13],\n                thumbData: appData.subarray(\n                  14,\n                  14 + 3 * appData[12] * appData[13]\n                ),\n              };\n            }\n          }\n          // TODO APP1 - Exif\n          if (fileMarker === 0xffee) {\n            // 'Adobe'\n            if (\n              appData[0] === 0x41 &&\n              appData[1] === 0x64 &&\n              appData[2] === 0x6f &&\n              appData[3] === 0x62 &&\n              appData[4] === 0x65\n            ) {\n              adobe = {\n                version: (appData[5] << 8) | appData[6],\n                flags0: (appData[7] << 8) | appData[8],\n                flags1: (appData[9] << 8) | appData[10],\n                transformCode: appData[11],\n              };\n            }\n          }\n          break;\n\n        case 0xffdb: // DQT (Define Quantization Tables)\n          const quantizationTablesLength = readUint16(data, offset);\n          offset += 2;\n          const quantizationTablesEnd = quantizationTablesLength + offset - 2;\n          let z;\n          while (offset < quantizationTablesEnd) {\n            const quantizationTableSpec = data[offset++];\n            const tableData = new Uint16Array(64);\n            if (quantizationTableSpec >> 4 === 0) {\n              // 8 bit values\n              for (j = 0; j < 64; j++) {\n                z = dctZigZag[j];\n                tableData[z] = data[offset++];\n              }\n            } else if (quantizationTableSpec >> 4 === 1) {\n              // 16 bit values\n              for (j = 0; j < 64; j++) {\n                z = dctZigZag[j];\n                tableData[z] = readUint16(data, offset);\n                offset += 2;\n              }\n            } else {\n              throw new JpegError(\"DQT - invalid table spec\");\n            }\n            quantizationTables[quantizationTableSpec & 15] = tableData;\n          }\n          break;\n\n        case 0xffc0: // SOF0 (Start of Frame, Baseline DCT)\n        case 0xffc1: // SOF1 (Start of Frame, Extended DCT)\n        case 0xffc2: // SOF2 (Start of Frame, Progressive DCT)\n          if (frame) {\n            throw new JpegError(\"Only single frame JPEGs supported\");\n          }\n          offset += 2; // Skip marker length.\n\n          frame = {};\n          frame.extended = fileMarker === 0xffc1;\n          frame.progressive = fileMarker === 0xffc2;\n          frame.precision = data[offset++];\n          const sofScanLines = readUint16(data, offset);\n          offset += 2;\n          frame.scanLines = dnlScanLines || sofScanLines;\n          frame.samplesPerLine = readUint16(data, offset);\n          offset += 2;\n          frame.components = [];\n          frame.componentIds = {};\n          const componentsCount = data[offset++];\n          let maxH = 0,\n            maxV = 0;\n          for (i = 0; i < componentsCount; i++) {\n            const componentId = data[offset];\n            const h = data[offset + 1] >> 4;\n            const v = data[offset + 1] & 15;\n            if (maxH < h) {\n              maxH = h;\n            }\n            if (maxV < v) {\n              maxV = v;\n            }\n            const qId = data[offset + 2];\n            l = frame.components.push({\n              h,\n              v,\n              quantizationId: qId,\n              quantizationTable: null, // See comment below.\n            });\n            frame.componentIds[componentId] = l - 1;\n            offset += 3;\n          }\n          frame.maxH = maxH;\n          frame.maxV = maxV;\n          prepareComponents(frame);\n          break;\n\n        case 0xffc4: // DHT (Define Huffman Tables)\n          const huffmanLength = readUint16(data, offset);\n          offset += 2;\n          for (i = 2; i < huffmanLength; ) {\n            const huffmanTableSpec = data[offset++];\n            const codeLengths = new Uint8Array(16);\n            let codeLengthSum = 0;\n            for (j = 0; j < 16; j++, offset++) {\n              codeLengthSum += codeLengths[j] = data[offset];\n            }\n            const huffmanValues = new Uint8Array(codeLengthSum);\n            for (j = 0; j < codeLengthSum; j++, offset++) {\n              huffmanValues[j] = data[offset];\n            }\n            i += 17 + codeLengthSum;\n\n            (huffmanTableSpec >> 4 === 0 ? huffmanTablesDC : huffmanTablesAC)[\n              huffmanTableSpec & 15\n            ] = buildHuffmanTable(codeLengths, huffmanValues);\n          }\n          break;\n\n        case 0xffdd: // DRI (Define Restart Interval)\n          offset += 2; // Skip marker length.\n\n          resetInterval = readUint16(data, offset);\n          offset += 2;\n          break;\n\n        case 0xffda: // SOS (Start of Scan)\n          // A DNL marker (0xFFDC), if it exists, is only allowed at the end\n          // of the first scan segment and may only occur once in an image.\n          // Furthermore, to prevent an infinite loop, do *not* attempt to\n          // parse DNL markers during re-parsing of the JPEG scan data.\n          const parseDNLMarker = ++numSOSMarkers === 1 && !dnlScanLines;\n\n          offset += 2; // Skip marker length.\n\n          const selectorsCount = data[offset++],\n            components = [];\n          for (i = 0; i < selectorsCount; i++) {\n            const index = data[offset++];\n            const componentIndex = frame.componentIds[index];\n            const component = frame.components[componentIndex];\n            component.index = index;\n            const tableSpec = data[offset++];\n            component.huffmanTableDC = huffmanTablesDC[tableSpec >> 4];\n            component.huffmanTableAC = huffmanTablesAC[tableSpec & 15];\n            components.push(component);\n          }\n          const spectralStart = data[offset++],\n            spectralEnd = data[offset++],\n            successiveApproximation = data[offset++];\n          try {\n            const processed = decodeScan(\n              data,\n              offset,\n              frame,\n              components,\n              resetInterval,\n              spectralStart,\n              spectralEnd,\n              successiveApproximation >> 4,\n              successiveApproximation & 15,\n              parseDNLMarker\n            );\n            offset += processed;\n          } catch (ex) {\n            if (ex instanceof DNLMarkerError) {\n              warn(`${ex.message} -- attempting to re-parse the JPEG image.`);\n              return this.parse(data, { dnlScanLines: ex.scanLines });\n            } else if (ex instanceof EOIMarkerError) {\n              warn(`${ex.message} -- ignoring the rest of the image data.`);\n              break markerLoop;\n            }\n            throw ex;\n          }\n          break;\n\n        case 0xffdc: // DNL (Define Number of Lines)\n          // Ignore the marker, since it's being handled in `decodeScan`.\n          offset += 4;\n          break;\n\n        case 0xffff: // Fill bytes\n          if (data[offset] !== 0xff) {\n            // Avoid skipping a valid marker.\n            offset--;\n          }\n          break;\n\n        default:\n          // Could be incorrect encoding -- the last 0xFF byte of the previous\n          // block could have been eaten by the encoder, hence we fallback to\n          // `startPos = offset - 3` when looking for the next valid marker.\n          const nextFileMarker = findNextFileMarker(\n            data,\n            /* currentPos = */ offset - 2,\n            /* startPos = */ offset - 3\n          );\n          if (nextFileMarker && nextFileMarker.invalid) {\n            warn(\n              \"JpegImage.parse - unexpected data, current marker is: \" +\n                nextFileMarker.invalid\n            );\n            offset = nextFileMarker.offset;\n            break;\n          }\n          if (!nextFileMarker || offset >= data.length - 1) {\n            warn(\n              \"JpegImage.parse - reached the end of the image data \" +\n                \"without finding an EOI marker (0xFFD9).\"\n            );\n            break markerLoop;\n          }\n          throw new JpegError(\n            \"JpegImage.parse - unknown marker: \" + fileMarker.toString(16)\n          );\n      }\n      fileMarker = readUint16(data, offset);\n      offset += 2;\n    }\n\n    this.width = frame.samplesPerLine;\n    this.height = frame.scanLines;\n    this.jfif = jfif;\n    this.adobe = adobe;\n    this.components = [];\n    for (let i = 0, ii = frame.components.length; i < ii; i++) {\n      const component = frame.components[i];\n\n      // Prevent errors when DQT markers are placed after SOF{n} markers,\n      // by assigning the `quantizationTable` entry after the entire image\n      // has been parsed (fixes issue7406.pdf).\n      const quantizationTable = quantizationTables[component.quantizationId];\n      if (quantizationTable) {\n        component.quantizationTable = quantizationTable;\n      }\n\n      this.components.push({\n        index: component.index,\n        output: buildComponentData(frame, component),\n        scaleX: component.h / frame.maxH,\n        scaleY: component.v / frame.maxV,\n        blocksPerLine: component.blocksPerLine,\n        blocksPerColumn: component.blocksPerColumn,\n      });\n    }\n    this.numComponents = this.components.length;\n    return undefined;\n  }\n\n  _getLinearizedBlockData(width, height, isSourcePDF = false) {\n    const scaleX = this.width / width,\n      scaleY = this.height / height;\n\n    let component, componentScaleX, componentScaleY, blocksPerScanline;\n    let x, y, i, j, k;\n    let index;\n    let offset = 0;\n    let output;\n    const numComponents = this.components.length;\n    const dataLength = width * height * numComponents;\n    const data = new Uint8ClampedArray(dataLength);\n    const xScaleBlockOffset = new Uint32Array(width);\n    const mask3LSB = 0xfffffff8; // used to clear the 3 LSBs\n    let lastComponentScaleX;\n\n    for (i = 0; i < numComponents; i++) {\n      component = this.components[i];\n      componentScaleX = component.scaleX * scaleX;\n      componentScaleY = component.scaleY * scaleY;\n      offset = i;\n      output = component.output;\n      blocksPerScanline = (component.blocksPerLine + 1) << 3;\n      // Precalculate the `xScaleBlockOffset`. Since it doesn't depend on the\n      // component data, that's only necessary when `componentScaleX` changes.\n      if (componentScaleX !== lastComponentScaleX) {\n        for (x = 0; x < width; x++) {\n          j = 0 | (x * componentScaleX);\n          xScaleBlockOffset[x] = ((j & mask3LSB) << 3) | (j & 7);\n        }\n        lastComponentScaleX = componentScaleX;\n      }\n      // linearize the blocks of the component\n      for (y = 0; y < height; y++) {\n        j = 0 | (y * componentScaleY);\n        index = (blocksPerScanline * (j & mask3LSB)) | ((j & 7) << 3);\n        for (x = 0; x < width; x++) {\n          data[offset] = output[index + xScaleBlockOffset[x]];\n          offset += numComponents;\n        }\n      }\n    }\n\n    // decodeTransform contains pairs of multiplier (-256..256) and additive\n    let transform = this._decodeTransform;\n\n    // In PDF files, JPEG images with CMYK colour spaces are usually inverted\n    // (this can be observed by extracting the raw image data).\n    // Since the conversion algorithms (see below) were written primarily for\n    // the PDF use-cases, attempting to use `JpegImage` to parse standalone\n    // JPEG (CMYK) images may thus result in inverted images (see issue 9513).\n    //\n    // Unfortunately it's not (always) possible to tell, from the image data\n    // alone, if it needs to be inverted. Thus in an attempt to provide better\n    // out-of-box behaviour when `JpegImage` is used standalone, default to\n    // inverting JPEG (CMYK) images if and only if the image data does *not*\n    // come from a PDF file and no `decodeTransform` was passed by the user.\n    if (!isSourcePDF && numComponents === 4 && !transform) {\n      transform = new Int32Array([-256, 255, -256, 255, -256, 255, -256, 255]);\n    }\n\n    if (transform) {\n      for (i = 0; i < dataLength; ) {\n        for (j = 0, k = 0; j < numComponents; j++, i++, k += 2) {\n          data[i] = ((data[i] * transform[k]) >> 8) + transform[k + 1];\n        }\n      }\n    }\n    return data;\n  }\n\n  get _isColorConversionNeeded() {\n    if (this.adobe) {\n      // The adobe transform marker overrides any previous setting.\n      return !!this.adobe.transformCode;\n    }\n    if (this.numComponents === 3) {\n      if (this._colorTransform === 0) {\n        // If the Adobe transform marker is not present and the image\n        // dictionary has a 'ColorTransform' entry, explicitly set to `0`,\n        // then the colours should *not* be transformed.\n        return false;\n      } else if (\n        this.components[0].index === /* \"R\" = */ 0x52 &&\n        this.components[1].index === /* \"G\" = */ 0x47 &&\n        this.components[2].index === /* \"B\" = */ 0x42\n      ) {\n        // If the three components are indexed as RGB in ASCII\n        // then the colours should *not* be transformed.\n        return false;\n      }\n      return true;\n    }\n    // `this.numComponents !== 3`\n    if (this._colorTransform === 1) {\n      // If the Adobe transform marker is not present and the image\n      // dictionary has a 'ColorTransform' entry, explicitly set to `1`,\n      // then the colours should be transformed.\n      return true;\n    }\n    return false;\n  }\n\n  _convertYccToRgb(data) {\n    let Y, Cb, Cr;\n    for (let i = 0, length = data.length; i < length; i += 3) {\n      Y = data[i];\n      Cb = data[i + 1];\n      Cr = data[i + 2];\n      data[i] = Y - 179.456 + 1.402 * Cr;\n      data[i + 1] = Y + 135.459 - 0.344 * Cb - 0.714 * Cr;\n      data[i + 2] = Y - 226.816 + 1.772 * Cb;\n    }\n    return data;\n  }\n\n  _convertYcckToRgb(data) {\n    let Y, Cb, Cr, k;\n    let offset = 0;\n    for (let i = 0, length = data.length; i < length; i += 4) {\n      Y = data[i];\n      Cb = data[i + 1];\n      Cr = data[i + 2];\n      k = data[i + 3];\n\n      data[offset++] =\n        -122.67195406894 +\n        Cb *\n          (-6.60635669420364e-5 * Cb +\n            0.000437130475926232 * Cr -\n            5.4080610064599e-5 * Y +\n            0.00048449797120281 * k -\n            0.154362151871126) +\n        Cr *\n          (-0.000957964378445773 * Cr +\n            0.000817076911346625 * Y -\n            0.00477271405408747 * k +\n            1.53380253221734) +\n        Y *\n          (0.000961250184130688 * Y -\n            0.00266257332283933 * k +\n            0.48357088451265) +\n        k * (-0.000336197177618394 * k + 0.484791561490776);\n\n      data[offset++] =\n        107.268039397724 +\n        Cb *\n          (2.19927104525741e-5 * Cb -\n            0.000640992018297945 * Cr +\n            0.000659397001245577 * Y +\n            0.000426105652938837 * k -\n            0.176491792462875) +\n        Cr *\n          (-0.000778269941513683 * Cr +\n            0.00130872261408275 * Y +\n            0.000770482631801132 * k -\n            0.151051492775562) +\n        Y *\n          (0.00126935368114843 * Y -\n            0.00265090189010898 * k +\n            0.25802910206845) +\n        k * (-0.000318913117588328 * k - 0.213742400323665);\n\n      data[offset++] =\n        -20.810012546947 +\n        Cb *\n          (-0.000570115196973677 * Cb -\n            2.63409051004589e-5 * Cr +\n            0.0020741088115012 * Y -\n            0.00288260236853442 * k +\n            0.814272968359295) +\n        Cr *\n          (-1.53496057440975e-5 * Cr -\n            0.000132689043961446 * Y +\n            0.000560833691242812 * k -\n            0.195152027534049) +\n        Y *\n          (0.00174418132927582 * Y -\n            0.00255243321439347 * k +\n            0.116935020465145) +\n        k * (-0.000343531996510555 * k + 0.24165260232407);\n    }\n    // Ensure that only the converted RGB data is returned.\n    return data.subarray(0, offset);\n  }\n\n  _convertYcckToCmyk(data) {\n    let Y, Cb, Cr;\n    for (let i = 0, length = data.length; i < length; i += 4) {\n      Y = data[i];\n      Cb = data[i + 1];\n      Cr = data[i + 2];\n      data[i] = 434.456 - Y - 1.402 * Cr;\n      data[i + 1] = 119.541 - Y + 0.344 * Cb + 0.714 * Cr;\n      data[i + 2] = 481.816 - Y - 1.772 * Cb;\n      // K in data[i + 3] is unchanged\n    }\n    return data;\n  }\n\n  _convertCmykToRgb(data) {\n    let c, m, y, k;\n    let offset = 0;\n    for (let i = 0, length = data.length; i < length; i += 4) {\n      c = data[i];\n      m = data[i + 1];\n      y = data[i + 2];\n      k = data[i + 3];\n\n      data[offset++] =\n        255 +\n        c *\n          (-0.00006747147073602441 * c +\n            0.0008379262121013727 * m +\n            0.0002894718188643294 * y +\n            0.003264231057537806 * k -\n            1.1185611867203937) +\n        m *\n          (0.000026374107616089405 * m -\n            0.00008626949158638572 * y -\n            0.0002748769067499491 * k -\n            0.02155688794978967) +\n        y *\n          (-0.00003878099212869363 * y -\n            0.0003267808279485286 * k +\n            0.0686742238595345) -\n        k * (0.0003361971776183937 * k + 0.7430659151342254);\n\n      data[offset++] =\n        255 +\n        c *\n          (0.00013596372813588848 * c +\n            0.000924537132573585 * m +\n            0.00010567359618683593 * y +\n            0.0004791864687436512 * k -\n            0.3109689587515875) +\n        m *\n          (-0.00023545346108370344 * m +\n            0.0002702845253534714 * y +\n            0.0020200308977307156 * k -\n            0.7488052167015494) +\n        y *\n          (0.00006834815998235662 * y +\n            0.00015168452363460973 * k -\n            0.09751927774728933) -\n        k * (0.00031891311758832814 * k + 0.7364883807733168);\n\n      data[offset++] =\n        255 +\n        c *\n          (0.000013598650411385307 * c +\n            0.00012423956175490851 * m +\n            0.0004751985097583589 * y -\n            0.0000036729317476630422 * k -\n            0.05562186980264034) +\n        m *\n          (0.00016141380598724676 * m +\n            0.0009692239130725186 * y +\n            0.0007782692450036253 * k -\n            0.44015232367526463) +\n        y *\n          (5.068882914068769e-7 * y +\n            0.0017778369011375071 * k -\n            0.7591454649749609) -\n        k * (0.0003435319965105553 * k + 0.7063770186160144);\n    }\n    // Ensure that only the converted RGB data is returned.\n    return data.subarray(0, offset);\n  }\n\n  getData({ width, height, forceRGB = false, isSourcePDF = false }) {\n    if (\n      typeof PDFJSDev === \"undefined\" ||\n      PDFJSDev.test(\"!PRODUCTION || TESTING\")\n    ) {\n      assert(\n        isSourcePDF === true,\n        'JpegImage.getData: Unexpected \"isSourcePDF\" value for PDF files.'\n      );\n    }\n    if (this.numComponents > 4) {\n      throw new JpegError(\"Unsupported color mode\");\n    }\n    // Type of data: Uint8ClampedArray(width * height * numComponents)\n    const data = this._getLinearizedBlockData(width, height, isSourcePDF);\n\n    if (this.numComponents === 1 && forceRGB) {\n      const dataLength = data.length;\n      const rgbData = new Uint8ClampedArray(dataLength * 3);\n      let offset = 0;\n      for (let i = 0; i < dataLength; i++) {\n        const grayColor = data[i];\n        rgbData[offset++] = grayColor;\n        rgbData[offset++] = grayColor;\n        rgbData[offset++] = grayColor;\n      }\n      return rgbData;\n    } else if (this.numComponents === 3 && this._isColorConversionNeeded) {\n      return this._convertYccToRgb(data);\n    } else if (this.numComponents === 4) {\n      if (this._isColorConversionNeeded) {\n        if (forceRGB) {\n          return this._convertYcckToRgb(data);\n        }\n        return this._convertYcckToCmyk(data);\n      } else if (forceRGB) {\n        return this._convertCmykToRgb(data);\n      }\n    }\n    return data;\n  }\n}\n\nexport { JpegImage };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { BaseException, info, unreachable, warn } from \"../shared/util.js\";\nimport { log2, readUint16, readUint32 } from \"./core_utils.js\";\nimport { ArithmeticDecoder } from \"./arithmetic_decoder.js\";\n\nclass JpxError extends BaseException {\n  constructor(msg) {\n    super(`JPX error: ${msg}`, \"JpxError\");\n  }\n}\n\n// Table E.1\nconst SubbandsGainLog2 = {\n  LL: 0,\n  LH: 1,\n  HL: 1,\n  HH: 2,\n};\n\nclass JpxImage {\n  constructor() {\n    this.failOnCorruptedImage = false;\n  }\n\n  parse(data) {\n    const head = readUint16(data, 0);\n    // No box header, immediate start of codestream (SOC)\n    if (head === 0xff4f) {\n      this.parseCodestream(data, 0, data.length);\n      return;\n    }\n\n    const length = data.length;\n    let position = 0;\n    while (position < length) {\n      let headerSize = 8;\n      let lbox = readUint32(data, position);\n      const tbox = readUint32(data, position + 4);\n      position += headerSize;\n      if (lbox === 1) {\n        // XLBox: read UInt64 according to spec.\n        // JavaScript's int precision of 53 bit should be sufficient here.\n        lbox =\n          readUint32(data, position) * 4294967296 +\n          readUint32(data, position + 4);\n        position += 8;\n        headerSize += 8;\n      }\n      if (lbox === 0) {\n        lbox = length - position + headerSize;\n      }\n      if (lbox < headerSize) {\n        throw new JpxError(\"Invalid box field size\");\n      }\n      const dataLength = lbox - headerSize;\n      let jumpDataLength = true;\n      switch (tbox) {\n        case 0x6a703268: // 'jp2h'\n          jumpDataLength = false; // parsing child boxes\n          break;\n        case 0x636f6c72: // 'colr'\n          // Colorspaces are not used, the CS from the PDF is used.\n          const method = data[position];\n          if (method === 1) {\n            // enumerated colorspace\n            const colorspace = readUint32(data, position + 3);\n            switch (colorspace) {\n              case 16: // this indicates a sRGB colorspace\n              case 17: // this indicates a grayscale colorspace\n              case 18: // this indicates a YUV colorspace\n                break;\n              default:\n                warn(\"Unknown colorspace \" + colorspace);\n                break;\n            }\n          } else if (method === 2) {\n            info(\"ICC profile not supported\");\n          }\n          break;\n        case 0x6a703263: // 'jp2c'\n          this.parseCodestream(data, position, position + dataLength);\n          break;\n        case 0x6a502020: // 'jP\\024\\024'\n          if (readUint32(data, position) !== 0x0d0a870a) {\n            warn(\"Invalid JP2 signature\");\n          }\n          break;\n        // The following header types are valid but currently not used:\n        case 0x6a501a1a: // 'jP\\032\\032'\n        case 0x66747970: // 'ftyp'\n        case 0x72726571: // 'rreq'\n        case 0x72657320: // 'res '\n        case 0x69686472: // 'ihdr'\n          break;\n        default:\n          const headerType = String.fromCharCode(\n            (tbox >> 24) & 0xff,\n            (tbox >> 16) & 0xff,\n            (tbox >> 8) & 0xff,\n            tbox & 0xff\n          );\n          warn(`Unsupported header type ${tbox} (${headerType}).`);\n          break;\n      }\n      if (jumpDataLength) {\n        position += dataLength;\n      }\n    }\n  }\n\n  parseImageProperties(stream) {\n    let newByte = stream.getByte();\n    while (newByte >= 0) {\n      const oldByte = newByte;\n      newByte = stream.getByte();\n      const code = (oldByte << 8) | newByte;\n      // Image and tile size (SIZ)\n      if (code === 0xff51) {\n        stream.skip(4);\n        const Xsiz = stream.getInt32() >>> 0; // Byte 4\n        const Ysiz = stream.getInt32() >>> 0; // Byte 8\n        const XOsiz = stream.getInt32() >>> 0; // Byte 12\n        const YOsiz = stream.getInt32() >>> 0; // Byte 16\n        stream.skip(16);\n        const Csiz = stream.getUint16(); // Byte 36\n        this.width = Xsiz - XOsiz;\n        this.height = Ysiz - YOsiz;\n        this.componentsCount = Csiz;\n        // Results are always returned as `Uint8ClampedArray`s.\n        this.bitsPerComponent = 8;\n        return;\n      }\n    }\n    throw new JpxError(\"No size marker found in JPX stream\");\n  }\n\n  parseCodestream(data, start, end) {\n    const context = {};\n    let doNotRecover = false;\n    try {\n      let position = start;\n      while (position + 1 < end) {\n        const code = readUint16(data, position);\n        position += 2;\n\n        let length = 0,\n          j,\n          sqcd,\n          spqcds,\n          spqcdSize,\n          scalarExpounded,\n          tile;\n        switch (code) {\n          case 0xff4f: // Start of codestream (SOC)\n            context.mainHeader = true;\n            break;\n          case 0xffd9: // End of codestream (EOC)\n            break;\n          case 0xff51: // Image and tile size (SIZ)\n            length = readUint16(data, position);\n            const siz = {};\n            siz.Xsiz = readUint32(data, position + 4);\n            siz.Ysiz = readUint32(data, position + 8);\n            siz.XOsiz = readUint32(data, position + 12);\n            siz.YOsiz = readUint32(data, position + 16);\n            siz.XTsiz = readUint32(data, position + 20);\n            siz.YTsiz = readUint32(data, position + 24);\n            siz.XTOsiz = readUint32(data, position + 28);\n            siz.YTOsiz = readUint32(data, position + 32);\n            const componentsCount = readUint16(data, position + 36);\n            siz.Csiz = componentsCount;\n            const components = [];\n            j = position + 38;\n            for (let i = 0; i < componentsCount; i++) {\n              const component = {\n                precision: (data[j] & 0x7f) + 1,\n                isSigned: !!(data[j] & 0x80),\n                XRsiz: data[j + 1],\n                YRsiz: data[j + 2],\n              };\n              j += 3;\n              calculateComponentDimensions(component, siz);\n              components.push(component);\n            }\n            context.SIZ = siz;\n            context.components = components;\n            calculateTileGrids(context, components);\n            context.QCC = [];\n            context.COC = [];\n            break;\n          case 0xff5c: // Quantization default (QCD)\n            length = readUint16(data, position);\n            const qcd = {};\n            j = position + 2;\n            sqcd = data[j++];\n            switch (sqcd & 0x1f) {\n              case 0:\n                spqcdSize = 8;\n                scalarExpounded = true;\n                break;\n              case 1:\n                spqcdSize = 16;\n                scalarExpounded = false;\n                break;\n              case 2:\n                spqcdSize = 16;\n                scalarExpounded = true;\n                break;\n              default:\n                throw new Error(\"Invalid SQcd value \" + sqcd);\n            }\n            qcd.noQuantization = spqcdSize === 8;\n            qcd.scalarExpounded = scalarExpounded;\n            qcd.guardBits = sqcd >> 5;\n            spqcds = [];\n            while (j < length + position) {\n              const spqcd = {};\n              if (spqcdSize === 8) {\n                spqcd.epsilon = data[j++] >> 3;\n                spqcd.mu = 0;\n              } else {\n                spqcd.epsilon = data[j] >> 3;\n                spqcd.mu = ((data[j] & 0x7) << 8) | data[j + 1];\n                j += 2;\n              }\n              spqcds.push(spqcd);\n            }\n            qcd.SPqcds = spqcds;\n            if (context.mainHeader) {\n              context.QCD = qcd;\n            } else {\n              context.currentTile.QCD = qcd;\n              context.currentTile.QCC = [];\n            }\n            break;\n          case 0xff5d: // Quantization component (QCC)\n            length = readUint16(data, position);\n            const qcc = {};\n            j = position + 2;\n            let cqcc;\n            if (context.SIZ.Csiz < 257) {\n              cqcc = data[j++];\n            } else {\n              cqcc = readUint16(data, j);\n              j += 2;\n            }\n            sqcd = data[j++];\n            switch (sqcd & 0x1f) {\n              case 0:\n                spqcdSize = 8;\n                scalarExpounded = true;\n                break;\n              case 1:\n                spqcdSize = 16;\n                scalarExpounded = false;\n                break;\n              case 2:\n                spqcdSize = 16;\n                scalarExpounded = true;\n                break;\n              default:\n                throw new Error(\"Invalid SQcd value \" + sqcd);\n            }\n            qcc.noQuantization = spqcdSize === 8;\n            qcc.scalarExpounded = scalarExpounded;\n            qcc.guardBits = sqcd >> 5;\n            spqcds = [];\n            while (j < length + position) {\n              const spqcd = {};\n              if (spqcdSize === 8) {\n                spqcd.epsilon = data[j++] >> 3;\n                spqcd.mu = 0;\n              } else {\n                spqcd.epsilon = data[j] >> 3;\n                spqcd.mu = ((data[j] & 0x7) << 8) | data[j + 1];\n                j += 2;\n              }\n              spqcds.push(spqcd);\n            }\n            qcc.SPqcds = spqcds;\n            if (context.mainHeader) {\n              context.QCC[cqcc] = qcc;\n            } else {\n              context.currentTile.QCC[cqcc] = qcc;\n            }\n            break;\n          case 0xff52: // Coding style default (COD)\n            length = readUint16(data, position);\n            const cod = {};\n            j = position + 2;\n            const scod = data[j++];\n            cod.entropyCoderWithCustomPrecincts = !!(scod & 1);\n            cod.sopMarkerUsed = !!(scod & 2);\n            cod.ephMarkerUsed = !!(scod & 4);\n            cod.progressionOrder = data[j++];\n            cod.layersCount = readUint16(data, j);\n            j += 2;\n            cod.multipleComponentTransform = data[j++];\n\n            cod.decompositionLevelsCount = data[j++];\n            cod.xcb = (data[j++] & 0xf) + 2;\n            cod.ycb = (data[j++] & 0xf) + 2;\n            const blockStyle = data[j++];\n            cod.selectiveArithmeticCodingBypass = !!(blockStyle & 1);\n            cod.resetContextProbabilities = !!(blockStyle & 2);\n            cod.terminationOnEachCodingPass = !!(blockStyle & 4);\n            cod.verticallyStripe = !!(blockStyle & 8);\n            cod.predictableTermination = !!(blockStyle & 16);\n            cod.segmentationSymbolUsed = !!(blockStyle & 32);\n            cod.reversibleTransformation = data[j++];\n            if (cod.entropyCoderWithCustomPrecincts) {\n              const precinctsSizes = [];\n              while (j < length + position) {\n                const precinctsSize = data[j++];\n                precinctsSizes.push({\n                  PPx: precinctsSize & 0xf,\n                  PPy: precinctsSize >> 4,\n                });\n              }\n              cod.precinctsSizes = precinctsSizes;\n            }\n            const unsupported = [];\n            if (cod.selectiveArithmeticCodingBypass) {\n              unsupported.push(\"selectiveArithmeticCodingBypass\");\n            }\n            if (cod.resetContextProbabilities) {\n              unsupported.push(\"resetContextProbabilities\");\n            }\n            if (cod.terminationOnEachCodingPass) {\n              unsupported.push(\"terminationOnEachCodingPass\");\n            }\n            if (cod.verticallyStripe) {\n              unsupported.push(\"verticallyStripe\");\n            }\n            if (cod.predictableTermination) {\n              unsupported.push(\"predictableTermination\");\n            }\n            if (unsupported.length > 0) {\n              doNotRecover = true;\n              warn(`JPX: Unsupported COD options (${unsupported.join(\", \")}).`);\n            }\n            if (context.mainHeader) {\n              context.COD = cod;\n            } else {\n              context.currentTile.COD = cod;\n              context.currentTile.COC = [];\n            }\n            break;\n          case 0xff90: // Start of tile-part (SOT)\n            length = readUint16(data, position);\n            tile = {};\n            tile.index = readUint16(data, position + 2);\n            tile.length = readUint32(data, position + 4);\n            tile.dataEnd = tile.length + position - 2;\n            tile.partIndex = data[position + 8];\n            tile.partsCount = data[position + 9];\n\n            context.mainHeader = false;\n            if (tile.partIndex === 0) {\n              // reset component specific settings\n              tile.COD = context.COD;\n              tile.COC = context.COC.slice(0); // clone of the global COC\n              tile.QCD = context.QCD;\n              tile.QCC = context.QCC.slice(0); // clone of the global COC\n            }\n            context.currentTile = tile;\n            break;\n          case 0xff93: // Start of data (SOD)\n            tile = context.currentTile;\n            if (tile.partIndex === 0) {\n              initializeTile(context, tile.index);\n              buildPackets(context);\n            }\n\n            // moving to the end of the data\n            length = tile.dataEnd - position;\n            parseTilePackets(context, data, position, length);\n            break;\n          case 0xff53: // Coding style component (COC)\n            warn(\"JPX: Codestream code 0xFF53 (COC) is not implemented.\");\n          /* falls through */\n          case 0xff55: // Tile-part lengths, main header (TLM)\n          case 0xff57: // Packet length, main header (PLM)\n          case 0xff58: // Packet length, tile-part header (PLT)\n          case 0xff64: // Comment (COM)\n            length = readUint16(data, position);\n            // skipping content\n            break;\n          default:\n            throw new Error(\"Unknown codestream code: \" + code.toString(16));\n        }\n        position += length;\n      }\n    } catch (e) {\n      if (doNotRecover || this.failOnCorruptedImage) {\n        throw new JpxError(e.message);\n      } else {\n        warn(`JPX: Trying to recover from: \"${e.message}\".`);\n      }\n    }\n    this.tiles = transformComponents(context);\n    this.width = context.SIZ.Xsiz - context.SIZ.XOsiz;\n    this.height = context.SIZ.Ysiz - context.SIZ.YOsiz;\n    this.componentsCount = context.SIZ.Csiz;\n  }\n}\n\nfunction calculateComponentDimensions(component, siz) {\n  // Section B.2 Component mapping\n  component.x0 = Math.ceil(siz.XOsiz / component.XRsiz);\n  component.x1 = Math.ceil(siz.Xsiz / component.XRsiz);\n  component.y0 = Math.ceil(siz.YOsiz / component.YRsiz);\n  component.y1 = Math.ceil(siz.Ysiz / component.YRsiz);\n  component.width = component.x1 - component.x0;\n  component.height = component.y1 - component.y0;\n}\nfunction calculateTileGrids(context, components) {\n  const siz = context.SIZ;\n  // Section B.3 Division into tile and tile-components\n  const tiles = [];\n  let tile;\n  const numXtiles = Math.ceil((siz.Xsiz - siz.XTOsiz) / siz.XTsiz);\n  const numYtiles = Math.ceil((siz.Ysiz - siz.YTOsiz) / siz.YTsiz);\n  for (let q = 0; q < numYtiles; q++) {\n    for (let p = 0; p < numXtiles; p++) {\n      tile = {};\n      tile.tx0 = Math.max(siz.XTOsiz + p * siz.XTsiz, siz.XOsiz);\n      tile.ty0 = Math.max(siz.YTOsiz + q * siz.YTsiz, siz.YOsiz);\n      tile.tx1 = Math.min(siz.XTOsiz + (p + 1) * siz.XTsiz, siz.Xsiz);\n      tile.ty1 = Math.min(siz.YTOsiz + (q + 1) * siz.YTsiz, siz.Ysiz);\n      tile.width = tile.tx1 - tile.tx0;\n      tile.height = tile.ty1 - tile.ty0;\n      tile.components = [];\n      tiles.push(tile);\n    }\n  }\n  context.tiles = tiles;\n\n  const componentsCount = siz.Csiz;\n  for (let i = 0, ii = componentsCount; i < ii; i++) {\n    const component = components[i];\n    for (let j = 0, jj = tiles.length; j < jj; j++) {\n      const tileComponent = {};\n      tile = tiles[j];\n      tileComponent.tcx0 = Math.ceil(tile.tx0 / component.XRsiz);\n      tileComponent.tcy0 = Math.ceil(tile.ty0 / component.YRsiz);\n      tileComponent.tcx1 = Math.ceil(tile.tx1 / component.XRsiz);\n      tileComponent.tcy1 = Math.ceil(tile.ty1 / component.YRsiz);\n      tileComponent.width = tileComponent.tcx1 - tileComponent.tcx0;\n      tileComponent.height = tileComponent.tcy1 - tileComponent.tcy0;\n      tile.components[i] = tileComponent;\n    }\n  }\n}\nfunction getBlocksDimensions(context, component, r) {\n  const codOrCoc = component.codingStyleParameters;\n  const result = {};\n  if (!codOrCoc.entropyCoderWithCustomPrecincts) {\n    result.PPx = 15;\n    result.PPy = 15;\n  } else {\n    result.PPx = codOrCoc.precinctsSizes[r].PPx;\n    result.PPy = codOrCoc.precinctsSizes[r].PPy;\n  }\n  // calculate codeblock size as described in section B.7\n  result.xcb_ =\n    r > 0\n      ? Math.min(codOrCoc.xcb, result.PPx - 1)\n      : Math.min(codOrCoc.xcb, result.PPx);\n  result.ycb_ =\n    r > 0\n      ? Math.min(codOrCoc.ycb, result.PPy - 1)\n      : Math.min(codOrCoc.ycb, result.PPy);\n  return result;\n}\nfunction buildPrecincts(context, resolution, dimensions) {\n  // Section B.6 Division resolution to precincts\n  const precinctWidth = 1 << dimensions.PPx;\n  const precinctHeight = 1 << dimensions.PPy;\n  // Jasper introduces codeblock groups for mapping each subband codeblocks\n  // to precincts. Precinct partition divides a resolution according to width\n  // and height parameters. The subband that belongs to the resolution level\n  // has a different size than the level, unless it is the zero resolution.\n\n  // From Jasper documentation: jpeg2000.pdf, section K: Tier-2 coding:\n  // The precinct partitioning for a particular subband is derived from a\n  // partitioning of its parent LL band (i.e., the LL band at the next higher\n  // resolution level)... The LL band associated with each resolution level is\n  // divided into precincts... Each of the resulting precinct regions is then\n  // mapped into its child subbands (if any) at the next lower resolution\n  // level. This is accomplished by using the coordinate transformation\n  // (u, v) = (ceil(x/2), ceil(y/2)) where (x, y) and (u, v) are the\n  // coordinates of a point in the LL band and child subband, respectively.\n  const isZeroRes = resolution.resLevel === 0;\n  const precinctWidthInSubband = 1 << (dimensions.PPx + (isZeroRes ? 0 : -1));\n  const precinctHeightInSubband = 1 << (dimensions.PPy + (isZeroRes ? 0 : -1));\n  const numprecinctswide =\n    resolution.trx1 > resolution.trx0\n      ? Math.ceil(resolution.trx1 / precinctWidth) -\n        Math.floor(resolution.trx0 / precinctWidth)\n      : 0;\n  const numprecinctshigh =\n    resolution.try1 > resolution.try0\n      ? Math.ceil(resolution.try1 / precinctHeight) -\n        Math.floor(resolution.try0 / precinctHeight)\n      : 0;\n  const numprecincts = numprecinctswide * numprecinctshigh;\n\n  resolution.precinctParameters = {\n    precinctWidth,\n    precinctHeight,\n    numprecinctswide,\n    numprecinctshigh,\n    numprecincts,\n    precinctWidthInSubband,\n    precinctHeightInSubband,\n  };\n}\nfunction buildCodeblocks(context, subband, dimensions) {\n  // Section B.7 Division sub-band into code-blocks\n  const xcb_ = dimensions.xcb_;\n  const ycb_ = dimensions.ycb_;\n  const codeblockWidth = 1 << xcb_;\n  const codeblockHeight = 1 << ycb_;\n  const cbx0 = subband.tbx0 >> xcb_;\n  const cby0 = subband.tby0 >> ycb_;\n  const cbx1 = (subband.tbx1 + codeblockWidth - 1) >> xcb_;\n  const cby1 = (subband.tby1 + codeblockHeight - 1) >> ycb_;\n  const precinctParameters = subband.resolution.precinctParameters;\n  const codeblocks = [];\n  const precincts = [];\n  let i, j, codeblock, precinctNumber;\n  for (j = cby0; j < cby1; j++) {\n    for (i = cbx0; i < cbx1; i++) {\n      codeblock = {\n        cbx: i,\n        cby: j,\n        tbx0: codeblockWidth * i,\n        tby0: codeblockHeight * j,\n        tbx1: codeblockWidth * (i + 1),\n        tby1: codeblockHeight * (j + 1),\n      };\n\n      codeblock.tbx0_ = Math.max(subband.tbx0, codeblock.tbx0);\n      codeblock.tby0_ = Math.max(subband.tby0, codeblock.tby0);\n      codeblock.tbx1_ = Math.min(subband.tbx1, codeblock.tbx1);\n      codeblock.tby1_ = Math.min(subband.tby1, codeblock.tby1);\n\n      // Calculate precinct number for this codeblock, codeblock position\n      // should be relative to its subband, use actual dimension and position\n      // See comment about codeblock group width and height\n      const pi = Math.floor(\n        (codeblock.tbx0_ - subband.tbx0) /\n          precinctParameters.precinctWidthInSubband\n      );\n      const pj = Math.floor(\n        (codeblock.tby0_ - subband.tby0) /\n          precinctParameters.precinctHeightInSubband\n      );\n      precinctNumber = pi + pj * precinctParameters.numprecinctswide;\n\n      codeblock.precinctNumber = precinctNumber;\n      codeblock.subbandType = subband.type;\n      codeblock.Lblock = 3;\n\n      if (\n        codeblock.tbx1_ <= codeblock.tbx0_ ||\n        codeblock.tby1_ <= codeblock.tby0_\n      ) {\n        continue;\n      }\n      codeblocks.push(codeblock);\n      // building precinct for the sub-band\n      let precinct = precincts[precinctNumber];\n      if (precinct !== undefined) {\n        if (i < precinct.cbxMin) {\n          precinct.cbxMin = i;\n        } else if (i > precinct.cbxMax) {\n          precinct.cbxMax = i;\n        }\n        if (j < precinct.cbyMin) {\n          precinct.cbxMin = j;\n        } else if (j > precinct.cbyMax) {\n          precinct.cbyMax = j;\n        }\n      } else {\n        precincts[precinctNumber] = precinct = {\n          cbxMin: i,\n          cbyMin: j,\n          cbxMax: i,\n          cbyMax: j,\n        };\n      }\n      codeblock.precinct = precinct;\n    }\n  }\n  subband.codeblockParameters = {\n    codeblockWidth: xcb_,\n    codeblockHeight: ycb_,\n    numcodeblockwide: cbx1 - cbx0 + 1,\n    numcodeblockhigh: cby1 - cby0 + 1,\n  };\n  subband.codeblocks = codeblocks;\n  subband.precincts = precincts;\n}\nfunction createPacket(resolution, precinctNumber, layerNumber) {\n  const precinctCodeblocks = [];\n  // Section B.10.8 Order of info in packet\n  const subbands = resolution.subbands;\n  // sub-bands already ordered in 'LL', 'HL', 'LH', and 'HH' sequence\n  for (let i = 0, ii = subbands.length; i < ii; i++) {\n    const subband = subbands[i];\n    const codeblocks = subband.codeblocks;\n    for (let j = 0, jj = codeblocks.length; j < jj; j++) {\n      const codeblock = codeblocks[j];\n      if (codeblock.precinctNumber !== precinctNumber) {\n        continue;\n      }\n      precinctCodeblocks.push(codeblock);\n    }\n  }\n  return {\n    layerNumber,\n    codeblocks: precinctCodeblocks,\n  };\n}\nfunction LayerResolutionComponentPositionIterator(context) {\n  const siz = context.SIZ;\n  const tileIndex = context.currentTile.index;\n  const tile = context.tiles[tileIndex];\n  const layersCount = tile.codingStyleDefaultParameters.layersCount;\n  const componentsCount = siz.Csiz;\n  let maxDecompositionLevelsCount = 0;\n  for (let q = 0; q < componentsCount; q++) {\n    maxDecompositionLevelsCount = Math.max(\n      maxDecompositionLevelsCount,\n      tile.components[q].codingStyleParameters.decompositionLevelsCount\n    );\n  }\n\n  let l = 0,\n    r = 0,\n    i = 0,\n    k = 0;\n\n  this.nextPacket = function JpxImage_nextPacket() {\n    // Section B.12.1.1 Layer-resolution-component-position\n    for (; l < layersCount; l++) {\n      for (; r <= maxDecompositionLevelsCount; r++) {\n        for (; i < componentsCount; i++) {\n          const component = tile.components[i];\n          if (r > component.codingStyleParameters.decompositionLevelsCount) {\n            continue;\n          }\n\n          const resolution = component.resolutions[r];\n          const numprecincts = resolution.precinctParameters.numprecincts;\n          for (; k < numprecincts; ) {\n            const packet = createPacket(resolution, k, l);\n            k++;\n            return packet;\n          }\n          k = 0;\n        }\n        i = 0;\n      }\n      r = 0;\n    }\n    throw new JpxError(\"Out of packets\");\n  };\n}\nfunction ResolutionLayerComponentPositionIterator(context) {\n  const siz = context.SIZ;\n  const tileIndex = context.currentTile.index;\n  const tile = context.tiles[tileIndex];\n  const layersCount = tile.codingStyleDefaultParameters.layersCount;\n  const componentsCount = siz.Csiz;\n  let maxDecompositionLevelsCount = 0;\n  for (let q = 0; q < componentsCount; q++) {\n    maxDecompositionLevelsCount = Math.max(\n      maxDecompositionLevelsCount,\n      tile.components[q].codingStyleParameters.decompositionLevelsCount\n    );\n  }\n\n  let r = 0,\n    l = 0,\n    i = 0,\n    k = 0;\n\n  this.nextPacket = function JpxImage_nextPacket() {\n    // Section B.12.1.2 Resolution-layer-component-position\n    for (; r <= maxDecompositionLevelsCount; r++) {\n      for (; l < layersCount; l++) {\n        for (; i < componentsCount; i++) {\n          const component = tile.components[i];\n          if (r > component.codingStyleParameters.decompositionLevelsCount) {\n            continue;\n          }\n\n          const resolution = component.resolutions[r];\n          const numprecincts = resolution.precinctParameters.numprecincts;\n          for (; k < numprecincts; ) {\n            const packet = createPacket(resolution, k, l);\n            k++;\n            return packet;\n          }\n          k = 0;\n        }\n        i = 0;\n      }\n      l = 0;\n    }\n    throw new JpxError(\"Out of packets\");\n  };\n}\nfunction ResolutionPositionComponentLayerIterator(context) {\n  const siz = context.SIZ;\n  const tileIndex = context.currentTile.index;\n  const tile = context.tiles[tileIndex];\n  const layersCount = tile.codingStyleDefaultParameters.layersCount;\n  const componentsCount = siz.Csiz;\n  let l, r, c, p;\n  let maxDecompositionLevelsCount = 0;\n  for (c = 0; c < componentsCount; c++) {\n    const component = tile.components[c];\n    maxDecompositionLevelsCount = Math.max(\n      maxDecompositionLevelsCount,\n      component.codingStyleParameters.decompositionLevelsCount\n    );\n  }\n  const maxNumPrecinctsInLevel = new Int32Array(\n    maxDecompositionLevelsCount + 1\n  );\n  for (r = 0; r <= maxDecompositionLevelsCount; ++r) {\n    let maxNumPrecincts = 0;\n    for (c = 0; c < componentsCount; ++c) {\n      const resolutions = tile.components[c].resolutions;\n      if (r < resolutions.length) {\n        maxNumPrecincts = Math.max(\n          maxNumPrecincts,\n          resolutions[r].precinctParameters.numprecincts\n        );\n      }\n    }\n    maxNumPrecinctsInLevel[r] = maxNumPrecincts;\n  }\n  l = 0;\n  r = 0;\n  c = 0;\n  p = 0;\n\n  this.nextPacket = function JpxImage_nextPacket() {\n    // Section B.12.1.3 Resolution-position-component-layer\n    for (; r <= maxDecompositionLevelsCount; r++) {\n      for (; p < maxNumPrecinctsInLevel[r]; p++) {\n        for (; c < componentsCount; c++) {\n          const component = tile.components[c];\n          if (r > component.codingStyleParameters.decompositionLevelsCount) {\n            continue;\n          }\n          const resolution = component.resolutions[r];\n          const numprecincts = resolution.precinctParameters.numprecincts;\n          if (p >= numprecincts) {\n            continue;\n          }\n          for (; l < layersCount; ) {\n            const packet = createPacket(resolution, p, l);\n            l++;\n            return packet;\n          }\n          l = 0;\n        }\n        c = 0;\n      }\n      p = 0;\n    }\n    throw new JpxError(\"Out of packets\");\n  };\n}\nfunction PositionComponentResolutionLayerIterator(context) {\n  const siz = context.SIZ;\n  const tileIndex = context.currentTile.index;\n  const tile = context.tiles[tileIndex];\n  const layersCount = tile.codingStyleDefaultParameters.layersCount;\n  const componentsCount = siz.Csiz;\n  const precinctsSizes = getPrecinctSizesInImageScale(tile);\n  const precinctsIterationSizes = precinctsSizes;\n  let l = 0,\n    r = 0,\n    c = 0,\n    px = 0,\n    py = 0;\n\n  this.nextPacket = function JpxImage_nextPacket() {\n    // Section B.12.1.4 Position-component-resolution-layer\n    for (; py < precinctsIterationSizes.maxNumHigh; py++) {\n      for (; px < precinctsIterationSizes.maxNumWide; px++) {\n        for (; c < componentsCount; c++) {\n          const component = tile.components[c];\n          const decompositionLevelsCount =\n            component.codingStyleParameters.decompositionLevelsCount;\n          for (; r <= decompositionLevelsCount; r++) {\n            const resolution = component.resolutions[r];\n            const sizeInImageScale =\n              precinctsSizes.components[c].resolutions[r];\n            const k = getPrecinctIndexIfExist(\n              px,\n              py,\n              sizeInImageScale,\n              precinctsIterationSizes,\n              resolution\n            );\n            if (k === null) {\n              continue;\n            }\n            for (; l < layersCount; ) {\n              const packet = createPacket(resolution, k, l);\n              l++;\n              return packet;\n            }\n            l = 0;\n          }\n          r = 0;\n        }\n        c = 0;\n      }\n      px = 0;\n    }\n    throw new JpxError(\"Out of packets\");\n  };\n}\nfunction ComponentPositionResolutionLayerIterator(context) {\n  const siz = context.SIZ;\n  const tileIndex = context.currentTile.index;\n  const tile = context.tiles[tileIndex];\n  const layersCount = tile.codingStyleDefaultParameters.layersCount;\n  const componentsCount = siz.Csiz;\n  const precinctsSizes = getPrecinctSizesInImageScale(tile);\n  let l = 0,\n    r = 0,\n    c = 0,\n    px = 0,\n    py = 0;\n\n  this.nextPacket = function JpxImage_nextPacket() {\n    // Section B.12.1.5 Component-position-resolution-layer\n    for (; c < componentsCount; ++c) {\n      const component = tile.components[c];\n      const precinctsIterationSizes = precinctsSizes.components[c];\n      const decompositionLevelsCount =\n        component.codingStyleParameters.decompositionLevelsCount;\n      for (; py < precinctsIterationSizes.maxNumHigh; py++) {\n        for (; px < precinctsIterationSizes.maxNumWide; px++) {\n          for (; r <= decompositionLevelsCount; r++) {\n            const resolution = component.resolutions[r];\n            const sizeInImageScale = precinctsIterationSizes.resolutions[r];\n            const k = getPrecinctIndexIfExist(\n              px,\n              py,\n              sizeInImageScale,\n              precinctsIterationSizes,\n              resolution\n            );\n            if (k === null) {\n              continue;\n            }\n            for (; l < layersCount; ) {\n              const packet = createPacket(resolution, k, l);\n              l++;\n              return packet;\n            }\n            l = 0;\n          }\n          r = 0;\n        }\n        px = 0;\n      }\n      py = 0;\n    }\n    throw new JpxError(\"Out of packets\");\n  };\n}\nfunction getPrecinctIndexIfExist(\n  pxIndex,\n  pyIndex,\n  sizeInImageScale,\n  precinctIterationSizes,\n  resolution\n) {\n  const posX = pxIndex * precinctIterationSizes.minWidth;\n  const posY = pyIndex * precinctIterationSizes.minHeight;\n  if (\n    posX % sizeInImageScale.width !== 0 ||\n    posY % sizeInImageScale.height !== 0\n  ) {\n    return null;\n  }\n  const startPrecinctRowIndex =\n    (posY / sizeInImageScale.width) *\n    resolution.precinctParameters.numprecinctswide;\n  return posX / sizeInImageScale.height + startPrecinctRowIndex;\n}\nfunction getPrecinctSizesInImageScale(tile) {\n  const componentsCount = tile.components.length;\n  let minWidth = Number.MAX_VALUE;\n  let minHeight = Number.MAX_VALUE;\n  let maxNumWide = 0;\n  let maxNumHigh = 0;\n  const sizePerComponent = new Array(componentsCount);\n  for (let c = 0; c < componentsCount; c++) {\n    const component = tile.components[c];\n    const decompositionLevelsCount =\n      component.codingStyleParameters.decompositionLevelsCount;\n    const sizePerResolution = new Array(decompositionLevelsCount + 1);\n    let minWidthCurrentComponent = Number.MAX_VALUE;\n    let minHeightCurrentComponent = Number.MAX_VALUE;\n    let maxNumWideCurrentComponent = 0;\n    let maxNumHighCurrentComponent = 0;\n    let scale = 1;\n    for (let r = decompositionLevelsCount; r >= 0; --r) {\n      const resolution = component.resolutions[r];\n      const widthCurrentResolution =\n        scale * resolution.precinctParameters.precinctWidth;\n      const heightCurrentResolution =\n        scale * resolution.precinctParameters.precinctHeight;\n      minWidthCurrentComponent = Math.min(\n        minWidthCurrentComponent,\n        widthCurrentResolution\n      );\n      minHeightCurrentComponent = Math.min(\n        minHeightCurrentComponent,\n        heightCurrentResolution\n      );\n      maxNumWideCurrentComponent = Math.max(\n        maxNumWideCurrentComponent,\n        resolution.precinctParameters.numprecinctswide\n      );\n      maxNumHighCurrentComponent = Math.max(\n        maxNumHighCurrentComponent,\n        resolution.precinctParameters.numprecinctshigh\n      );\n      sizePerResolution[r] = {\n        width: widthCurrentResolution,\n        height: heightCurrentResolution,\n      };\n      scale <<= 1;\n    }\n    minWidth = Math.min(minWidth, minWidthCurrentComponent);\n    minHeight = Math.min(minHeight, minHeightCurrentComponent);\n    maxNumWide = Math.max(maxNumWide, maxNumWideCurrentComponent);\n    maxNumHigh = Math.max(maxNumHigh, maxNumHighCurrentComponent);\n    sizePerComponent[c] = {\n      resolutions: sizePerResolution,\n      minWidth: minWidthCurrentComponent,\n      minHeight: minHeightCurrentComponent,\n      maxNumWide: maxNumWideCurrentComponent,\n      maxNumHigh: maxNumHighCurrentComponent,\n    };\n  }\n  return {\n    components: sizePerComponent,\n    minWidth,\n    minHeight,\n    maxNumWide,\n    maxNumHigh,\n  };\n}\nfunction buildPackets(context) {\n  const siz = context.SIZ;\n  const tileIndex = context.currentTile.index;\n  const tile = context.tiles[tileIndex];\n  const componentsCount = siz.Csiz;\n  // Creating resolutions and sub-bands for each component\n  for (let c = 0; c < componentsCount; c++) {\n    const component = tile.components[c];\n    const decompositionLevelsCount =\n      component.codingStyleParameters.decompositionLevelsCount;\n    // Section B.5 Resolution levels and sub-bands\n    const resolutions = [];\n    const subbands = [];\n    for (let r = 0; r <= decompositionLevelsCount; r++) {\n      const blocksDimensions = getBlocksDimensions(context, component, r);\n      const resolution = {};\n      const scale = 1 << (decompositionLevelsCount - r);\n      resolution.trx0 = Math.ceil(component.tcx0 / scale);\n      resolution.try0 = Math.ceil(component.tcy0 / scale);\n      resolution.trx1 = Math.ceil(component.tcx1 / scale);\n      resolution.try1 = Math.ceil(component.tcy1 / scale);\n      resolution.resLevel = r;\n      buildPrecincts(context, resolution, blocksDimensions);\n      resolutions.push(resolution);\n\n      let subband;\n      if (r === 0) {\n        // one sub-band (LL) with last decomposition\n        subband = {};\n        subband.type = \"LL\";\n        subband.tbx0 = Math.ceil(component.tcx0 / scale);\n        subband.tby0 = Math.ceil(component.tcy0 / scale);\n        subband.tbx1 = Math.ceil(component.tcx1 / scale);\n        subband.tby1 = Math.ceil(component.tcy1 / scale);\n        subband.resolution = resolution;\n        buildCodeblocks(context, subband, blocksDimensions);\n        subbands.push(subband);\n        resolution.subbands = [subband];\n      } else {\n        const bscale = 1 << (decompositionLevelsCount - r + 1);\n        const resolutionSubbands = [];\n        // three sub-bands (HL, LH and HH) with rest of decompositions\n        subband = {};\n        subband.type = \"HL\";\n        subband.tbx0 = Math.ceil(component.tcx0 / bscale - 0.5);\n        subband.tby0 = Math.ceil(component.tcy0 / bscale);\n        subband.tbx1 = Math.ceil(component.tcx1 / bscale - 0.5);\n        subband.tby1 = Math.ceil(component.tcy1 / bscale);\n        subband.resolution = resolution;\n        buildCodeblocks(context, subband, blocksDimensions);\n        subbands.push(subband);\n        resolutionSubbands.push(subband);\n\n        subband = {};\n        subband.type = \"LH\";\n        subband.tbx0 = Math.ceil(component.tcx0 / bscale);\n        subband.tby0 = Math.ceil(component.tcy0 / bscale - 0.5);\n        subband.tbx1 = Math.ceil(component.tcx1 / bscale);\n        subband.tby1 = Math.ceil(component.tcy1 / bscale - 0.5);\n        subband.resolution = resolution;\n        buildCodeblocks(context, subband, blocksDimensions);\n        subbands.push(subband);\n        resolutionSubbands.push(subband);\n\n        subband = {};\n        subband.type = \"HH\";\n        subband.tbx0 = Math.ceil(component.tcx0 / bscale - 0.5);\n        subband.tby0 = Math.ceil(component.tcy0 / bscale - 0.5);\n        subband.tbx1 = Math.ceil(component.tcx1 / bscale - 0.5);\n        subband.tby1 = Math.ceil(component.tcy1 / bscale - 0.5);\n        subband.resolution = resolution;\n        buildCodeblocks(context, subband, blocksDimensions);\n        subbands.push(subband);\n        resolutionSubbands.push(subband);\n\n        resolution.subbands = resolutionSubbands;\n      }\n    }\n    component.resolutions = resolutions;\n    component.subbands = subbands;\n  }\n  // Generate the packets sequence\n  const progressionOrder = tile.codingStyleDefaultParameters.progressionOrder;\n  switch (progressionOrder) {\n    case 0:\n      tile.packetsIterator = new LayerResolutionComponentPositionIterator(\n        context\n      );\n      break;\n    case 1:\n      tile.packetsIterator = new ResolutionLayerComponentPositionIterator(\n        context\n      );\n      break;\n    case 2:\n      tile.packetsIterator = new ResolutionPositionComponentLayerIterator(\n        context\n      );\n      break;\n    case 3:\n      tile.packetsIterator = new PositionComponentResolutionLayerIterator(\n        context\n      );\n      break;\n    case 4:\n      tile.packetsIterator = new ComponentPositionResolutionLayerIterator(\n        context\n      );\n      break;\n    default:\n      throw new JpxError(`Unsupported progression order ${progressionOrder}`);\n  }\n}\nfunction parseTilePackets(context, data, offset, dataLength) {\n  let position = 0;\n  let buffer,\n    bufferSize = 0,\n    skipNextBit = false;\n  function readBits(count) {\n    while (bufferSize < count) {\n      const b = data[offset + position];\n      position++;\n      if (skipNextBit) {\n        buffer = (buffer << 7) | b;\n        bufferSize += 7;\n        skipNextBit = false;\n      } else {\n        buffer = (buffer << 8) | b;\n        bufferSize += 8;\n      }\n      if (b === 0xff) {\n        skipNextBit = true;\n      }\n    }\n    bufferSize -= count;\n    return (buffer >>> bufferSize) & ((1 << count) - 1);\n  }\n  function skipMarkerIfEqual(value) {\n    if (\n      data[offset + position - 1] === 0xff &&\n      data[offset + position] === value\n    ) {\n      skipBytes(1);\n      return true;\n    } else if (\n      data[offset + position] === 0xff &&\n      data[offset + position + 1] === value\n    ) {\n      skipBytes(2);\n      return true;\n    }\n    return false;\n  }\n  function skipBytes(count) {\n    position += count;\n  }\n  function alignToByte() {\n    bufferSize = 0;\n    if (skipNextBit) {\n      position++;\n      skipNextBit = false;\n    }\n  }\n  function readCodingpasses() {\n    if (readBits(1) === 0) {\n      return 1;\n    }\n    if (readBits(1) === 0) {\n      return 2;\n    }\n    let value = readBits(2);\n    if (value < 3) {\n      return value + 3;\n    }\n    value = readBits(5);\n    if (value < 31) {\n      return value + 6;\n    }\n    value = readBits(7);\n    return value + 37;\n  }\n  const tileIndex = context.currentTile.index;\n  const tile = context.tiles[tileIndex];\n  const sopMarkerUsed = context.COD.sopMarkerUsed;\n  const ephMarkerUsed = context.COD.ephMarkerUsed;\n  const packetsIterator = tile.packetsIterator;\n  while (position < dataLength) {\n    alignToByte();\n    if (sopMarkerUsed && skipMarkerIfEqual(0x91)) {\n      // Skip also marker segment length and packet sequence ID\n      skipBytes(4);\n    }\n    const packet = packetsIterator.nextPacket();\n    if (!readBits(1)) {\n      continue;\n    }\n    const layerNumber = packet.layerNumber,\n      queue = [];\n    let codeblock;\n    for (let i = 0, ii = packet.codeblocks.length; i < ii; i++) {\n      codeblock = packet.codeblocks[i];\n      let precinct = codeblock.precinct;\n      const codeblockColumn = codeblock.cbx - precinct.cbxMin;\n      const codeblockRow = codeblock.cby - precinct.cbyMin;\n      let codeblockIncluded = false;\n      let firstTimeInclusion = false;\n      let valueReady, zeroBitPlanesTree;\n      if (codeblock.included !== undefined) {\n        codeblockIncluded = !!readBits(1);\n      } else {\n        // reading inclusion tree\n        precinct = codeblock.precinct;\n        let inclusionTree;\n        if (precinct.inclusionTree !== undefined) {\n          inclusionTree = precinct.inclusionTree;\n        } else {\n          // building inclusion and zero bit-planes trees\n          const width = precinct.cbxMax - precinct.cbxMin + 1;\n          const height = precinct.cbyMax - precinct.cbyMin + 1;\n          inclusionTree = new InclusionTree(width, height, layerNumber);\n          zeroBitPlanesTree = new TagTree(width, height);\n          precinct.inclusionTree = inclusionTree;\n          precinct.zeroBitPlanesTree = zeroBitPlanesTree;\n          for (let l = 0; l < layerNumber; l++) {\n            if (readBits(1) !== 0) {\n              throw new JpxError(\"Invalid tag tree\");\n            }\n          }\n        }\n\n        if (inclusionTree.reset(codeblockColumn, codeblockRow, layerNumber)) {\n          while (true) {\n            if (readBits(1)) {\n              valueReady = !inclusionTree.nextLevel();\n              if (valueReady) {\n                codeblock.included = true;\n                codeblockIncluded = firstTimeInclusion = true;\n                break;\n              }\n            } else {\n              inclusionTree.incrementValue(layerNumber);\n              break;\n            }\n          }\n        }\n      }\n      if (!codeblockIncluded) {\n        continue;\n      }\n      if (firstTimeInclusion) {\n        zeroBitPlanesTree = precinct.zeroBitPlanesTree;\n        zeroBitPlanesTree.reset(codeblockColumn, codeblockRow);\n        while (true) {\n          if (readBits(1)) {\n            valueReady = !zeroBitPlanesTree.nextLevel();\n            if (valueReady) {\n              break;\n            }\n          } else {\n            zeroBitPlanesTree.incrementValue();\n          }\n        }\n        codeblock.zeroBitPlanes = zeroBitPlanesTree.value;\n      }\n      const codingpasses = readCodingpasses();\n      while (readBits(1)) {\n        codeblock.Lblock++;\n      }\n      const codingpassesLog2 = log2(codingpasses);\n      // rounding down log2\n      const bits =\n        (codingpasses < 1 << codingpassesLog2\n          ? codingpassesLog2 - 1\n          : codingpassesLog2) + codeblock.Lblock;\n      const codedDataLength = readBits(bits);\n      queue.push({\n        codeblock,\n        codingpasses,\n        dataLength: codedDataLength,\n      });\n    }\n    alignToByte();\n    if (ephMarkerUsed) {\n      skipMarkerIfEqual(0x92);\n    }\n    while (queue.length > 0) {\n      const packetItem = queue.shift();\n      codeblock = packetItem.codeblock;\n      if (codeblock.data === undefined) {\n        codeblock.data = [];\n      }\n      codeblock.data.push({\n        data,\n        start: offset + position,\n        end: offset + position + packetItem.dataLength,\n        codingpasses: packetItem.codingpasses,\n      });\n      position += packetItem.dataLength;\n    }\n  }\n  return position;\n}\nfunction copyCoefficients(\n  coefficients,\n  levelWidth,\n  levelHeight,\n  subband,\n  delta,\n  mb,\n  reversible,\n  segmentationSymbolUsed\n) {\n  const x0 = subband.tbx0;\n  const y0 = subband.tby0;\n  const width = subband.tbx1 - subband.tbx0;\n  const codeblocks = subband.codeblocks;\n  const right = subband.type.charAt(0) === \"H\" ? 1 : 0;\n  const bottom = subband.type.charAt(1) === \"H\" ? levelWidth : 0;\n\n  for (let i = 0, ii = codeblocks.length; i < ii; ++i) {\n    const codeblock = codeblocks[i];\n    const blockWidth = codeblock.tbx1_ - codeblock.tbx0_;\n    const blockHeight = codeblock.tby1_ - codeblock.tby0_;\n    if (blockWidth === 0 || blockHeight === 0) {\n      continue;\n    }\n    if (codeblock.data === undefined) {\n      continue;\n    }\n\n    const bitModel = new BitModel(\n      blockWidth,\n      blockHeight,\n      codeblock.subbandType,\n      codeblock.zeroBitPlanes,\n      mb\n    );\n    let currentCodingpassType = 2; // first bit plane starts from cleanup\n\n    // collect data\n    const data = codeblock.data;\n    let totalLength = 0,\n      codingpasses = 0;\n    let j, jj, dataItem;\n    for (j = 0, jj = data.length; j < jj; j++) {\n      dataItem = data[j];\n      totalLength += dataItem.end - dataItem.start;\n      codingpasses += dataItem.codingpasses;\n    }\n    const encodedData = new Uint8Array(totalLength);\n    let position = 0;\n    for (j = 0, jj = data.length; j < jj; j++) {\n      dataItem = data[j];\n      const chunk = dataItem.data.subarray(dataItem.start, dataItem.end);\n      encodedData.set(chunk, position);\n      position += chunk.length;\n    }\n    // decoding the item\n    const decoder = new ArithmeticDecoder(encodedData, 0, totalLength);\n    bitModel.setDecoder(decoder);\n\n    for (j = 0; j < codingpasses; j++) {\n      switch (currentCodingpassType) {\n        case 0:\n          bitModel.runSignificancePropagationPass();\n          break;\n        case 1:\n          bitModel.runMagnitudeRefinementPass();\n          break;\n        case 2:\n          bitModel.runCleanupPass();\n          if (segmentationSymbolUsed) {\n            bitModel.checkSegmentationSymbol();\n          }\n          break;\n      }\n      currentCodingpassType = (currentCodingpassType + 1) % 3;\n    }\n\n    let offset = codeblock.tbx0_ - x0 + (codeblock.tby0_ - y0) * width;\n    const sign = bitModel.coefficentsSign;\n    const magnitude = bitModel.coefficentsMagnitude;\n    const bitsDecoded = bitModel.bitsDecoded;\n    const magnitudeCorrection = reversible ? 0 : 0.5;\n    let k, n, nb;\n    position = 0;\n    // Do the interleaving of Section F.3.3 here, so we do not need\n    // to copy later. LL level is not interleaved, just copied.\n    const interleave = subband.type !== \"LL\";\n    for (j = 0; j < blockHeight; j++) {\n      const row = (offset / width) | 0; // row in the non-interleaved subband\n      const levelOffset = 2 * row * (levelWidth - width) + right + bottom;\n      for (k = 0; k < blockWidth; k++) {\n        n = magnitude[position];\n        if (n !== 0) {\n          n = (n + magnitudeCorrection) * delta;\n          if (sign[position] !== 0) {\n            n = -n;\n          }\n          nb = bitsDecoded[position];\n          const pos = interleave ? levelOffset + (offset << 1) : offset;\n          if (reversible && nb >= mb) {\n            coefficients[pos] = n;\n          } else {\n            coefficients[pos] = n * (1 << (mb - nb));\n          }\n        }\n        offset++;\n        position++;\n      }\n      offset += width - blockWidth;\n    }\n  }\n}\nfunction transformTile(context, tile, c) {\n  const component = tile.components[c];\n  const codingStyleParameters = component.codingStyleParameters;\n  const quantizationParameters = component.quantizationParameters;\n  const decompositionLevelsCount =\n    codingStyleParameters.decompositionLevelsCount;\n  const spqcds = quantizationParameters.SPqcds;\n  const scalarExpounded = quantizationParameters.scalarExpounded;\n  const guardBits = quantizationParameters.guardBits;\n  const segmentationSymbolUsed = codingStyleParameters.segmentationSymbolUsed;\n  const precision = context.components[c].precision;\n\n  const reversible = codingStyleParameters.reversibleTransformation;\n  const transform = reversible\n    ? new ReversibleTransform()\n    : new IrreversibleTransform();\n\n  const subbandCoefficients = [];\n  let b = 0;\n  for (let i = 0; i <= decompositionLevelsCount; i++) {\n    const resolution = component.resolutions[i];\n\n    const width = resolution.trx1 - resolution.trx0;\n    const height = resolution.try1 - resolution.try0;\n    // Allocate space for the whole sublevel.\n    const coefficients = new Float32Array(width * height);\n\n    for (let j = 0, jj = resolution.subbands.length; j < jj; j++) {\n      let mu, epsilon;\n      if (!scalarExpounded) {\n        // formula E-5\n        mu = spqcds[0].mu;\n        epsilon = spqcds[0].epsilon + (i > 0 ? 1 - i : 0);\n      } else {\n        mu = spqcds[b].mu;\n        epsilon = spqcds[b].epsilon;\n        b++;\n      }\n\n      const subband = resolution.subbands[j];\n      const gainLog2 = SubbandsGainLog2[subband.type];\n\n      // calculate quantization coefficient (Section E.1.1.1)\n      const delta = reversible\n        ? 1\n        : 2 ** (precision + gainLog2 - epsilon) * (1 + mu / 2048);\n      const mb = guardBits + epsilon - 1;\n\n      // In the first resolution level, copyCoefficients will fill the\n      // whole array with coefficients. In the succeeding passes,\n      // copyCoefficients will consecutively fill in the values that belong\n      // to the interleaved positions of the HL, LH, and HH coefficients.\n      // The LL coefficients will then be interleaved in Transform.iterate().\n      copyCoefficients(\n        coefficients,\n        width,\n        height,\n        subband,\n        delta,\n        mb,\n        reversible,\n        segmentationSymbolUsed\n      );\n    }\n    subbandCoefficients.push({\n      width,\n      height,\n      items: coefficients,\n    });\n  }\n\n  const result = transform.calculate(\n    subbandCoefficients,\n    component.tcx0,\n    component.tcy0\n  );\n  return {\n    left: component.tcx0,\n    top: component.tcy0,\n    width: result.width,\n    height: result.height,\n    items: result.items,\n  };\n}\nfunction transformComponents(context) {\n  const siz = context.SIZ;\n  const components = context.components;\n  const componentsCount = siz.Csiz;\n  const resultImages = [];\n  for (let i = 0, ii = context.tiles.length; i < ii; i++) {\n    const tile = context.tiles[i];\n    const transformedTiles = [];\n    for (let c = 0; c < componentsCount; c++) {\n      transformedTiles[c] = transformTile(context, tile, c);\n    }\n    const tile0 = transformedTiles[0];\n    const out = new Uint8ClampedArray(tile0.items.length * componentsCount);\n    const result = {\n      left: tile0.left,\n      top: tile0.top,\n      width: tile0.width,\n      height: tile0.height,\n      items: out,\n    };\n\n    // Section G.2.2 Inverse multi component transform\n    let shift, offset;\n    let pos = 0,\n      j,\n      jj,\n      y0,\n      y1,\n      y2;\n    if (tile.codingStyleDefaultParameters.multipleComponentTransform) {\n      const fourComponents = componentsCount === 4;\n      const y0items = transformedTiles[0].items;\n      const y1items = transformedTiles[1].items;\n      const y2items = transformedTiles[2].items;\n      const y3items = fourComponents ? transformedTiles[3].items : null;\n\n      // HACK: The multiple component transform formulas below assume that\n      // all components have the same precision. With this in mind, we\n      // compute shift and offset only once.\n      shift = components[0].precision - 8;\n      offset = (128 << shift) + 0.5;\n\n      const component0 = tile.components[0];\n      const alpha01 = componentsCount - 3;\n      jj = y0items.length;\n      if (!component0.codingStyleParameters.reversibleTransformation) {\n        // inverse irreversible multiple component transform\n        for (j = 0; j < jj; j++, pos += alpha01) {\n          y0 = y0items[j] + offset;\n          y1 = y1items[j];\n          y2 = y2items[j];\n          out[pos++] = (y0 + 1.402 * y2) >> shift;\n          out[pos++] = (y0 - 0.34413 * y1 - 0.71414 * y2) >> shift;\n          out[pos++] = (y0 + 1.772 * y1) >> shift;\n        }\n      } else {\n        // inverse reversible multiple component transform\n        for (j = 0; j < jj; j++, pos += alpha01) {\n          y0 = y0items[j] + offset;\n          y1 = y1items[j];\n          y2 = y2items[j];\n          const g = y0 - ((y2 + y1) >> 2);\n\n          out[pos++] = (g + y2) >> shift;\n          out[pos++] = g >> shift;\n          out[pos++] = (g + y1) >> shift;\n        }\n      }\n      if (fourComponents) {\n        for (j = 0, pos = 3; j < jj; j++, pos += 4) {\n          out[pos] = (y3items[j] + offset) >> shift;\n        }\n      }\n    } else {\n      // no multi-component transform\n      for (let c = 0; c < componentsCount; c++) {\n        const items = transformedTiles[c].items;\n        shift = components[c].precision - 8;\n        offset = (128 << shift) + 0.5;\n        for (pos = c, j = 0, jj = items.length; j < jj; j++) {\n          out[pos] = (items[j] + offset) >> shift;\n          pos += componentsCount;\n        }\n      }\n    }\n    resultImages.push(result);\n  }\n  return resultImages;\n}\nfunction initializeTile(context, tileIndex) {\n  const siz = context.SIZ;\n  const componentsCount = siz.Csiz;\n  const tile = context.tiles[tileIndex];\n  for (let c = 0; c < componentsCount; c++) {\n    const component = tile.components[c];\n    const qcdOrQcc =\n      context.currentTile.QCC[c] !== undefined\n        ? context.currentTile.QCC[c]\n        : context.currentTile.QCD;\n    component.quantizationParameters = qcdOrQcc;\n    const codOrCoc =\n      context.currentTile.COC[c] !== undefined\n        ? context.currentTile.COC[c]\n        : context.currentTile.COD;\n    component.codingStyleParameters = codOrCoc;\n  }\n  tile.codingStyleDefaultParameters = context.currentTile.COD;\n}\n\n// Section B.10.2 Tag trees\nclass TagTree {\n  constructor(width, height) {\n    const levelsLength = log2(Math.max(width, height)) + 1;\n    this.levels = [];\n    for (let i = 0; i < levelsLength; i++) {\n      const level = {\n        width,\n        height,\n        items: [],\n      };\n      this.levels.push(level);\n      width = Math.ceil(width / 2);\n      height = Math.ceil(height / 2);\n    }\n  }\n\n  reset(i, j) {\n    let currentLevel = 0,\n      value = 0,\n      level;\n    while (currentLevel < this.levels.length) {\n      level = this.levels[currentLevel];\n      const index = i + j * level.width;\n      if (level.items[index] !== undefined) {\n        value = level.items[index];\n        break;\n      }\n      level.index = index;\n      i >>= 1;\n      j >>= 1;\n      currentLevel++;\n    }\n    currentLevel--;\n    level = this.levels[currentLevel];\n    level.items[level.index] = value;\n    this.currentLevel = currentLevel;\n    delete this.value;\n  }\n\n  incrementValue() {\n    const level = this.levels[this.currentLevel];\n    level.items[level.index]++;\n  }\n\n  nextLevel() {\n    let currentLevel = this.currentLevel;\n    let level = this.levels[currentLevel];\n    const value = level.items[level.index];\n    currentLevel--;\n    if (currentLevel < 0) {\n      this.value = value;\n      return false;\n    }\n\n    this.currentLevel = currentLevel;\n    level = this.levels[currentLevel];\n    level.items[level.index] = value;\n    return true;\n  }\n}\n\nclass InclusionTree {\n  constructor(width, height, defaultValue) {\n    const levelsLength = log2(Math.max(width, height)) + 1;\n    this.levels = [];\n    for (let i = 0; i < levelsLength; i++) {\n      const items = new Uint8Array(width * height);\n      for (let j = 0, jj = items.length; j < jj; j++) {\n        items[j] = defaultValue;\n      }\n\n      const level = {\n        width,\n        height,\n        items,\n      };\n      this.levels.push(level);\n\n      width = Math.ceil(width / 2);\n      height = Math.ceil(height / 2);\n    }\n  }\n\n  reset(i, j, stopValue) {\n    let currentLevel = 0;\n    while (currentLevel < this.levels.length) {\n      const level = this.levels[currentLevel];\n      const index = i + j * level.width;\n      level.index = index;\n      const value = level.items[index];\n\n      if (value === 0xff) {\n        break;\n      }\n\n      if (value > stopValue) {\n        this.currentLevel = currentLevel;\n        // already know about this one, propagating the value to top levels\n        this.propagateValues();\n        return false;\n      }\n\n      i >>= 1;\n      j >>= 1;\n      currentLevel++;\n    }\n    this.currentLevel = currentLevel - 1;\n    return true;\n  }\n\n  incrementValue(stopValue) {\n    const level = this.levels[this.currentLevel];\n    level.items[level.index] = stopValue + 1;\n    this.propagateValues();\n  }\n\n  propagateValues() {\n    let levelIndex = this.currentLevel;\n    let level = this.levels[levelIndex];\n    const currentValue = level.items[level.index];\n    while (--levelIndex >= 0) {\n      level = this.levels[levelIndex];\n      level.items[level.index] = currentValue;\n    }\n  }\n\n  nextLevel() {\n    let currentLevel = this.currentLevel;\n    let level = this.levels[currentLevel];\n    const value = level.items[level.index];\n    level.items[level.index] = 0xff;\n    currentLevel--;\n    if (currentLevel < 0) {\n      return false;\n    }\n\n    this.currentLevel = currentLevel;\n    level = this.levels[currentLevel];\n    level.items[level.index] = value;\n    return true;\n  }\n}\n\n// Section D. Coefficient bit modeling\nconst BitModel = (function BitModelClosure() {\n  const UNIFORM_CONTEXT = 17;\n  const RUNLENGTH_CONTEXT = 18;\n  // Table D-1\n  // The index is binary presentation: 0dddvvhh, ddd - sum of Di (0..4),\n  // vv - sum of Vi (0..2), and hh - sum of Hi (0..2)\n  const LLAndLHContextsLabel = new Uint8Array([\n    0, 5, 8, 0, 3, 7, 8, 0, 4, 7, 8, 0, 0, 0, 0, 0, 1, 6, 8, 0, 3, 7, 8, 0, 4,\n    7, 8, 0, 0, 0, 0, 0, 2, 6, 8, 0, 3, 7, 8, 0, 4, 7, 8, 0, 0, 0, 0, 0, 2, 6,\n    8, 0, 3, 7, 8, 0, 4, 7, 8, 0, 0, 0, 0, 0, 2, 6, 8, 0, 3, 7, 8, 0, 4, 7, 8,\n  ]);\n  const HLContextLabel = new Uint8Array([\n    0, 3, 4, 0, 5, 7, 7, 0, 8, 8, 8, 0, 0, 0, 0, 0, 1, 3, 4, 0, 6, 7, 7, 0, 8,\n    8, 8, 0, 0, 0, 0, 0, 2, 3, 4, 0, 6, 7, 7, 0, 8, 8, 8, 0, 0, 0, 0, 0, 2, 3,\n    4, 0, 6, 7, 7, 0, 8, 8, 8, 0, 0, 0, 0, 0, 2, 3, 4, 0, 6, 7, 7, 0, 8, 8, 8,\n  ]);\n  const HHContextLabel = new Uint8Array([\n    0, 1, 2, 0, 1, 2, 2, 0, 2, 2, 2, 0, 0, 0, 0, 0, 3, 4, 5, 0, 4, 5, 5, 0, 5,\n    5, 5, 0, 0, 0, 0, 0, 6, 7, 7, 0, 7, 7, 7, 0, 7, 7, 7, 0, 0, 0, 0, 0, 8, 8,\n    8, 0, 8, 8, 8, 0, 8, 8, 8, 0, 0, 0, 0, 0, 8, 8, 8, 0, 8, 8, 8, 0, 8, 8, 8,\n  ]);\n\n  // eslint-disable-next-line no-shadow\n  class BitModel {\n    constructor(width, height, subband, zeroBitPlanes, mb) {\n      this.width = width;\n      this.height = height;\n\n      let contextLabelTable;\n      if (subband === \"HH\") {\n        contextLabelTable = HHContextLabel;\n      } else if (subband === \"HL\") {\n        contextLabelTable = HLContextLabel;\n      } else {\n        contextLabelTable = LLAndLHContextsLabel;\n      }\n      this.contextLabelTable = contextLabelTable;\n\n      const coefficientCount = width * height;\n\n      // coefficients outside the encoding region treated as insignificant\n      // add border state cells for significanceState\n      this.neighborsSignificance = new Uint8Array(coefficientCount);\n      this.coefficentsSign = new Uint8Array(coefficientCount);\n      let coefficentsMagnitude;\n      if (mb > 14) {\n        coefficentsMagnitude = new Uint32Array(coefficientCount);\n      } else if (mb > 6) {\n        coefficentsMagnitude = new Uint16Array(coefficientCount);\n      } else {\n        coefficentsMagnitude = new Uint8Array(coefficientCount);\n      }\n      this.coefficentsMagnitude = coefficentsMagnitude;\n      this.processingFlags = new Uint8Array(coefficientCount);\n\n      const bitsDecoded = new Uint8Array(coefficientCount);\n      if (zeroBitPlanes !== 0) {\n        for (let i = 0; i < coefficientCount; i++) {\n          bitsDecoded[i] = zeroBitPlanes;\n        }\n      }\n      this.bitsDecoded = bitsDecoded;\n\n      this.reset();\n    }\n\n    setDecoder(decoder) {\n      this.decoder = decoder;\n    }\n\n    reset() {\n      // We have 17 contexts that are accessed via context labels,\n      // plus the uniform and runlength context.\n      this.contexts = new Int8Array(19);\n\n      // Contexts are packed into 1 byte:\n      // highest 7 bits carry the index, lowest bit carries mps\n      this.contexts[0] = (4 << 1) | 0;\n      this.contexts[UNIFORM_CONTEXT] = (46 << 1) | 0;\n      this.contexts[RUNLENGTH_CONTEXT] = (3 << 1) | 0;\n    }\n\n    setNeighborsSignificance(row, column, index) {\n      const neighborsSignificance = this.neighborsSignificance;\n      const width = this.width,\n        height = this.height;\n      const left = column > 0;\n      const right = column + 1 < width;\n      let i;\n\n      if (row > 0) {\n        i = index - width;\n        if (left) {\n          neighborsSignificance[i - 1] += 0x10;\n        }\n        if (right) {\n          neighborsSignificance[i + 1] += 0x10;\n        }\n        neighborsSignificance[i] += 0x04;\n      }\n\n      if (row + 1 < height) {\n        i = index + width;\n        if (left) {\n          neighborsSignificance[i - 1] += 0x10;\n        }\n        if (right) {\n          neighborsSignificance[i + 1] += 0x10;\n        }\n        neighborsSignificance[i] += 0x04;\n      }\n\n      if (left) {\n        neighborsSignificance[index - 1] += 0x01;\n      }\n      if (right) {\n        neighborsSignificance[index + 1] += 0x01;\n      }\n      neighborsSignificance[index] |= 0x80;\n    }\n\n    runSignificancePropagationPass() {\n      const decoder = this.decoder;\n      const width = this.width,\n        height = this.height;\n      const coefficentsMagnitude = this.coefficentsMagnitude;\n      const coefficentsSign = this.coefficentsSign;\n      const neighborsSignificance = this.neighborsSignificance;\n      const processingFlags = this.processingFlags;\n      const contexts = this.contexts;\n      const labels = this.contextLabelTable;\n      const bitsDecoded = this.bitsDecoded;\n      const processedInverseMask = ~1;\n      const processedMask = 1;\n      const firstMagnitudeBitMask = 2;\n\n      for (let i0 = 0; i0 < height; i0 += 4) {\n        for (let j = 0; j < width; j++) {\n          let index = i0 * width + j;\n          for (let i1 = 0; i1 < 4; i1++, index += width) {\n            const i = i0 + i1;\n            if (i >= height) {\n              break;\n            }\n            // clear processed flag first\n            processingFlags[index] &= processedInverseMask;\n\n            if (coefficentsMagnitude[index] || !neighborsSignificance[index]) {\n              continue;\n            }\n\n            const contextLabel = labels[neighborsSignificance[index]];\n            const decision = decoder.readBit(contexts, contextLabel);\n            if (decision) {\n              const sign = this.decodeSignBit(i, j, index);\n              coefficentsSign[index] = sign;\n              coefficentsMagnitude[index] = 1;\n              this.setNeighborsSignificance(i, j, index);\n              processingFlags[index] |= firstMagnitudeBitMask;\n            }\n            bitsDecoded[index]++;\n            processingFlags[index] |= processedMask;\n          }\n        }\n      }\n    }\n\n    decodeSignBit(row, column, index) {\n      const width = this.width,\n        height = this.height;\n      const coefficentsMagnitude = this.coefficentsMagnitude;\n      const coefficentsSign = this.coefficentsSign;\n      let contribution, sign0, sign1, significance1;\n      let contextLabel, decoded;\n\n      // calculate horizontal contribution\n      significance1 = column > 0 && coefficentsMagnitude[index - 1] !== 0;\n      if (column + 1 < width && coefficentsMagnitude[index + 1] !== 0) {\n        sign1 = coefficentsSign[index + 1];\n        if (significance1) {\n          sign0 = coefficentsSign[index - 1];\n          contribution = 1 - sign1 - sign0;\n        } else {\n          contribution = 1 - sign1 - sign1;\n        }\n      } else if (significance1) {\n        sign0 = coefficentsSign[index - 1];\n        contribution = 1 - sign0 - sign0;\n      } else {\n        contribution = 0;\n      }\n      const horizontalContribution = 3 * contribution;\n\n      // calculate vertical contribution and combine with the horizontal\n      significance1 = row > 0 && coefficentsMagnitude[index - width] !== 0;\n      if (row + 1 < height && coefficentsMagnitude[index + width] !== 0) {\n        sign1 = coefficentsSign[index + width];\n        if (significance1) {\n          sign0 = coefficentsSign[index - width];\n          contribution = 1 - sign1 - sign0 + horizontalContribution;\n        } else {\n          contribution = 1 - sign1 - sign1 + horizontalContribution;\n        }\n      } else if (significance1) {\n        sign0 = coefficentsSign[index - width];\n        contribution = 1 - sign0 - sign0 + horizontalContribution;\n      } else {\n        contribution = horizontalContribution;\n      }\n\n      if (contribution >= 0) {\n        contextLabel = 9 + contribution;\n        decoded = this.decoder.readBit(this.contexts, contextLabel);\n      } else {\n        contextLabel = 9 - contribution;\n        decoded = this.decoder.readBit(this.contexts, contextLabel) ^ 1;\n      }\n      return decoded;\n    }\n\n    runMagnitudeRefinementPass() {\n      const decoder = this.decoder;\n      const width = this.width,\n        height = this.height;\n      const coefficentsMagnitude = this.coefficentsMagnitude;\n      const neighborsSignificance = this.neighborsSignificance;\n      const contexts = this.contexts;\n      const bitsDecoded = this.bitsDecoded;\n      const processingFlags = this.processingFlags;\n      const processedMask = 1;\n      const firstMagnitudeBitMask = 2;\n      const length = width * height;\n      const width4 = width * 4;\n\n      for (let index0 = 0, indexNext; index0 < length; index0 = indexNext) {\n        indexNext = Math.min(length, index0 + width4);\n        for (let j = 0; j < width; j++) {\n          for (let index = index0 + j; index < indexNext; index += width) {\n            // significant but not those that have just become\n            if (\n              !coefficentsMagnitude[index] ||\n              (processingFlags[index] & processedMask) !== 0\n            ) {\n              continue;\n            }\n\n            let contextLabel = 16;\n            if ((processingFlags[index] & firstMagnitudeBitMask) !== 0) {\n              processingFlags[index] ^= firstMagnitudeBitMask;\n              // first refinement\n              const significance = neighborsSignificance[index] & 127;\n              contextLabel = significance === 0 ? 15 : 14;\n            }\n\n            const bit = decoder.readBit(contexts, contextLabel);\n            coefficentsMagnitude[index] =\n              (coefficentsMagnitude[index] << 1) | bit;\n            bitsDecoded[index]++;\n            processingFlags[index] |= processedMask;\n          }\n        }\n      }\n    }\n\n    runCleanupPass() {\n      const decoder = this.decoder;\n      const width = this.width,\n        height = this.height;\n      const neighborsSignificance = this.neighborsSignificance;\n      const coefficentsMagnitude = this.coefficentsMagnitude;\n      const coefficentsSign = this.coefficentsSign;\n      const contexts = this.contexts;\n      const labels = this.contextLabelTable;\n      const bitsDecoded = this.bitsDecoded;\n      const processingFlags = this.processingFlags;\n      const processedMask = 1;\n      const firstMagnitudeBitMask = 2;\n      const oneRowDown = width;\n      const twoRowsDown = width * 2;\n      const threeRowsDown = width * 3;\n      let iNext;\n      for (let i0 = 0; i0 < height; i0 = iNext) {\n        iNext = Math.min(i0 + 4, height);\n        const indexBase = i0 * width;\n        const checkAllEmpty = i0 + 3 < height;\n        for (let j = 0; j < width; j++) {\n          const index0 = indexBase + j;\n          // using the property: labels[neighborsSignificance[index]] === 0\n          // when neighborsSignificance[index] === 0\n          const allEmpty =\n            checkAllEmpty &&\n            processingFlags[index0] === 0 &&\n            processingFlags[index0 + oneRowDown] === 0 &&\n            processingFlags[index0 + twoRowsDown] === 0 &&\n            processingFlags[index0 + threeRowsDown] === 0 &&\n            neighborsSignificance[index0] === 0 &&\n            neighborsSignificance[index0 + oneRowDown] === 0 &&\n            neighborsSignificance[index0 + twoRowsDown] === 0 &&\n            neighborsSignificance[index0 + threeRowsDown] === 0;\n          let i1 = 0,\n            index = index0;\n          let i = i0,\n            sign;\n          if (allEmpty) {\n            const hasSignificantCoefficent = decoder.readBit(\n              contexts,\n              RUNLENGTH_CONTEXT\n            );\n            if (!hasSignificantCoefficent) {\n              bitsDecoded[index0]++;\n              bitsDecoded[index0 + oneRowDown]++;\n              bitsDecoded[index0 + twoRowsDown]++;\n              bitsDecoded[index0 + threeRowsDown]++;\n              continue; // next column\n            }\n            i1 =\n              (decoder.readBit(contexts, UNIFORM_CONTEXT) << 1) |\n              decoder.readBit(contexts, UNIFORM_CONTEXT);\n            if (i1 !== 0) {\n              i = i0 + i1;\n              index += i1 * width;\n            }\n\n            sign = this.decodeSignBit(i, j, index);\n            coefficentsSign[index] = sign;\n            coefficentsMagnitude[index] = 1;\n            this.setNeighborsSignificance(i, j, index);\n            processingFlags[index] |= firstMagnitudeBitMask;\n\n            index = index0;\n            for (let i2 = i0; i2 <= i; i2++, index += width) {\n              bitsDecoded[index]++;\n            }\n\n            i1++;\n          }\n          for (i = i0 + i1; i < iNext; i++, index += width) {\n            if (\n              coefficentsMagnitude[index] ||\n              (processingFlags[index] & processedMask) !== 0\n            ) {\n              continue;\n            }\n\n            const contextLabel = labels[neighborsSignificance[index]];\n            const decision = decoder.readBit(contexts, contextLabel);\n            if (decision === 1) {\n              sign = this.decodeSignBit(i, j, index);\n              coefficentsSign[index] = sign;\n              coefficentsMagnitude[index] = 1;\n              this.setNeighborsSignificance(i, j, index);\n              processingFlags[index] |= firstMagnitudeBitMask;\n            }\n            bitsDecoded[index]++;\n          }\n        }\n      }\n    }\n\n    checkSegmentationSymbol() {\n      const decoder = this.decoder;\n      const contexts = this.contexts;\n      const symbol =\n        (decoder.readBit(contexts, UNIFORM_CONTEXT) << 3) |\n        (decoder.readBit(contexts, UNIFORM_CONTEXT) << 2) |\n        (decoder.readBit(contexts, UNIFORM_CONTEXT) << 1) |\n        decoder.readBit(contexts, UNIFORM_CONTEXT);\n      if (symbol !== 0xa) {\n        throw new JpxError(\"Invalid segmentation symbol\");\n      }\n    }\n  }\n\n  return BitModel;\n})();\n\n// Section F, Discrete wavelet transformation\nclass Transform {\n  constructor() {\n    if (this.constructor === Transform) {\n      unreachable(\"Cannot initialize Transform.\");\n    }\n  }\n\n  calculate(subbands, u0, v0) {\n    let ll = subbands[0];\n    for (let i = 1, ii = subbands.length; i < ii; i++) {\n      ll = this.iterate(ll, subbands[i], u0, v0);\n    }\n    return ll;\n  }\n\n  extend(buffer, offset, size) {\n    // Section F.3.7 extending... using max extension of 4\n    let i1 = offset - 1,\n      j1 = offset + 1;\n    let i2 = offset + size - 2,\n      j2 = offset + size;\n    buffer[i1--] = buffer[j1++];\n    buffer[j2++] = buffer[i2--];\n    buffer[i1--] = buffer[j1++];\n    buffer[j2++] = buffer[i2--];\n    buffer[i1--] = buffer[j1++];\n    buffer[j2++] = buffer[i2--];\n    buffer[i1] = buffer[j1];\n    buffer[j2] = buffer[i2];\n  }\n\n  filter(x, offset, length) {\n    unreachable(\"Abstract method `filter` called\");\n  }\n\n  iterate(ll, hl_lh_hh, u0, v0) {\n    const llWidth = ll.width,\n      llHeight = ll.height;\n    let llItems = ll.items;\n    const width = hl_lh_hh.width;\n    const height = hl_lh_hh.height;\n    const items = hl_lh_hh.items;\n    let i, j, k, l, u, v;\n\n    // Interleave LL according to Section F.3.3\n    for (k = 0, i = 0; i < llHeight; i++) {\n      l = i * 2 * width;\n      for (j = 0; j < llWidth; j++, k++, l += 2) {\n        items[l] = llItems[k];\n      }\n    }\n    // The LL band is not needed anymore.\n    llItems = ll.items = null;\n\n    const bufferPadding = 4;\n    const rowBuffer = new Float32Array(width + 2 * bufferPadding);\n\n    // Section F.3.4 HOR_SR\n    if (width === 1) {\n      // if width = 1, when u0 even keep items as is, when odd divide by 2\n      if ((u0 & 1) !== 0) {\n        for (v = 0, k = 0; v < height; v++, k += width) {\n          items[k] *= 0.5;\n        }\n      }\n    } else {\n      for (v = 0, k = 0; v < height; v++, k += width) {\n        rowBuffer.set(items.subarray(k, k + width), bufferPadding);\n\n        this.extend(rowBuffer, bufferPadding, width);\n        this.filter(rowBuffer, bufferPadding, width);\n\n        items.set(rowBuffer.subarray(bufferPadding, bufferPadding + width), k);\n      }\n    }\n\n    // Accesses to the items array can take long, because it may not fit into\n    // CPU cache and has to be fetched from main memory. Since subsequent\n    // accesses to the items array are not local when reading columns, we\n    // have a cache miss every time. To reduce cache misses, get up to\n    // 'numBuffers' items at a time and store them into the individual\n    // buffers. The colBuffers should be small enough to fit into CPU cache.\n    let numBuffers = 16;\n    const colBuffers = [];\n    for (i = 0; i < numBuffers; i++) {\n      colBuffers.push(new Float32Array(height + 2 * bufferPadding));\n    }\n    let b,\n      currentBuffer = 0;\n    ll = bufferPadding + height;\n\n    // Section F.3.5 VER_SR\n    if (height === 1) {\n      // if height = 1, when v0 even keep items as is, when odd divide by 2\n      if ((v0 & 1) !== 0) {\n        for (u = 0; u < width; u++) {\n          items[u] *= 0.5;\n        }\n      }\n    } else {\n      for (u = 0; u < width; u++) {\n        // if we ran out of buffers, copy several image columns at once\n        if (currentBuffer === 0) {\n          numBuffers = Math.min(width - u, numBuffers);\n          for (k = u, l = bufferPadding; l < ll; k += width, l++) {\n            for (b = 0; b < numBuffers; b++) {\n              colBuffers[b][l] = items[k + b];\n            }\n          }\n          currentBuffer = numBuffers;\n        }\n\n        currentBuffer--;\n        const buffer = colBuffers[currentBuffer];\n        this.extend(buffer, bufferPadding, height);\n        this.filter(buffer, bufferPadding, height);\n\n        // If this is last buffer in this group of buffers, flush all buffers.\n        if (currentBuffer === 0) {\n          k = u - numBuffers + 1;\n          for (l = bufferPadding; l < ll; k += width, l++) {\n            for (b = 0; b < numBuffers; b++) {\n              items[k + b] = colBuffers[b][l];\n            }\n          }\n        }\n      }\n    }\n\n    return { width, height, items };\n  }\n}\n\n// Section 3.8.2 Irreversible 9-7 filter\nclass IrreversibleTransform extends Transform {\n  filter(x, offset, length) {\n    const len = length >> 1;\n    offset |= 0;\n    let j, n, current, next;\n\n    const alpha = -1.586134342059924;\n    const beta = -0.052980118572961;\n    const gamma = 0.882911075530934;\n    const delta = 0.443506852043971;\n    const K = 1.230174104914001;\n    const K_ = 1 / K;\n\n    // step 1 is combined with step 3\n\n    // step 2\n    j = offset - 3;\n    for (n = len + 4; n--; j += 2) {\n      x[j] *= K_;\n    }\n\n    // step 1 & 3\n    j = offset - 2;\n    current = delta * x[j - 1];\n    for (n = len + 3; n--; j += 2) {\n      next = delta * x[j + 1];\n      x[j] = K * x[j] - current - next;\n      if (n--) {\n        j += 2;\n        current = delta * x[j + 1];\n        x[j] = K * x[j] - current - next;\n      } else {\n        break;\n      }\n    }\n\n    // step 4\n    j = offset - 1;\n    current = gamma * x[j - 1];\n    for (n = len + 2; n--; j += 2) {\n      next = gamma * x[j + 1];\n      x[j] -= current + next;\n      if (n--) {\n        j += 2;\n        current = gamma * x[j + 1];\n        x[j] -= current + next;\n      } else {\n        break;\n      }\n    }\n\n    // step 5\n    j = offset;\n    current = beta * x[j - 1];\n    for (n = len + 1; n--; j += 2) {\n      next = beta * x[j + 1];\n      x[j] -= current + next;\n      if (n--) {\n        j += 2;\n        current = beta * x[j + 1];\n        x[j] -= current + next;\n      } else {\n        break;\n      }\n    }\n\n    // step 6\n    if (len !== 0) {\n      j = offset + 1;\n      current = alpha * x[j - 1];\n      for (n = len; n--; j += 2) {\n        next = alpha * x[j + 1];\n        x[j] -= current + next;\n        if (n--) {\n          j += 2;\n          current = alpha * x[j + 1];\n          x[j] -= current + next;\n        } else {\n          break;\n        }\n      }\n    }\n  }\n}\n\n// Section 3.8.1 Reversible 5-3 filter\nclass ReversibleTransform extends Transform {\n  filter(x, offset, length) {\n    const len = length >> 1;\n    offset |= 0;\n    let j, n;\n\n    for (j = offset, n = len + 1; n--; j += 2) {\n      x[j] -= (x[j - 1] + x[j + 1] + 2) >> 2;\n    }\n\n    for (j = offset + 1, n = len; n--; j += 2) {\n      x[j] += (x[j - 1] + x[j + 1]) >> 1;\n    }\n  }\n}\n\nexport { JpxImage };\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __w_pdfjs_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __w_pdfjs_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","__w_pdfjs_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","/* Copyright 2018 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { getVerbosityLevel, setVerbosityLevel } from \"./shared/util.js\";\nimport { Jbig2Image } from \"./core/jbig2.js\";\nimport { JpegImage } from \"./core/jpg.js\";\nimport { JpxImage } from \"./core/jpx.js\";\n\n// To ensure that the standalone PDF.js image decoders have the same\n// browser/environment compatibility as the regular PDF.js library,\n// the standard set of polyfills are thus included in this build as well.\n//\n// Given that the (current) image decoders don't use all of the features\n// of the complete PDF.js library, e.g. they are completely synchronous,\n// some of the larger polyfills are thus unnecessary.\n//\n// In an attempt to reduce the size of the standalone PDF.js image decoders,\n// the following polyfills are currently being excluded:\n//  - ReadableStream\n//  - Promise\n//  - URL\n\n// eslint-disable-next-line no-unused-vars\nconst pdfjsVersion = PDFJSDev.eval(\"BUNDLE_VERSION\");\n// eslint-disable-next-line no-unused-vars\nconst pdfjsBuild = PDFJSDev.eval(\"BUNDLE_BUILD\");\n\nexport {\n  getVerbosityLevel,\n  Jbig2Image,\n  JpegImage,\n  JpxImage,\n  setVerbosityLevel,\n};\n"],"names":["IDENTITY_MATRIX","FONT_IDENTITY_MATRIX","RenderingIntentFlag","ANY","DISPLAY","PRINT","ANNOTATIONS_FORMS","ANNOTATIONS_STORAGE","ANNOTATIONS_DISABLE","OPLIST","AnnotationMode","DISABLE","ENABLE","ENABLE_FORMS","ENABLE_STORAGE","PermissionFlag","MODIFY_CONTENTS","COPY","MODIFY_ANNOTATIONS","FILL_INTERACTIVE_FORMS","COPY_FOR_ACCESSIBILITY","ASSEMBLE","PRINT_HIGH_QUALITY","TextRenderingMode","FILL","STROKE","FILL_STROKE","INVISIBLE","FILL_ADD_TO_PATH","STROKE_ADD_TO_PATH","FILL_STROKE_ADD_TO_PATH","ADD_TO_PATH","FILL_STROKE_MASK","ADD_TO_PATH_FLAG","ImageKind","GRAYSCALE_1BPP","RGB_24BPP","RGBA_32BPP","AnnotationType","TEXT","LINK","FREETEXT","LINE","SQUARE","CIRCLE","POLYGON","POLYLINE","HIGHLIGHT","UNDERLINE","SQUIGGLY","STRIKEOUT","STAMP","CARET","INK","POPUP","FILEATTACHMENT","SOUND","MOVIE","WIDGET","SCREEN","PRINTERMARK","TRAPNET","WATERMARK","THREED","REDACT","AnnotationStateModelType","MARKED","REVIEW","AnnotationMarkedState","UNMARKED","AnnotationReviewState","ACCEPTED","REJECTED","CANCELLED","COMPLETED","NONE","AnnotationReplyType","GROUP","REPLY","AnnotationFlag","HIDDEN","NOZOOM","NOROTATE","NOVIEW","READONLY","LOCKED","TOGGLENOVIEW","LOCKEDCONTENTS","AnnotationFieldFlag","REQUIRED","NOEXPORT","MULTILINE","PASSWORD","NOTOGGLETOOFF","RADIO","PUSHBUTTON","COMBO","EDIT","SORT","FILESELECT","MULTISELECT","DONOTSPELLCHECK","DONOTSCROLL","COMB","RICHTEXT","RADIOSINUNISON","COMMITONSELCHANGE","AnnotationBorderStyleType","SOLID","DASHED","BEVELED","INSET","AnnotationActionEventType","E","X","D","U","Fo","Bl","PO","PC","PV","PI","K","F","V","C","DocumentActionEventType","WC","WS","DS","WP","DP","PageActionEventType","O","StreamType","UNKNOWN","FLATE","LZW","DCT","JPX","JBIG","A85","AHX","CCF","RLX","FontType","TYPE1","TYPE1STANDARD","TYPE1C","CIDFONTTYPE0","CIDFONTTYPE0C","TRUETYPE","CIDFONTTYPE2","TYPE3","OPENTYPE","TYPE0","MMTYPE1","VerbosityLevel","ERRORS","WARNINGS","INFOS","CMapCompressionType","BINARY","STREAM","OPS","dependency","setLineWidth","setLineCap","setLineJoin","setMiterLimit","setDash","setRenderingIntent","setFlatness","setGState","save","restore","transform","moveTo","lineTo","curveTo","curveTo2","curveTo3","closePath","rectangle","stroke","closeStroke","fill","eoFill","fillStroke","eoFillStroke","closeFillStroke","closeEOFillStroke","endPath","clip","eoClip","beginText","endText","setCharSpacing","setWordSpacing","setHScale","setLeading","setFont","setTextRenderingMode","setTextRise","moveText","setLeadingMoveText","setTextMatrix","nextLine","showText","showSpacedText","nextLineShowText","nextLineSetSpacingShowText","setCharWidth","setCharWidthAndBounds","setStrokeColorSpace","setFillColorSpace","setStrokeColor","setStrokeColorN","setFillColor","setFillColorN","setStrokeGray","setFillGray","setStrokeRGBColor","setFillRGBColor","setStrokeCMYKColor","setFillCMYKColor","shadingFill","beginInlineImage","beginImageData","endInlineImage","paintXObject","markPoint","markPointProps","beginMarkedContent","beginMarkedContentProps","endMarkedContent","beginCompat","endCompat","paintFormXObjectBegin","paintFormXObjectEnd","beginGroup","endGroup","beginAnnotations","endAnnotations","beginAnnotation","endAnnotation","paintJpegXObject","paintImageMaskXObject","paintImageMaskXObjectGroup","paintImageXObject","paintInlineImageXObject","paintInlineImageXObjectGroup","paintImageXObjectRepeat","paintImageMaskXObjectRepeat","paintSolidColorImageMask","constructPath","UNSUPPORTED_FEATURES","unknown","forms","javaScript","signatures","smask","shadingPattern","font","errorTilingPattern","errorExtGState","errorXObject","errorFontLoadType3","errorFontState","errorFontMissing","errorFontTranslate","errorColorSpace","errorOperatorList","errorFontToUnicode","errorFontLoadNative","errorFontBuildPath","errorFontGetPath","errorMarkedContent","errorContentSubStream","PasswordResponses","NEED_PASSWORD","INCORRECT_PASSWORD","verbosity","Number","console","unreachable","base","other","url","baseUrl","options","dots","stringToUTF8String","absoluteUrl","_isValidProtocol","Object","value","enumerable","configurable","writable","BaseException","constructor","NullCharactersRegExp","warn","str","assert","bytes","length","MAX_ARGUMENT_COUNT","String","strBuf","i","chunkEnd","Math","chunk","arr","resultLength","arrayByteLength","pos","data","item","stringToBytes","itemLength","obj","buffer8","view32","IsLittleEndianCached","shadow","isLittleEndian","IsEvalSupportedCached","isEvalSupported","hexNumbers","Array","n","m1","m2","xt","p","m","yt","d","p1","Util","p2","r","p3","p4","v","transpose","a","b","c","first","second","sx","sy","rect","orderedX","rect1","rect2","orderedY","result","PDFStringTranslateTable","code","match","buf","ii","char","decodeURIComponent","escape","unescape","encodeURIComponent","arr1","arr2","date","buffer","capability","isSettled","get","resolve","reject","contentType","forceDataSchema","URL","type","digits","b1","b2","b3","d1","d2","d3","d4","globalThis","require","Buffer","isNodeJS","process","module","exports","$","global","getOwnPropertyDescriptor","f","createNonEnumerableProperty","redefine","setGlobal","copyConstructorProperties","isForced","source","TARGET","target","GLOBAL","STATIC","stat","FORCED","key","targetProperty","sourceProperty","descriptor","prototype","noTargetGet","forced","undefined","sham","check","it","window","self","Function","DESCRIPTORS","propertyIsEnumerableModule","createPropertyDescriptor","toIndexedObject","toPropertyKey","has","IE8_DOM_DEFINE","$getOwnPropertyDescriptor","P","error","call","fails","defineProperty","exec","$propertyIsEnumerable","propertyIsEnumerable","NASHORN_BUG","bitmap","IndexedObject","requireObjectCoercible","classof","split","toString","slice","TypeError","toPrimitive","isSymbol","argument","isObject","ordinaryToPrimitive","wellKnownSymbol","TO_PRIMITIVE","input","pref","exoticToPrim","getBuiltIn","USE_SYMBOL_AS_UID","$Symbol","aFunction","variable","namespace","method","arguments","NATIVE_SYMBOL","Symbol","iterator","V8_VERSION","getOwnPropertySymbols","symbol","userAgent","Deno","versions","version","v8","fn","val","valueOf","shared","uid","WellKnownSymbolsStore","createWellKnownSymbol","withoutSetter","name","IS_PURE","store","push","mode","copyright","SHARED","toObject","hasOwnProperty","hasOwn","id","postfix","random","createElement","document","EXISTS","definePropertyModule","object","anObject","$defineProperty","Attributes","inspectSource","InternalStateModule","getInternalState","enforceInternalState","enforce","TEMPLATE","unsafe","simple","state","join","functionToString","NATIVE_WEAK_MAP","objectHas","sharedKey","hiddenKeys","OBJECT_ALREADY_INITIALIZED","WeakMap","set","getterFor","TYPE","wmget","wmhas","wmset","metadata","facade","STATE","test","keys","ownKeys","getOwnPropertyDescriptorModule","getOwnPropertyNamesModule","getOwnPropertySymbolsModule","concat","internalObjectKeys","enumBugKeys","getOwnPropertyNames","indexOf","names","toLength","toAbsoluteIndex","createMethod","IS_INCLUDES","$this","el","fromIndex","index","includes","toInteger","min","ceil","floor","isNaN","max","integer","replacement","feature","detection","normalize","POLYFILL","NATIVE","string","replace","toLowerCase","factory","define","CSSMatrix","args","len","prototypeAccessors","isIdentity","is2D","CSSMatrixProto","radX","rx","radY","ry","radZ","rz","cosx","sinx","cosy","siny","cosz","sinz","cycz","cysz","sxsy","cxcz","radA","angle","sinA","cosA","sinA2","x","y","z","Y","Z","x2","y2","z2","m11","m12","m21","m22","t","m13","m14","m23","m24","m31","m32","m33","m34","m41","m42","m43","m44","m11$1","m12$1","m21$1","m22$1","m14$1","m24$1","feedFromArray","values","Multiply","Translate","Scale","RX","RY","RZ","Rotate","RotateAxisAngle","SkewX","SkewY","identity","M","w","path","fromEntries","addToUnscopables","Iterators","defineIterator","ARRAY_ITERATOR","setInternalState","iterated","kind","done","Arguments","create","UNSCOPABLES","ArrayPrototype","defineProperties","html","documentCreateElement","GT","LT","PROTOTYPE","SCRIPT","IE_PROTO","EmptyConstructor","scriptTag","content","NullProtoObjectViaActiveX","activeXDocument","write","close","temp","parentWindow","NullProtoObjectViaIFrame","iframe","JS","iframeDocument","style","display","appendChild","src","contentWindow","open","NullProtoObject","ActiveXObject","domain","Properties","objectKeys","createIteratorConstructor","getPrototypeOf","setPrototypeOf","setToStringTag","IteratorsCore","IteratorPrototype","BUGGY_SAFARI_ITERATORS","ITERATOR","KEYS","VALUES","ENTRIES","returnThis","Iterable","NAME","IteratorConstructor","next","DEFAULT","IS_SET","getIterationMethod","KIND","defaultIterator","IterablePrototype","entries","TO_STRING_TAG","INCORRECT_VALUES_NAME","nativeIterator","anyNativeIterator","CurrentIteratorPrototype","methods","KEY","proto","PrototypeOfArrayIteratorPrototype","arrayIterator","NEW_ITERATOR_PROTOTYPE","CORRECT_PROTOTYPE_GETTER","ObjectPrototype","TAG","aPossiblePrototype","CORRECT_SETTER","setter","__proto__","iterate","createProperty","iterable","k","AS_ENTRIES","isArrayIteratorMethod","bind","getIterator","getIteratorMethod","iteratorClose","Result","stopped","unboundFunction","that","IS_ITERATOR","INTERRUPTED","iterFn","step","stop","condition","callFn","apply","usingIterator","iteratorMethod","TO_STRING_TAG_SUPPORT","classofRaw","CORRECT_ARGUMENTS","tryGet","tag","callee","innerResult","innerError","propertyKey","getContexts","decoder","cache","contexts","contextCache","prev","bit","sign","readBits","codeLength","SegmentTypes","CodingTemplates","RefinementTemplates","coding","reference","ReusedContexts","RefinementReusedContexts","decodingContext","OLD_PIXEL_MASK","row","row1","row2","contextLabel","j","pixel","decodeMMRBitmap","templateIndex","at","decodeBitmapTemplate0","useskip","template","templateLength","templateX","templateY","changingTemplateEntries","reuseMask","minX","maxX","minY","changingEntriesLength","changingTemplateX","changingTemplateY","changingTemplateBit","sbb_left","sbb_top","sbb_right","width","pseudoPixelContext","ltp","sltp","skip","i0","j0","shift","codingTemplate","codingTemplateLength","codingTemplateX","codingTemplateY","referenceTemplate","referenceTemplateLength","referenceTemplateX","referenceTemplateY","referenceWidth","referenceBitmap","referenceHeight","huffman","newSymbols","currentHeight","symbolCodeLength","log2","symbols","tableB1","getStandardTable","symbolWidths","deltaHeight","huffmanTables","decodeInteger","currentWidth","totalWidth","firstSymbol","deltaWidth","numberOfInstances","decodeTextRegion","symbolId","decodeIAID","rdx","rdy","decodeRefinement","decodeBitmap","bitmapSize","huffmanInput","collectiveBitmap","readUncompressedBitmap","originalEnd","bitmapEnd","numberOfSymbolsDecoded","xMin","xMax","bitmapWidth","symbolBitmap","exportedSymbols","flags","currentFlag","totalSymbolsLength","runLength","stripT","firstS","deltaT","deltaFirstS","currentS","currentT","stripSize","applyRefinement","refinement","inputSymbols","symbolWidth","symbolHeight","rdw","rdh","offsetT","offsetS","s2","t2","symbolRow","maxWidth","deltaS","collectiveWidth","patterns","patternBitmap","patternWidth","combinationOperator","regionBitmap","numberOfPatterns","pattern0","patternHeight","bitsPerValue","grayScaleBitPlanes","mmrInput","mg","ng","patternIndex","gridOffsetX","gridOffsetY","regionRow","patternRow","regionX","regionY","segmentHeader","readUint32","start","segmentType","pageAssociationFieldSize","referredFlags","referredToCount","retainBits","position","referredToSegmentNumberSize","referredTo","number","readUint16","genericRegionInfo","readRegionSegmentInformation","genericRegionSegmentFlags","genericRegionMmr","searchPatternLength","searchPattern","segments","readSegmentHeader","segment","header","height","RegionSegmentInformationFieldLength","end","dictionary","dictionaryFlags","atLength","readInt8","textRegion","textRegionSegmentFlags","textRegionHuffmanFlags","patternDictionary","patternDictionaryFlags","halftoneRegion","halftoneRegionFlags","genericRegion","pageInfo","resolutionX","resolutionY","pageSegmentFlags","callbackName","visitor","processSegment","chunks","readSegments","processSegments","bitPacked","imgData","q","mask","onPageInformation","rowSize","info","drawBitmap","regionInfo","mask0","offset0","offset","onImmediateGenericRegion","region","onImmediateLosslessGenericRegion","onSymbolDictionary","getSymbolDictionaryHuffmanTables","referredSegments","referredSymbols","decodeSymbolDictionary","onImmediateTextRegion","getTextRegionHuffmanTables","onImmediateLosslessTextRegion","onPatternDictionary","decodePatternDictionary","onImmediateHalftoneRegion","decodeHalftoneRegion","onImmediateLosslessHalftoneRegion","onTables","customTables","decodeTablesSegment","lineData","line","buildTree","node","decodeNode","htOffset","reader","lines","decode","assignPrefixCodes","linesLength","prefixLengthMax","histogram","currentLength","firstCode","currentCode","currentTemp","lowestValue","highestValue","prefixSizeBits","rangeSizeBits","currentRangeLow","prefixLength","rangeLength","standardTablesCache","table","readBit","numBits","byteAlign","currentIndex","codes","runCodesTable","repeatedLength","numberOfRepeats","symbolIDTable","customIndex","tableFirstS","getCustomHuffmanTable","tableDeltaS","tableDeltaT","tableDeltaHeight","tableDeltaWidth","tableBitmapSize","tableAggregateInstances","params","Columns","Rows","BlackIs1","EndOfBlock","eof","currentByte","endOfBlock","lookForEOFLimit","parseChunks","parseJbig2Chunks","parse","parseJbig2","lookup","initializer","getArray","stopWhenFound","visited","dict","ROMAN_NUMBER_MAP","lowerCase","romanBuf","romanStr","ch","positionPattern","component","parseInt","parent","isRef","parents","entry","xref","_collectJS","isName","js","isStream","stringToPDFString","list","actions","additionalActionsDicts","additionalActions","action","eventType","actionDict","objectSize","XMLEntities","entity","DEFAULT_CSS_FONT_OBLIQUE","DEFAULT_CSS_FONT_WEIGHT","CSS_FONT_WEIGHT_VALUES","fontFamily","weight","fontWeight","cssFontInfo","parseFloat","italicAngle","URL_OPEN_METHODS","regex","jsUrl","newWindow","EOF","Name","nameCache","nameValue","Cmd","cmdCache","cmdValue","nonSerializable","assignXref","key2","key3","getRaw","getKeys","getRawValues","forEach","callback","emptyDict","mergeSubDicts","mergedDict","properties","property","subDict","Dict","Ref","refCache","gen","refValue","ref","put","remove","clear","putAlias","v1","v2","runtime","Op","iteratorSymbol","asyncIteratorSymbol","toStringTagSymbol","protoGenerator","outerFn","generator","context","tryLocsList","makeInvokeMethod","arg","GenStateSuspendedStart","GenStateSuspendedYield","GenStateExecuting","GenStateCompleted","ContinueSentinel","getProto","NativeIteratorPrototype","Gp","GeneratorFunctionPrototype","Generator","GeneratorFunction","ctor","genFun","__await","record","tryCatch","invoke","previousPromise","callInvokeWithMethodAndArg","defineIteratorMethods","AsyncIterator","PromiseImpl","iter","wrap","doneResult","delegate","delegateResult","maybeInvokeDelegate","tryLoc","locs","Context","reset","rootEntry","rootRecord","dispatchException","handle","hasCatch","hasFinally","abrupt","finallyEntry","complete","finish","resetTryEntry","thrown","delegateYield","resultName","nextLoc","regeneratorRuntime","getByte","getBytes","forceClamped","peekByte","peekedByte","peekBytes","getUint16","b0","getInt32","getByteRange","getString","bytesToString","moveStart","makeSubStream","getBaseStreams","QeTable","qe","nmps","nlps","switchFlag","byteIn","bp","cx_index","cx_mps","qeTableIcx","qeIcx","ccittEOL","ccittEOF","twoDimPass","twoDimHoriz","twoDimVert0","twoDimVertR1","twoDimVertL1","twoDimVertR2","twoDimVertL2","twoDimVertR3","twoDimVertL3","twoDimTable","whiteTable1","whiteTable2","blackTable1","blackTable2","blackTable3","eoblock","code1","readNextChar","refLine","codingLine","columns","refPos","blackPixels","code2","code3","gotEOL","bits","_addPixels","codingPos","a1","_addPixelsNeg","_findTableCode","limitValue","limit","_getTwoDimCode","_getWhiteCode","_getBlackCode","_lookBits","_eatBits","dctZigZag","dctCos1","dctSin1","dctCos3","dctSin3","dctCos6","dctSin6","dctSqrt2","dctSqrt1d2","codeLengths","children","parseDNLMarker","mcusPerLine","frame","progressive","startOffset","bitsData","bitsCount","nextByte","scanLines","maybeScanLines","blockRow","receive","decodeHuffman","diff","receiveAndExtend","rs","s","blockOffset","eobrun","e","successiveACState","offsetZ","successiveACNextValue","mcuRow","mcu","mcuCol","blockCol","getBlockBufferOffset","componentsLength","components","spectralStart","decodeFn","successivePrev","mcuExpected","mcuToRead","resetInterval","decodeBlock","h","decodeMcu","fileMarker","findNextFileMarker","partialMsg","qt","blockData","p0","blockBufferOffset","p5","p6","p7","v0","v3","v4","v7","v5","v6","col","blocksPerLine","blocksPerColumn","computationBuffer","quantizeAndInverse","startPos","maxPos","newPos","currentPos","currentMarker","invalid","marker","newMarker","decodeTransform","colorTransform","dnlScanLines","endOffset","array","mcusPerColumn","blocksPerLineForMcu","blocksPerColumnForMcu","blocksBufferSize","jfif","adobe","numSOSMarkers","quantizationTables","huffmanTablesAC","huffmanTablesDC","l","appData","readDataBlock","major","minor","densityUnits","xDensity","yDensity","thumbWidth","thumbHeight","thumbData","flags0","flags1","transformCode","quantizationTablesLength","quantizationTablesEnd","quantizationTableSpec","tableData","sofScanLines","componentsCount","maxH","maxV","componentId","qId","quantizationId","quantizationTable","prepareComponents","huffmanLength","huffmanTableSpec","codeLengthSum","huffmanValues","buildHuffmanTable","selectorsCount","componentIndex","tableSpec","spectralEnd","successiveApproximation","processed","decodeScan","ex","nextFileMarker","output","buildComponentData","scaleX","scaleY","_getLinearizedBlockData","isSourcePDF","numComponents","dataLength","xScaleBlockOffset","mask3LSB","componentScaleX","componentScaleY","blocksPerScanline","lastComponentScaleX","_convertYccToRgb","Cb","Cr","_convertYcckToRgb","_convertYcckToCmyk","_convertCmykToRgb","getData","forceRGB","rgbData","grayColor","SubbandsGainLog2","LL","LH","HL","HH","head","headerSize","lbox","tbox","jumpDataLength","colorspace","headerType","parseImageProperties","newByte","stream","oldByte","Xsiz","Ysiz","XOsiz","YOsiz","Csiz","parseCodestream","doNotRecover","sqcd","spqcds","spqcdSize","scalarExpounded","tile","siz","precision","isSigned","XRsiz","YRsiz","calculateComponentDimensions","calculateTileGrids","qcd","spqcd","qcc","cqcc","cod","scod","blockStyle","precinctsSizes","precinctsSize","PPx","PPy","unsupported","initializeTile","buildPackets","parseTilePackets","transformComponents","tiles","numXtiles","numYtiles","jj","tileComponent","codOrCoc","precinctWidth","dimensions","precinctHeight","isZeroRes","resolution","precinctWidthInSubband","precinctHeightInSubband","numprecinctswide","numprecinctshigh","numprecincts","xcb_","ycb_","codeblockWidth","codeblockHeight","cbx0","subband","cby0","cbx1","cby1","precinctParameters","codeblocks","precincts","codeblock","cbx","cby","tbx0","tby0","tbx1","tby1","pi","pj","precinctNumber","precinct","cbxMin","cbyMin","cbxMax","cbyMax","numcodeblockwide","numcodeblockhigh","precinctCodeblocks","subbands","layerNumber","tileIndex","layersCount","maxDecompositionLevelsCount","packet","createPacket","maxNumPrecinctsInLevel","maxNumPrecincts","resolutions","getPrecinctSizesInImageScale","precinctsIterationSizes","px","py","decompositionLevelsCount","sizeInImageScale","getPrecinctIndexIfExist","posX","pxIndex","precinctIterationSizes","posY","pyIndex","startPrecinctRowIndex","minWidth","minHeight","maxNumWide","maxNumHigh","sizePerComponent","sizePerResolution","minWidthCurrentComponent","minHeightCurrentComponent","maxNumWideCurrentComponent","maxNumHighCurrentComponent","scale","widthCurrentResolution","heightCurrentResolution","blocksDimensions","getBlocksDimensions","buildPrecincts","buildCodeblocks","bscale","resolutionSubbands","progressionOrder","bufferSize","skipNextBit","skipBytes","sopMarkerUsed","ephMarkerUsed","packetsIterator","alignToByte","skipMarkerIfEqual","queue","codeblockColumn","codeblockRow","codeblockIncluded","firstTimeInclusion","valueReady","zeroBitPlanesTree","inclusionTree","codingpasses","readCodingpasses","codingpassesLog2","codedDataLength","packetItem","x0","y0","right","bottom","blockWidth","blockHeight","bitModel","currentCodingpassType","totalLength","dataItem","encodedData","magnitude","bitsDecoded","magnitudeCorrection","reversible","nb","interleave","levelOffset","coefficients","mb","codingStyleParameters","quantizationParameters","guardBits","segmentationSymbolUsed","subbandCoefficients","mu","epsilon","gainLog2","delta","copyCoefficients","items","left","top","resultImages","transformedTiles","transformTile","tile0","out","y1","fourComponents","y0items","y1items","y2items","y3items","component0","alpha01","g","qcdOrQcc","levelsLength","level","currentLevel","incrementValue","nextLevel","stopValue","propagateValues","levelIndex","currentValue","BitModel","UNIFORM_CONTEXT","RUNLENGTH_CONTEXT","LLAndLHContextsLabel","HLContextLabel","HHContextLabel","contextLabelTable","coefficientCount","coefficentsMagnitude","zeroBitPlanes","setDecoder","setNeighborsSignificance","neighborsSignificance","column","runSignificancePropagationPass","coefficentsSign","processingFlags","labels","processedInverseMask","processedMask","firstMagnitudeBitMask","i1","decision","decodeSignBit","significance1","sign1","sign0","contribution","horizontalContribution","decoded","runMagnitudeRefinementPass","width4","index0","indexNext","significance","runCleanupPass","oneRowDown","twoRowsDown","threeRowsDown","iNext","indexBase","checkAllEmpty","allEmpty","hasSignificantCoefficent","i2","checkSegmentationSymbol","calculate","ll","extend","j1","j2","filter","llWidth","llHeight","llItems","hl_lh_hh","bufferPadding","rowBuffer","numBuffers","colBuffers","currentBuffer","u","alpha","beta","gamma","K_","current","pdfjsVersion","pdfjsBuild"],"sourceRoot":""}