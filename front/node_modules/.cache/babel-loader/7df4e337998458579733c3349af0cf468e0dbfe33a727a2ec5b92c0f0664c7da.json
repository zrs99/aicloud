{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createElementVNode as _createElementVNode, normalizeStyle as _normalizeStyle, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"pdf-viewer-container\"\n};\nconst _hoisted_2 = {\n  key: 0,\n  class: \"loading-indicator\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", {\n    class: \"pdf-scroll-container\",\n    ref: \"scrollContainer\",\n    onScroll: $setup.handleScroll\n  }, [_createElementVNode(\"div\", {\n    class: \"pdf-pages-container\",\n    style: _normalizeStyle({\n      height: $setup.totalHeight + 'px'\n    })\n  }, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.visiblePages, page => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: page.pageNumber,\n      class: \"pdf-page-container\",\n      style: _normalizeStyle({\n        top: page.offset + 'px',\n        height: page.height + 'px'\n      })\n    }, [_createElementVNode(\"canvas\", {\n      ref_for: true,\n      ref: el => $setup.setCanvasRef(el, page.pageNumber)\n    }, null, 512 /* NEED_PATCH */)], 4 /* STYLE */);\n  }), 128 /* KEYED_FRAGMENT */))], 4 /* STYLE */)], 544 /* NEED_HYDRATION, NEED_PATCH */), $setup.loading ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, \"加载中...\")) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createElementVNode","ref","onScroll","$setup","handleScroll","style","_normalizeStyle","height","totalHeight","_Fragment","_renderList","visiblePages","page","pageNumber","top","offset","ref_for","el","setCanvasRef","loading","_hoisted_2","_createCommentVNode"],"sources":["D:\\Study\\Code\\AICloud\\front\\src\\components\\socketTest.vue"],"sourcesContent":["<template>\r\n  <div class=\"pdf-viewer-container\">\r\n    <div class=\"pdf-scroll-container\" ref=\"scrollContainer\" @scroll=\"handleScroll\">\r\n      <div class=\"pdf-pages-container\" :style=\"{ height: totalHeight + 'px' }\">\r\n        <div\r\n          v-for=\"page in visiblePages\"\r\n          :key=\"page.pageNumber\"\r\n          class=\"pdf-page-container\"\r\n          :style=\"{ top: page.offset + 'px', height: page.height + 'px' }\"\r\n        >\r\n          <canvas :ref=\"el => setCanvasRef(el, page.pageNumber)\"></canvas>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div v-if=\"loading\" class=\"loading-indicator\">加载中...</div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n/* eslint-disable no-undef */\r\n</script>\r\n\r\n<script setup>\r\nimport { ref, onMounted, onUnmounted } from 'vue'\r\nimport * as pdfjsLib from 'pdfjs-dist'\r\n\r\nconst props = defineProps({\r\n  pdfUrl: {\r\n    type: String,\r\n    default: \"/IDKL.pdf\",\r\n    required: true\r\n  },\r\n  scale: {\r\n    type: Number,\r\n    default: 1.5\r\n  }\r\n})\r\n\r\n\r\n\r\nconst scrollContainer = ref(null)\r\nconst pageCanvases = ref([])\r\nconst renderTasks = new Map() // 用于跟踪渲染任务\r\nconst pdfDoc = ref(null)\r\nconst pageCount = ref(0)\r\nconst totalHeight = ref(0)\r\nconst pageHeights = ref([])\r\nconst pageOffsets = ref([])\r\nconst visiblePages = ref([])\r\nconst loading = ref(false)\r\nconst viewportHeight = ref(0)\r\nconst scrollPosition = ref(0)\r\n\r\n// PDF.js 配置\r\npdfjsLib.GlobalWorkerOptions.workerSrc =\r\n  'https://cdn.jsdelivr.net/npm/pdfjs-dist@3.4.120/build/pdf.worker.min.js'\r\n\r\n// Canvas 引用设置\r\nconst setCanvasRef = (el, pageNumber) => {\r\n  if (el) {\r\n    pageCanvases.value[pageNumber - 1] = el\r\n  }\r\n}\r\n\r\n// 加载PDF文档\r\nconst loadPDF = async () => {\r\n  loading.value = true\r\n  try {\r\n    const loadingTask = pdfjsLib.getDocument(props.pdfUrl)\r\n    pdfDoc.value = await loadingTask.promise\r\n    pageCount.value = pdfDoc.value.numPages\r\n\r\n    // 初始化数组\r\n    pageCanvases.value = new Array(pageCount.value).fill(null)\r\n\r\n    await calculatePageDimensions()\r\n    updateVisiblePages()\r\n  } catch (error) {\r\n    console.error('PDF加载失败:', error)\r\n  } finally {\r\n    loading.value = false\r\n  }\r\n}\r\n\r\n// 计算页面尺寸\r\nconst calculatePageDimensions = async () => {\r\n  pageHeights.value = []\r\n  pageOffsets.value = []\r\n  let currentOffset = 0\r\n\r\n  for (let i = 1; i <= pageCount.value; i++) {\r\n    const page = await pdfDoc.value.getPage(i)\r\n    const viewport = page.getViewport({ scale: props.scale })\r\n    const height = viewport.height\r\n\r\n    pageHeights.value.push(height)\r\n    pageOffsets.value.push(currentOffset)\r\n    currentOffset += height\r\n  }\r\n\r\n  totalHeight.value = currentOffset\r\n}\r\n\r\n// 渲染页面（带取消功能）\r\nconst renderPage = async (pageNumber) => {\r\n  if (!pdfDoc.value || pageNumber < 1 || pageNumber > pageCount.value) return\r\n\r\n  // 取消之前的渲染任务\r\n  if (renderTasks.has(pageNumber)) {\r\n    const oldTask = renderTasks.get(pageNumber)\r\n    oldTask.cancel()\r\n    renderTasks.delete(pageNumber)\r\n  }\r\n\r\n  const page = await pdfDoc.value.getPage(pageNumber)\r\n  const viewport = page.getViewport({ scale: props.scale })\r\n  const canvas = pageCanvases.value[pageNumber - 1]\r\n\r\n  if (!canvas) return\r\n\r\n  // 创建新渲染任务\r\n  const task = page.render({\r\n    canvasContext: canvas.getContext('2d'),\r\n    viewport: viewport\r\n  })\r\n  renderTasks.set(pageNumber, task)\r\n\r\n  try {\r\n    await task.promise\r\n  } catch (err) {\r\n    if (err.name !== 'RenderingCancelledException') {\r\n      console.error('页面渲染失败:', err)\r\n    }\r\n  } finally {\r\n    renderTasks.delete(pageNumber)\r\n  }\r\n}\r\n\r\n// 更新可见页面\r\nconst updateVisiblePages = () => {\r\n  if (!scrollContainer.value || pageHeights.value.length === 0) return\r\n\r\n  viewportHeight.value = scrollContainer.value.clientHeight\r\n  const scrollTop = scrollContainer.value.scrollTop\r\n  scrollPosition.value = scrollTop\r\n\r\n  const buffer = viewportHeight.value\r\n  const startY = Math.max(0, scrollTop - buffer)\r\n  const endY = scrollTop + viewportHeight.value + buffer\r\n\r\n  const newVisiblePages = []\r\n  for (let i = 0; i < pageCount.value; i++) {\r\n    const pageStart = pageOffsets.value[i]\r\n    const pageEnd = pageStart + pageHeights.value[i]\r\n\r\n    if (pageEnd > startY && pageStart < endY) {\r\n      newVisiblePages.push({\r\n        pageNumber: i + 1,\r\n        offset: pageOffsets.value[i],\r\n        height: pageHeights.value[i]\r\n      })\r\n    }\r\n  }\r\n\r\n  visiblePages.value = newVisiblePages\r\n\r\n  // 并行渲染可见页面\r\n  visiblePages.value.forEach(page => {\r\n    renderPage(page.pageNumber)\r\n  })\r\n}\r\n\r\n// 滚动处理\r\nconst handleScroll = () => {\r\n  requestAnimationFrame(updateVisiblePages)\r\n}\r\n\r\n// 窗口大小变化处理\r\nconst handleResize = () => {\r\n  if (pdfDoc.value) {\r\n    calculatePageDimensions().then(updateVisiblePages)\r\n  }\r\n}\r\n\r\n// 组件卸载时清理\r\nonUnmounted(() => {\r\n  // 取消所有渲染任务\r\n  renderTasks.forEach(task => task.cancel())\r\n  renderTasks.clear()\r\n\r\n  // 销毁PDF文档\r\n  if (pdfDoc.value) {\r\n    pdfDoc.value.destroy()\r\n    pdfDoc.value = null\r\n  }\r\n})\r\n\r\nonMounted(() => {\r\n  loadPDF()\r\n  window.addEventListener('resize', handleResize)\r\n})\r\n</script>\r\n\r\n<style scoped>\r\n/* 保持原有样式不变 */\r\n.pdf-viewer-container {\r\n  position: relative;\r\n  width: 100%;\r\n  height: 100vh;\r\n  overflow: hidden;\r\n}\r\n\r\n.pdf-scroll-container {\r\n  width: 100%;\r\n  height: 100%;\r\n  overflow-y: auto;\r\n  position: relative;\r\n}\r\n\r\n.pdf-pages-container {\r\n  position: relative;\r\n  width: 100%;\r\n}\r\n\r\n.pdf-page-container {\r\n  position: absolute;\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.pdf-page-container canvas {\r\n  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);\r\n}\r\n\r\n.loading-indicator {\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  background: rgba(0, 0, 0, 0.7);\r\n  color: white;\r\n  padding: 10px 20px;\r\n  border-radius: 5px;\r\n}\r\n</style>\r\n"],"mappings":";;EACOA,KAAK,EAAC;AAAsB;;EADnCC,GAAA;EAcwBD,KAAK,EAAC;;;uBAb5BE,mBAAA,CAcM,OAdNC,UAcM,GAbJC,mBAAA,CAWM;IAXDJ,KAAK,EAAC,sBAAsB;IAACK,GAAG,EAAC,iBAAiB;IAAEC,QAAM,EAAEC,MAAA,CAAAC;MAC/DJ,mBAAA,CASM;IATDJ,KAAK,EAAC,qBAAqB;IAAES,KAAK,EAH7CC,eAAA;MAAAC,MAAA,EAGyDJ,MAAA,CAAAK,WAAW;IAAA;yBAC5DV,mBAAA,CAOMW,SAAA,QAXdC,WAAA,CAKyBP,MAAA,CAAAQ,YAAY,EAApBC,IAAI;yBADbd,mBAAA,CAOM;MALHD,GAAG,EAAEe,IAAI,CAACC,UAAU;MACrBjB,KAAK,EAAC,oBAAoB;MACzBS,KAAK,EARhBC,eAAA;QAAAQ,GAAA,EAQyBF,IAAI,CAACG,MAAM;QAAAR,MAAA,EAAiBK,IAAI,CAACL,MAAM;MAAA;QAEtDP,mBAAA,CAAgE;MAV1EgB,OAAA;MAUmBf,GAAG,EAAEgB,EAAE,IAAId,MAAA,CAAAe,YAAY,CAACD,EAAE,EAAEL,IAAI,CAACC,UAAU;;2FAI/CV,MAAA,CAAAgB,OAAO,I,cAAlBrB,mBAAA,CAA0D,OAA1DsB,UAA0D,EAAZ,QAAM,KAdxDC,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}