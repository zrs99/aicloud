{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport VuePdfEmbed from 'vue-pdf-embed';\nimport { ref, onMounted, onUnmounted } from 'vue';\nexport default {\n  components: {\n    VuePdfEmbed\n  },\n  setup() {\n    // 左侧PDF配置\n    const leftPdfSource = ref('111.pdf');\n    const leftTotalPages = ref(0);\n    const leftVisiblePages = ref([1, 2, 3]);\n    const leftLastPageLoaded = ref(3);\n\n    // 右侧PDF配置\n    const rightPdfSource = ref('111_qs9p2cE-mono.pdf');\n    const rightTotalPages = ref(0);\n    const rightVisiblePages = ref([1, 2, 3]);\n    const rightLastPageLoaded = ref(3);\n    const loading = ref(false);\n    const isScrolling = ref(false);\n    const scrollSyncTimeout = ref(null);\n\n    // 加载更多页面\n    const loadMorePages = side => {\n      if (loading.value) return;\n      loading.value = true;\n      if (side === 'left') {\n        if (leftLastPageLoaded.value >= leftTotalPages.value) {\n          loading.value = false;\n          return;\n        }\n        const newPages = [];\n        const pagesToLoad = Math.min(2, leftTotalPages.value - leftLastPageLoaded.value);\n        for (let i = 1; i <= pagesToLoad; i++) {\n          newPages.push(leftLastPageLoaded.value + i);\n        }\n        leftVisiblePages.value = [...leftVisiblePages.value, ...newPages];\n        leftLastPageLoaded.value += pagesToLoad;\n      } else {\n        if (rightLastPageLoaded.value >= rightTotalPages.value) {\n          loading.value = false;\n          return;\n        }\n        const newPages = [];\n        const pagesToLoad = Math.min(2, rightTotalPages.value - rightLastPageLoaded.value);\n        for (let i = 1; i <= pagesToLoad; i++) {\n          newPages.push(rightLastPageLoaded.value + i);\n        }\n        rightVisiblePages.value = [...rightVisiblePages.value, ...newPages];\n        rightLastPageLoaded.value += pagesToLoad;\n      }\n      loading.value = false;\n    };\n\n    // 同步滚动处理\n    const handleScroll = event => {\n      if (isScrolling.value) return;\n      isScrolling.value = true;\n\n      // 清除之前的同步定时器\n      if (scrollSyncTimeout.value) {\n        clearTimeout(scrollSyncTimeout.value);\n      }\n\n      // 设置新的定时器\n      scrollSyncTimeout.value = setTimeout(() => {\n        isScrolling.value = false;\n      }, 100);\n      const target = event.target;\n      const otherSide = target.classList.contains('left-column') ? 'right' : 'left';\n      const otherElement = otherSide === 'right' ? rightPdf.value : leftPdf.value;\n\n      // 计算并同步滚动位置\n      const scrollRatio = target.scrollTop / (target.scrollHeight - target.clientHeight);\n      const otherScrollTop = scrollRatio * (otherElement.scrollHeight - otherElement.clientHeight);\n      otherElement.scrollTop = otherScrollTop;\n\n      // 检查是否需要加载更多页面\n      const scrollPosition = target.scrollTop + target.clientHeight;\n      const containerHeight = target.scrollHeight;\n      if (containerHeight - scrollPosition < 500) {\n        if (otherSide === 'left') {\n          loadMorePages('left');\n        } else {\n          loadMorePages('right');\n        }\n      }\n    };\n    const onPageRendered = (side, page) => {\n      console.log(`${side} PDF 第 ${page} 页渲染完成`);\n    };\n    onMounted(() => {\n      // 初始化PDF总页数（实际应用中应该通过API获取）\n      leftTotalPages.value = 10;\n      rightTotalPages.value = 10;\n\n      // 添加滚动事件监听\n      leftPdf.value.addEventListener('scroll', handleScroll);\n      rightPdf.value.addEventListener('scroll', handleScroll);\n\n      // 初始加载\n      loadMorePages('left');\n      loadMorePages('right');\n    });\n    onUnmounted(() => {\n      leftPdf.value.removeEventListener('scroll', handleScroll);\n      rightPdf.value.removeEventListener('scroll', handleScroll);\n      if (scrollSyncTimeout.value) {\n        clearTimeout(scrollSyncTimeout.value);\n      }\n    });\n    return {\n      leftPdfSource,\n      leftVisiblePages,\n      rightPdfSource,\n      rightVisiblePages,\n      loading,\n      onPageRendered,\n      leftPdf,\n      rightPdf\n    };\n  }\n};","map":{"version":3,"names":["VuePdfEmbed","ref","onMounted","onUnmounted","components","setup","leftPdfSource","leftTotalPages","leftVisiblePages","leftLastPageLoaded","rightPdfSource","rightTotalPages","rightVisiblePages","rightLastPageLoaded","loading","isScrolling","scrollSyncTimeout","loadMorePages","side","value","newPages","pagesToLoad","Math","min","i","push","handleScroll","event","clearTimeout","setTimeout","target","otherSide","classList","contains","otherElement","rightPdf","leftPdf","scrollRatio","scrollTop","scrollHeight","clientHeight","otherScrollTop","scrollPosition","containerHeight","onPageRendered","page","console","log","addEventListener","removeEventListener"],"sources":["D:\\Study\\Code\\AICloud\\front\\src\\components\\PDFViewer.vue"],"sourcesContent":["<template>\r\n  <div class=\"dual-pdf-container\">\r\n    <div class=\"pdf-column\" ref=\"leftPdf\">\r\n      <div v-for=\"page in leftVisiblePages\" :key=\"'left-' + page\">\r\n        <vue-pdf-embed\r\n          :source=\"leftPdfSource\"\r\n          :page=\"page\"\r\n          @rendered=\"onPageRendered('left', page)\"\r\n        />\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"pdf-column\" ref=\"rightPdf\">\r\n      <div v-for=\"page in rightVisiblePages\" :key=\"'right-' + page\">\r\n        <vue-pdf-embed\r\n          :source=\"rightPdfSource\"\r\n          :page=\"page\"\r\n          @rendered=\"onPageRendered('right', page)\"\r\n        />\r\n      </div>\r\n    </div>\r\n\r\n    <div v-if=\"loading\" class=\"loading\">加载中...</div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport VuePdfEmbed from 'vue-pdf-embed'\r\nimport { ref, onMounted, onUnmounted } from 'vue'\r\n\r\nexport default {\r\n  components: {\r\n    VuePdfEmbed\r\n  },\r\n  setup() {\r\n    // 左侧PDF配置\r\n    const leftPdfSource = ref('111.pdf')\r\n    const leftTotalPages = ref(0)\r\n    const leftVisiblePages = ref([1, 2, 3])\r\n    const leftLastPageLoaded = ref(3)\r\n\r\n    // 右侧PDF配置\r\n    const rightPdfSource = ref('111_qs9p2cE-mono.pdf')\r\n    const rightTotalPages = ref(0)\r\n    const rightVisiblePages = ref([1, 2, 3])\r\n    const rightLastPageLoaded = ref(3)\r\n\r\n    const loading = ref(false)\r\n    const isScrolling = ref(false)\r\n    const scrollSyncTimeout = ref(null)\r\n\r\n    // 加载更多页面\r\n    const loadMorePages = (side) => {\r\n      if (loading.value) return\r\n\r\n      loading.value = true\r\n\r\n      if (side === 'left') {\r\n        if (leftLastPageLoaded.value >= leftTotalPages.value) {\r\n          loading.value = false\r\n          return\r\n        }\r\n\r\n        const newPages = []\r\n        const pagesToLoad = Math.min(2, leftTotalPages.value - leftLastPageLoaded.value)\r\n\r\n        for (let i = 1; i <= pagesToLoad; i++) {\r\n          newPages.push(leftLastPageLoaded.value + i)\r\n        }\r\n\r\n        leftVisiblePages.value = [...leftVisiblePages.value, ...newPages]\r\n        leftLastPageLoaded.value += pagesToLoad\r\n      } else {\r\n        if (rightLastPageLoaded.value >= rightTotalPages.value) {\r\n          loading.value = false\r\n          return\r\n        }\r\n\r\n        const newPages = []\r\n        const pagesToLoad = Math.min(2, rightTotalPages.value - rightLastPageLoaded.value)\r\n\r\n        for (let i = 1; i <= pagesToLoad; i++) {\r\n          newPages.push(rightLastPageLoaded.value + i)\r\n        }\r\n\r\n        rightVisiblePages.value = [...rightVisiblePages.value, ...newPages]\r\n        rightLastPageLoaded.value += pagesToLoad\r\n      }\r\n\r\n      loading.value = false\r\n    }\r\n\r\n    // 同步滚动处理\r\n    const handleScroll = (event) => {\r\n      if (isScrolling.value) return\r\n\r\n      isScrolling.value = true\r\n\r\n      // 清除之前的同步定时器\r\n      if (scrollSyncTimeout.value) {\r\n        clearTimeout(scrollSyncTimeout.value)\r\n      }\r\n\r\n      // 设置新的定时器\r\n      scrollSyncTimeout.value = setTimeout(() => {\r\n        isScrolling.value = false\r\n      }, 100)\r\n\r\n      const target = event.target\r\n      const otherSide = target.classList.contains('left-column') ? 'right' : 'left'\r\n      const otherElement = otherSide === 'right' ? rightPdf.value : leftPdf.value\r\n\r\n      // 计算并同步滚动位置\r\n      const scrollRatio = target.scrollTop / (target.scrollHeight - target.clientHeight)\r\n      const otherScrollTop = scrollRatio * (otherElement.scrollHeight - otherElement.clientHeight)\r\n\r\n      otherElement.scrollTop = otherScrollTop\r\n\r\n      // 检查是否需要加载更多页面\r\n      const scrollPosition = target.scrollTop + target.clientHeight\r\n      const containerHeight = target.scrollHeight\r\n\r\n      if (containerHeight - scrollPosition < 500) {\r\n        if (otherSide === 'left') {\r\n          loadMorePages('left')\r\n        } else {\r\n          loadMorePages('right')\r\n        }\r\n      }\r\n    }\r\n\r\n    const onPageRendered = (side, page) => {\r\n      console.log(`${side} PDF 第 ${page} 页渲染完成`)\r\n    }\r\n\r\n    onMounted(() => {\r\n      // 初始化PDF总页数（实际应用中应该通过API获取）\r\n      leftTotalPages.value = 10\r\n      rightTotalPages.value = 10\r\n\r\n      // 添加滚动事件监听\r\n      leftPdf.value.addEventListener('scroll', handleScroll)\r\n      rightPdf.value.addEventListener('scroll', handleScroll)\r\n\r\n      // 初始加载\r\n      loadMorePages('left')\r\n      loadMorePages('right')\r\n    })\r\n\r\n    onUnmounted(() => {\r\n      leftPdf.value.removeEventListener('scroll', handleScroll)\r\n      rightPdf.value.removeEventListener('scroll', handleScroll)\r\n\r\n      if (scrollSyncTimeout.value) {\r\n        clearTimeout(scrollSyncTimeout.value)\r\n      }\r\n    })\r\n\r\n    return {\r\n      leftPdfSource,\r\n      leftVisiblePages,\r\n      rightPdfSource,\r\n      rightVisiblePages,\r\n      loading,\r\n      onPageRendered,\r\n      leftPdf,\r\n      rightPdf\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n.dual-pdf-container {\r\n  display: flex;\r\n  width: 100%;\r\n  height: 100vh;\r\n  overflow: hidden;\r\n}\r\n\r\n.pdf-column {\r\n  flex: 1;\r\n  height: 100%;\r\n  overflow-y: auto;\r\n  padding: 20px;\r\n  box-sizing: border-box;\r\n}\r\n\r\n.pdf-column:first-child {\r\n  border-right: 1px solid #ccc;\r\n}\r\n\r\n.loading {\r\n  position: fixed;\r\n  bottom: 20px;\r\n  left: 50%;\r\n  transform: translateX(-50%);\r\n  background: rgba(0, 0, 0, 0.7);\r\n  color: white;\r\n  padding: 10px 20px;\r\n  border-radius: 4px;\r\n}\r\n\r\n/* PDF页面样式 */\r\n.vue-pdf-embed {\r\n  margin-bottom: 20px;\r\n  box-shadow: 0 0 5px rgba(0, 0, 0, 0.2);\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}