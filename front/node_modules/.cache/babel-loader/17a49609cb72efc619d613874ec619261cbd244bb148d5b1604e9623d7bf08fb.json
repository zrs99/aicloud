{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/web.url-search-params.delete.js\";\nimport \"core-js/modules/web.url-search-params.has.js\";\nimport \"core-js/modules/web.url-search-params.size.js\";\nimport VuePdfEmbed from 'vue-pdf-embed';\nimport { ref, onMounted, onUnmounted } from 'vue';\nimport axios from 'axios';\nexport default {\n  components: {\n    VuePdfEmbed\n  },\n  setup() {\n    // 文件上传相关\n    const originalPdfSource = ref(null);\n    const originalFileName = ref('');\n    const selectedLanguage = ref('zh');\n\n    // 翻译相关\n    const translatedPdfSource = ref(null);\n    const progress = ref(0);\n    const translationComplete = ref(false);\n    const taskId = ref(null);\n    let ws = null;\n\n    // PDF展示相关\n    const showPdfViewer = ref(false);\n    const visiblePages = ref([1, 2, 3]);\n    const loading = ref(false);\n    const lastPage = ref(3);\n    const totalPages = ref(10);\n\n    // DOM引用\n    const scrollContainer = ref(null);\n    const originalPdfPages = ref([]);\n    const translatedPdfPages = ref([]);\n\n    // 处理文件上传\n    const handleFileUpload = event => {\n      const file = event.target.files[0];\n      if (!file || file.type !== 'application/pdf') {\n        alert('请上传有效的PDF文件');\n        return;\n      }\n      originalFileName.value = file.name;\n      originalPdfSource.value = URL.createObjectURL(file);\n      translatedPdfSource.value = null; // 重置翻译结果\n      showPdfViewer.value = false;\n      progress.value = 0;\n      translationComplete.value = false;\n    };\n\n    // 上传并翻译文件\n    const uploadAndTranslate = async () => {\n      if (!originalPdfSource.value) return;\n      try {\n        // 获取原始文件对象\n        const fileInput = document.getElementById('originalPdf');\n        const file = fileInput.files[0];\n        const formData = new FormData();\n        formData.append('file', file);\n        formData.append('language', selectedLanguage.value);\n        formData.append('title', file.name);\n        const response = await axios.post('http://10.241.109.58:8000/blogs/upload/', formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          }\n        });\n        taskId.value = response.data.task_id;\n\n        // 建立WebSocket连接监听进度\n        ws = new WebSocket(`ws://10.241.109.58:8000/ws/progress/${taskId.value}/`);\n        ws.onopen = () => {\n          console.log('WebSocket连接已建立');\n          ws.send(JSON.stringify({\n            type: 'init',\n            task_id: taskId.value\n          }));\n        };\n        ws.onmessage = event => {\n          const data = JSON.parse(event.data);\n          if (data.progress !== undefined) {\n            progress.value = data.progress;\n            if (data.progress >= 100) {\n              translationComplete.value = true;\n            }\n          }\n        };\n        ws.onerror = error => {\n          console.error('WebSocket错误:', error);\n        };\n        ws.onclose = () => {\n          console.log('WebSocket连接已关闭');\n        };\n      } catch (error) {\n        console.error('文件上传或翻译失败:', error);\n      }\n    };\n\n    // 加载翻译后的PDF\n    const loadTranslatedPdf = async () => {\n      if (!taskId.value) return;\n      try {\n        const url = `http://10.241.109.58:8000/blogs/download/${taskId.value}/?t=${Date.now()}`;\n        translatedPdfSource.value = url;\n        showPdfViewer.value = true;\n\n        // 重置页码\n        visiblePages.value = [1, 2, 3];\n        lastPage.value = 3;\n      } catch (error) {\n        console.error('加载翻译结果失败:', error);\n      }\n    };\n\n    // 加载更多页面\n    const loadMorePages = () => {\n      if (loading.value || lastPage.value >= totalPages.value) return;\n      loading.value = true;\n      const newPages = [];\n      const pagesToLoad = Math.min(2, totalPages.value - lastPage.value);\n      for (let i = 1; i <= pagesToLoad; i++) {\n        newPages.push(lastPage.value + i);\n      }\n      visiblePages.value = [...visiblePages.value, ...newPages];\n      lastPage.value += pagesToLoad;\n      loading.value = false;\n    };\n\n    // 滚动处理\n    const handleScroll = () => {\n      if (!scrollContainer.value) return;\n      const scrollPos = scrollContainer.value.scrollTop + scrollContainer.value.clientHeight;\n      const totalHeight = scrollContainer.value.scrollHeight;\n      if (totalHeight - scrollPos < 500) {\n        loadMorePages();\n      }\n    };\n\n    // 页面渲染回调\n    const onPageRendered = (type, page) => {\n      console.log(`${type} PDF 第 ${page} 页渲染完成`);\n\n      // 同步两侧页面高度\n      if (originalPdfPages.value[page - 1] && translatedPdfPages.value[page - 1]) {\n        const originalHeight = originalPdfPages.value[page - 1].$el.clientHeight;\n        const translatedHeight = translatedPdfPages.value[page - 1].$el.clientHeight;\n        const maxHeight = Math.max(originalHeight, translatedHeight);\n        originalPdfPages.value[page - 1].$el.style.minHeight = `${maxHeight}px`;\n        translatedPdfPages.value[page - 1].$el.style.minHeight = `${maxHeight}px`;\n      }\n    };\n    onMounted(() => {\n      if (scrollContainer.value) {\n        scrollContainer.value.addEventListener('scroll', handleScroll);\n      }\n    });\n    onUnmounted(() => {\n      if (scrollContainer.value) {\n        scrollContainer.value.removeEventListener('scroll', handleScroll);\n      }\n\n      // 释放对象URL\n      if (originalPdfSource.value) URL.revokeObjectURL(originalPdfSource.value);\n      if (ws) ws.close();\n    });\n    return {\n      originalPdfSource,\n      translatedPdfSource,\n      originalFileName,\n      selectedLanguage,\n      progress,\n      translationComplete,\n      showPdfViewer,\n      visiblePages,\n      loading,\n      scrollContainer,\n      originalPdfPages,\n      translatedPdfPages,\n      handleFileUpload,\n      uploadAndTranslate,\n      loadTranslatedPdf,\n      onPageRendered\n    };\n  }\n};","map":{"version":3,"names":["VuePdfEmbed","ref","onMounted","onUnmounted","axios","components","setup","originalPdfSource","originalFileName","selectedLanguage","translatedPdfSource","progress","translationComplete","taskId","ws","showPdfViewer","visiblePages","loading","lastPage","totalPages","scrollContainer","originalPdfPages","translatedPdfPages","handleFileUpload","event","file","target","files","type","alert","value","name","URL","createObjectURL","uploadAndTranslate","fileInput","document","getElementById","formData","FormData","append","response","post","headers","data","task_id","WebSocket","onopen","console","log","send","JSON","stringify","onmessage","parse","undefined","onerror","error","onclose","loadTranslatedPdf","url","Date","now","loadMorePages","newPages","pagesToLoad","Math","min","i","push","handleScroll","scrollPos","scrollTop","clientHeight","totalHeight","scrollHeight","onPageRendered","page","originalHeight","$el","translatedHeight","maxHeight","max","style","minHeight","addEventListener","removeEventListener","revokeObjectURL","close"],"sources":["D:\\Study\\Code\\AICloud\\front\\src\\components\\test.vue"],"sourcesContent":["<template>\r\n  <div class=\"pdf-comparison-container\">\r\n    <!-- 上传和翻译控制区域 -->\r\n    <div class=\"control-panel\">\r\n      <div class=\"upload-section\">\r\n        <div class=\"upload-box\">\r\n          <input\r\n            type=\"file\"\r\n            id=\"originalPdf\"\r\n            accept=\".pdf\"\r\n            @change=\"handleFileUpload\"\r\n            class=\"file-input\"\r\n          >\r\n          <label for=\"originalPdf\" class=\"upload-label\">\r\n            <span v-if=\"!originalFileName\">上传PDF文件</span>\r\n            <span v-else>{{ originalFileName }}</span>\r\n          </label>\r\n        </div>\r\n\r\n        <div class=\"language-selector\">\r\n          <label>目标语言:</label>\r\n          <select v-model=\"selectedLanguage\" class=\"language-dropdown\">\r\n            <option value=\"zh\">中文(简体)</option>\r\n            <option value=\"en\">英语</option>\r\n          </select>\r\n          <button\r\n            @click=\"uploadAndTranslate\"\r\n            class=\"action-button\"\r\n            :disabled=\"!originalPdfSource\"\r\n          >\r\n            翻译文档\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"progress-section\" v-if=\"progress > 0\">\r\n        <div class=\"progress-container\">\r\n          <label>翻译进度:</label>\r\n          <progress :value=\"progress\" max=\"100\" class=\"progress-bar\"></progress>\r\n          <span class=\"progress-text\">{{ progress }}%</span>\r\n        </div>\r\n        <button\r\n          v-if=\"translationComplete\"\r\n          @click=\"loadTranslatedPdf\"\r\n          class=\"action-button\"\r\n        >\r\n          加载翻译结果\r\n        </button>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- PDF对比展示区域 -->\r\n    <div v-if=\"showPdfViewer\" class=\"pdf-viewer-wrapper\">\r\n      <div class=\"scroll-container\" ref=\"scrollContainer\">\r\n        <div class=\"content-wrapper\">\r\n          <!-- 左侧原始PDF -->\r\n          <div class=\"pdf-column original-pdf\">\r\n            <div class=\"pdf-header\">原始文档</div>\r\n            <div v-for=\"page in visiblePages\" :key=\"'original-'+page\">\r\n              <vue-pdf-embed\r\n                :source=\"originalPdfSource\"\r\n                :page=\"page\"\r\n                @rendered=\"onPageRendered('original', page)\"\r\n                ref=\"originalPdfPages\"\r\n              />\r\n            </div>\r\n            <div v-if=\"loading\" class=\"loading\">加载中...</div>\r\n          </div>\r\n\r\n          <!-- 右侧翻译后PDF -->\r\n          <div class=\"pdf-column translated-pdf\">\r\n            <div class=\"pdf-header\">翻译结果</div>\r\n            <div v-for=\"page in visiblePages\" :key=\"'translated-'+page\">\r\n              <vue-pdf-embed\r\n                :source=\"translatedPdfSource\"\r\n                :page=\"page\"\r\n                @rendered=\"onPageRendered('translated', page)\"\r\n                ref=\"translatedPdfPages\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport VuePdfEmbed from 'vue-pdf-embed'\r\nimport { ref, onMounted, onUnmounted } from 'vue'\r\nimport axios from 'axios'\r\n\r\nexport default {\r\n  components: {\r\n    VuePdfEmbed\r\n  },\r\n  setup() {\r\n    // 文件上传相关\r\n    const originalPdfSource = ref(null)\r\n    const originalFileName = ref('')\r\n    const selectedLanguage = ref('zh')\r\n\r\n    // 翻译相关\r\n    const translatedPdfSource = ref(null)\r\n    const progress = ref(0)\r\n    const translationComplete = ref(false)\r\n    const taskId = ref(null)\r\n    let ws = null\r\n\r\n    // PDF展示相关\r\n    const showPdfViewer = ref(false)\r\n    const visiblePages = ref([1, 2, 3])\r\n    const loading = ref(false)\r\n    const lastPage = ref(3)\r\n    const totalPages = ref(10)\r\n\r\n    // DOM引用\r\n    const scrollContainer = ref(null)\r\n    const originalPdfPages = ref([])\r\n    const translatedPdfPages = ref([])\r\n\r\n    // 处理文件上传\r\n    const handleFileUpload = (event) => {\r\n      const file = event.target.files[0]\r\n      if (!file || file.type !== 'application/pdf') {\r\n        alert('请上传有效的PDF文件')\r\n        return\r\n      }\r\n\r\n      originalFileName.value = file.name\r\n      originalPdfSource.value = URL.createObjectURL(file)\r\n      translatedPdfSource.value = null // 重置翻译结果\r\n      showPdfViewer.value = false\r\n      progress.value = 0\r\n      translationComplete.value = false\r\n    }\r\n\r\n    // 上传并翻译文件\r\n    const uploadAndTranslate = async () => {\r\n      if (!originalPdfSource.value) return\r\n\r\n      try {\r\n        // 获取原始文件对象\r\n        const fileInput = document.getElementById('originalPdf')\r\n        const file = fileInput.files[0]\r\n\r\n        const formData = new FormData()\r\n        formData.append('file', file)\r\n        formData.append('language', selectedLanguage.value)\r\n        formData.append('title', file.name)\r\n\r\n        const response = await axios.post('http://10.241.109.58:8000/blogs/upload/', formData, {\r\n          headers: {\r\n            'Content-Type': 'multipart/form-data',\r\n          },\r\n        })\r\n\r\n        taskId.value = response.data.task_id\r\n\r\n        // 建立WebSocket连接监听进度\r\n        ws = new WebSocket(`ws://10.241.109.58:8000/ws/progress/${taskId.value}/`)\r\n\r\n        ws.onopen = () => {\r\n          console.log('WebSocket连接已建立')\r\n          ws.send(JSON.stringify({type: 'init', task_id: taskId.value}))\r\n        }\r\n\r\n        ws.onmessage = (event) => {\r\n          const data = JSON.parse(event.data)\r\n          if (data.progress !== undefined) {\r\n            progress.value = data.progress\r\n            if (data.progress >= 100) {\r\n              translationComplete.value = true\r\n            }\r\n          }\r\n        }\r\n\r\n        ws.onerror = (error) => {\r\n          console.error('WebSocket错误:', error)\r\n        }\r\n\r\n        ws.onclose = () => {\r\n          console.log('WebSocket连接已关闭')\r\n        }\r\n\r\n      } catch (error) {\r\n        console.error('文件上传或翻译失败:', error)\r\n      }\r\n    }\r\n\r\n    // 加载翻译后的PDF\r\n    const loadTranslatedPdf = async () => {\r\n      if (!taskId.value) return\r\n\r\n      try {\r\n        const url = `http://10.241.109.58:8000/blogs/download/${taskId.value}/?t=${Date.now()}`\r\n        translatedPdfSource.value = url\r\n        showPdfViewer.value = true\r\n\r\n        // 重置页码\r\n        visiblePages.value = [1, 2, 3]\r\n        lastPage.value = 3\r\n\r\n      } catch (error) {\r\n        console.error('加载翻译结果失败:', error)\r\n      }\r\n    }\r\n\r\n    // 加载更多页面\r\n    const loadMorePages = () => {\r\n      if (loading.value || lastPage.value >= totalPages.value) return\r\n\r\n      loading.value = true\r\n      const newPages = []\r\n      const pagesToLoad = Math.min(2, totalPages.value - lastPage.value)\r\n\r\n      for (let i = 1; i <= pagesToLoad; i++) {\r\n        newPages.push(lastPage.value + i)\r\n      }\r\n\r\n      visiblePages.value = [...visiblePages.value, ...newPages]\r\n      lastPage.value += pagesToLoad\r\n      loading.value = false\r\n    }\r\n\r\n    // 滚动处理\r\n    const handleScroll = () => {\r\n      if (!scrollContainer.value) return\r\n\r\n      const scrollPos = scrollContainer.value.scrollTop + scrollContainer.value.clientHeight\r\n      const totalHeight = scrollContainer.value.scrollHeight\r\n\r\n      if (totalHeight - scrollPos < 500) {\r\n        loadMorePages()\r\n      }\r\n    }\r\n\r\n    // 页面渲染回调\r\n    const onPageRendered = (type, page) => {\r\n      console.log(`${type} PDF 第 ${page} 页渲染完成`)\r\n\r\n      // 同步两侧页面高度\r\n      if (originalPdfPages.value[page-1] && translatedPdfPages.value[page-1]) {\r\n        const originalHeight = originalPdfPages.value[page-1].$el.clientHeight\r\n        const translatedHeight = translatedPdfPages.value[page-1].$el.clientHeight\r\n        const maxHeight = Math.max(originalHeight, translatedHeight)\r\n\r\n        originalPdfPages.value[page-1].$el.style.minHeight = `${maxHeight}px`\r\n        translatedPdfPages.value[page-1].$el.style.minHeight = `${maxHeight}px`\r\n      }\r\n    }\r\n\r\n    onMounted(() => {\r\n      if (scrollContainer.value) {\r\n        scrollContainer.value.addEventListener('scroll', handleScroll)\r\n      }\r\n    })\r\n\r\n    onUnmounted(() => {\r\n      if (scrollContainer.value) {\r\n        scrollContainer.value.removeEventListener('scroll', handleScroll)\r\n      }\r\n\r\n      // 释放对象URL\r\n      if (originalPdfSource.value) URL.revokeObjectURL(originalPdfSource.value)\r\n      if (ws) ws.close()\r\n    })\r\n\r\n    return {\r\n      originalPdfSource,\r\n      translatedPdfSource,\r\n      originalFileName,\r\n      selectedLanguage,\r\n      progress,\r\n      translationComplete,\r\n      showPdfViewer,\r\n      visiblePages,\r\n      loading,\r\n      scrollContainer,\r\n      originalPdfPages,\r\n      translatedPdfPages,\r\n      handleFileUpload,\r\n      uploadAndTranslate,\r\n      loadTranslatedPdf,\r\n      onPageRendered\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.pdf-comparison-container {\r\n  width: 100%;\r\n  height: 100vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.control-panel {\r\n  padding: 20px;\r\n  background: #f5f5f5;\r\n  border-bottom: 1px solid #ddd;\r\n}\r\n\r\n.upload-section {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 20px;\r\n  margin-bottom: 15px;\r\n}\r\n\r\n.upload-box {\r\n  position: relative;\r\n  width: 200px;\r\n  height: 40px;\r\n}\r\n\r\n.file-input {\r\n  opacity: 0;\r\n  position: absolute;\r\n  width: 100%;\r\n  height: 100%;\r\n  cursor: pointer;\r\n}\r\n\r\n.upload-label {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 100%;\r\n  height: 100%;\r\n  border: 1px dashed #ccc;\r\n  border-radius: 4px;\r\n  background: white;\r\n  transition: all 0.3s;\r\n}\r\n\r\n.upload-label:hover {\r\n  border-color: #409eff;\r\n  background: #f0f7ff;\r\n}\r\n\r\n.language-selector {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 10px;\r\n}\r\n\r\n.language-dropdown {\r\n  padding: 5px;\r\n  border: 1px solid #ddd;\r\n  border-radius: 4px;\r\n}\r\n\r\n.action-button {\r\n  padding: 8px 16px;\r\n  background-color: #4CAF50;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  transition: background-color 0.3s;\r\n}\r\n\r\n.action-button:hover {\r\n  background-color: #45a049;\r\n}\r\n\r\n.action-button:disabled {\r\n  background-color: #cccccc;\r\n  cursor: not-allowed;\r\n}\r\n\r\n.progress-section {\r\n  margin-top: 15px;\r\n}\r\n\r\n.progress-container {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 10px;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.progress-bar {\r\n  flex: 1;\r\n  height: 10px;\r\n}\r\n\r\n.progress-text {\r\n  min-width: 40px;\r\n  text-align: right;\r\n}\r\n\r\n.pdf-viewer-wrapper {\r\n  flex: 1;\r\n  width: 100%;\r\n  overflow: hidden;\r\n}\r\n\r\n.scroll-container {\r\n  width: 100%;\r\n  height: 100%;\r\n  overflow-y: auto;\r\n}\r\n\r\n.content-wrapper {\r\n  display: flex;\r\n  min-height: 100%;\r\n}\r\n\r\n.pdf-column {\r\n  flex: 1;\r\n  padding: 15px;\r\n  box-sizing: border-box;\r\n}\r\n\r\n.pdf-header {\r\n  font-weight: bold;\r\n  margin-bottom: 15px;\r\n  padding-bottom: 5px;\r\n  border-bottom: 1px solid #eee;\r\n}\r\n\r\n.original-pdf {\r\n  border-right: 1px solid #ddd;\r\n}\r\n\r\n.vue-pdf-embed {\r\n  margin-bottom: 20px;\r\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.loading {\r\n  text-align: center;\r\n  padding: 20px;\r\n  color: #666;\r\n  background: #f5f5f5;\r\n  margin-top: 10px;\r\n  border-radius: 4px;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}