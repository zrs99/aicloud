{"ast":null,"code":"import \"core-js/modules/web.url-search-params.delete.js\";\nimport \"core-js/modules/web.url-search-params.has.js\";\nimport \"core-js/modules/web.url-search-params.size.js\";\nimport { ref, onMounted, onUnmounted } from 'vue';\nimport VuePdfEmbed from 'vue-pdf-embed';\nimport axios from 'axios';\n// import * as pdfjsLib from 'pdfjs-dist'\n// import pdfjsWorker from 'pdfjs-dist/build/pdf.worker.entry'\n\n// 配置pdf.js worker路径\n// pdfjsLib.GlobalWorkerOptions.workerSrc = pdfjsWorker\n\n// 文件上传相关\n\nexport default {\n  __name: 'TestView',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const originalPdfSource = ref(null);\n    const originalFileName = ref('');\n    const selectedLanguage = ref('zh');\n\n    // 翻译相关\n    const translatedPdfSource = ref(null);\n    const progress = ref(0);\n    const translationComplete = ref(false);\n    const taskId = ref(null);\n    let ws = null;\n\n    // PDF展示相关\n    const showPdfViewer = ref(false);\n    const originalVisiblePages = ref([]);\n    const translatedVisiblePages = ref([]);\n    const originalTotalPages = ref(0);\n    const translatedTotalPages = ref(0);\n\n    // DOM引用\n    const scrollContainer = ref(null);\n    const originalPdfPages = ref([]);\n    const translatedPdfPages = ref([]);\n    const message = ref('');\n\n    // 处理文件上传\n    const handleFileUpload = async event => {\n      const file = event.target.files[0];\n      if (!file || file.type !== 'application/pdf') {\n        alert('请上传有效的PDF文件');\n        return;\n      }\n      originalFileName.value = file.name;\n      originalPdfSource.value = URL.createObjectURL(file);\n      translatedPdfSource.value = null;\n      showPdfViewer.value = false;\n      progress.value = 0;\n      translationComplete.value = false;\n      try {\n        // 使用pdfjsLib获取PDF页数\n        const loadingTask = pdfjsLib.getDocument({\n          url: originalPdfSource.value,\n          cMapUrl: 'https://cdn.jsdelivr.net/npm/pdfjs-dist@2.16.105/cmaps/',\n          cMapPacked: true\n        });\n        const pdf = await loadingTask.promise;\n        originalTotalPages.value = pdf.numPages;\n        originalVisiblePages.value = Array.from({\n          length: pdf.numPages\n        }, (_, i) => i + 1);\n        showPdfViewer.value = true;\n      } catch (error) {\n        console.error('获取PDF页数失败:', error);\n        // 默认显示前10页作为fallback\n        originalTotalPages.value = 10;\n        originalVisiblePages.value = Array.from({\n          length: 10\n        }, (_, i) => i + 1);\n        showPdfViewer.value = true;\n      }\n    };\n\n    // 上传并翻译文件\n    const uploadAndTranslate = async () => {\n      if (!originalPdfSource.value) return;\n      try {\n        const fileInput = document.getElementById('originalPdf');\n        const file = fileInput.files[0];\n        const formData = new FormData();\n        formData.append('file', file);\n        formData.append('language', selectedLanguage.value);\n        formData.append('title', file.name);\n        message.value = '翻译排队中';\n        const response = await axios.post('http://10.241.109.58:8000/blogs/upload/', formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          }\n        });\n        taskId.value = response.data.task_id;\n\n        // 建立WebSocket连接监听进度\n        ws = new WebSocket(`ws://10.241.109.58:8000/ws/progress/${taskId.value}/`);\n        ws.onopen = () => {\n          console.log('WebSocket连接已建立');\n          ws.send(JSON.stringify({\n            type: 'init',\n            task_id: taskId.value\n          }));\n        };\n        ws.onmessage = event => {\n          const data = JSON.parse(event.data);\n          if (data.progress !== undefined) {\n            message.value = '';\n            progress.value = data.progress;\n            if (data.progress >= 100) {\n              translationComplete.value = true;\n            }\n          }\n        };\n        ws.onerror = error => {\n          console.error('WebSocket错误:', error);\n        };\n        ws.onclose = () => {\n          console.log('WebSocket连接已关闭');\n        };\n      } catch (error) {\n        console.error('文件上传或翻译失败:', error);\n      }\n    };\n\n    // 加载翻译后的PDF\n    const loadTranslatedPdf = async () => {\n      if (!taskId.value) return;\n      try {\n        const url = `http://10.241.109.58:8000/blogs/download/${taskId.value}/?t=${Date.now()}`;\n        translatedPdfSource.value = url;\n\n        // 使用pdfjsLib获取翻译后PDF的页数\n        const loadingTask = pdfjsLib.getDocument({\n          url: translatedPdfSource.value,\n          cMapUrl: 'https://cdn.jsdelivr.net/npm/pdfjs-dist@2.16.105/cmaps/',\n          cMapPacked: true\n        });\n        const pdf = await loadingTask.promise;\n        translatedTotalPages.value = pdf.numPages;\n        translatedVisiblePages.value = Array.from({\n          length: pdf.numPages\n        }, (_, i) => i + 1);\n        showPdfViewer.value = true;\n      } catch (error) {\n        console.error('加载翻译结果失败:', error);\n        // 默认显示前10页作为fallback\n        translatedTotalPages.value = 10;\n        translatedVisiblePages.value = Array.from({\n          length: 10\n        }, (_, i) => i + 1);\n        showPdfViewer.value = true;\n      }\n    };\n\n    // 页面渲染回调\n    const onPageRendered = (type, page) => {\n      console.log(`${type} PDF 第 ${page} 页渲染完成`);\n\n      // 同步两侧页面高度\n      if (originalPdfPages.value[page - 1] && translatedPdfPages.value[page - 1]) {\n        const originalHeight = originalPdfPages.value[page - 1].$el.clientHeight;\n        const translatedHeight = translatedPdfPages.value[page - 1].$el.clientHeight;\n        const maxHeight = Math.max(originalHeight, translatedHeight);\n        originalPdfPages.value[page - 1].$el.style.minHeight = `${maxHeight}px`;\n        translatedPdfPages.value[page - 1].$el.style.minHeight = `${maxHeight}px`;\n      }\n    };\n    onMounted(() => {\n      if (scrollContainer.value) {\n        scrollContainer.value.addEventListener('scroll', () => {\n          // 可以在这里添加滚动事件处理\n        });\n      }\n    });\n    onUnmounted(() => {\n      if (scrollContainer.value) {\n        scrollContainer.value.removeEventListener('scroll', () => {});\n      }\n\n      // 释放对象URL\n      if (originalPdfSource.value) URL.revokeObjectURL(originalPdfSource.value);\n      if (ws) ws.close();\n    });\n    const __returned__ = {\n      originalPdfSource,\n      originalFileName,\n      selectedLanguage,\n      translatedPdfSource,\n      progress,\n      translationComplete,\n      taskId,\n      get ws() {\n        return ws;\n      },\n      set ws(v) {\n        ws = v;\n      },\n      showPdfViewer,\n      originalVisiblePages,\n      translatedVisiblePages,\n      originalTotalPages,\n      translatedTotalPages,\n      scrollContainer,\n      originalPdfPages,\n      translatedPdfPages,\n      message,\n      handleFileUpload,\n      uploadAndTranslate,\n      loadTranslatedPdf,\n      onPageRendered,\n      ref,\n      onMounted,\n      onUnmounted,\n      get VuePdfEmbed() {\n        return VuePdfEmbed;\n      },\n      get axios() {\n        return axios;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","onUnmounted","VuePdfEmbed","axios","originalPdfSource","originalFileName","selectedLanguage","translatedPdfSource","progress","translationComplete","taskId","ws","showPdfViewer","originalVisiblePages","translatedVisiblePages","originalTotalPages","translatedTotalPages","scrollContainer","originalPdfPages","translatedPdfPages","message","handleFileUpload","event","file","target","files","type","alert","value","name","URL","createObjectURL","loadingTask","pdfjsLib","getDocument","url","cMapUrl","cMapPacked","pdf","promise","numPages","Array","from","length","_","i","error","console","uploadAndTranslate","fileInput","document","getElementById","formData","FormData","append","response","post","headers","data","task_id","WebSocket","onopen","log","send","JSON","stringify","onmessage","parse","undefined","onerror","onclose","loadTranslatedPdf","Date","now","onPageRendered","page","originalHeight","$el","clientHeight","translatedHeight","maxHeight","Math","max","style","minHeight","addEventListener","removeEventListener","revokeObjectURL","close"],"sources":["D:/Study/Code/AICloud/front/src/components/TestView.vue"],"sourcesContent":["<template>\r\n  <div class=\"pdf-comparison-container\">\r\n    <!-- 上传和翻译控制区域 -->\r\n    <div class=\"control-panel\">\r\n      <div class=\"upload-section\">\r\n        <div class=\"upload-box\">\r\n          <input\r\n            type=\"file\"\r\n            id=\"originalPdf\"\r\n            accept=\".pdf\"\r\n            @change=\"handleFileUpload\"\r\n            class=\"file-input\"\r\n          >\r\n          <label for=\"originalPdf\" class=\"upload-label\">\r\n            <span v-if=\"!originalFileName\">上传PDF文件</span>\r\n            <span v-else>{{ originalFileName }}</span>\r\n          </label>\r\n        </div>\r\n\r\n        <div class=\"language-selector\">\r\n          <label>目标语言:</label>\r\n          <select v-model=\"selectedLanguage\" class=\"language-dropdown\">\r\n            <option value=\"zh\">中文(简体)</option>\r\n            <option value=\"en\">英语</option>\r\n          </select>\r\n          <button\r\n            @click=\"uploadAndTranslate\"\r\n            class=\"action-button\"\r\n            :disabled=\"!originalPdfSource\"\r\n          >\r\n            翻译文档\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <p v-if=\"message\" class=\"message\">{{ message }}</p>\r\n\r\n      <div class=\"progress-section\" v-if=\"progress > 0\">\r\n        <div class=\"progress-container\">\r\n          <label>翻译进度:</label>\r\n          <progress :value=\"progress\" max=\"100\" class=\"progress-bar\"></progress>\r\n          <span class=\"progress-text\">{{ progress }}%</span>\r\n        </div>\r\n        <button\r\n          v-if=\"translationComplete\"\r\n          @click=\"loadTranslatedPdf\"\r\n          class=\"action-button\"\r\n        >\r\n          加载翻译结果\r\n        </button>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- PDF对比展示区域 -->\r\n    <div v-if=\"showPdfViewer\" class=\"pdf-viewer-wrapper\">\r\n      <div class=\"scroll-container\" ref=\"scrollContainer\">\r\n        <div class=\"content-wrapper\">\r\n          <!-- 左侧原始PDF -->\r\n          <div class=\"pdf-column original-pdf\">\r\n            <div class=\"pdf-header\">原始文档 (共{{ originalTotalPages }}页)</div>\r\n            <div v-for=\"page in originalVisiblePages\" :key=\"'original-'+page\">\r\n              <vue-pdf-embed\r\n                :source=\"originalPdfSource\"\r\n                :page=\"page\"\r\n                @rendered=\"onPageRendered('original', page)\"\r\n                ref=\"originalPdfPages\"\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <!-- 右侧翻译后PDF -->\r\n          <div class=\"pdf-column translated-pdf\">\r\n            <div class=\"pdf-header\">翻译结果 (共{{ translatedTotalPages }}页)</div>\r\n            <div v-for=\"page in translatedVisiblePages\" :key=\"'translated-'+page\">\r\n              <vue-pdf-embed\r\n                :source=\"translatedPdfSource\"\r\n                :page=\"page\"\r\n                @rendered=\"onPageRendered('translated', page)\"\r\n                ref=\"translatedPdfPages\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, onMounted, onUnmounted } from 'vue'\r\nimport VuePdfEmbed from 'vue-pdf-embed'\r\nimport axios from 'axios'\r\n// import * as pdfjsLib from 'pdfjs-dist'\r\n// import pdfjsWorker from 'pdfjs-dist/build/pdf.worker.entry'\r\n\r\n// 配置pdf.js worker路径\r\n// pdfjsLib.GlobalWorkerOptions.workerSrc = pdfjsWorker\r\n\r\n// 文件上传相关\r\nconst originalPdfSource = ref(null)\r\nconst originalFileName = ref('')\r\nconst selectedLanguage = ref('zh')\r\n\r\n// 翻译相关\r\nconst translatedPdfSource = ref(null)\r\nconst progress = ref(0)\r\nconst translationComplete = ref(false)\r\nconst taskId = ref(null)\r\nlet ws = null\r\n\r\n// PDF展示相关\r\nconst showPdfViewer = ref(false)\r\nconst originalVisiblePages = ref([])\r\nconst translatedVisiblePages = ref([])\r\nconst originalTotalPages = ref(0)\r\nconst translatedTotalPages = ref(0)\r\n\r\n// DOM引用\r\nconst scrollContainer = ref(null)\r\nconst originalPdfPages = ref([])\r\nconst translatedPdfPages = ref([])\r\nconst message = ref('')\r\n\r\n// 处理文件上传\r\nconst handleFileUpload = async (event) => {\r\n  const file = event.target.files[0]\r\n  if (!file || file.type !== 'application/pdf') {\r\n    alert('请上传有效的PDF文件')\r\n    return\r\n  }\r\n\r\n  originalFileName.value = file.name\r\n  originalPdfSource.value = URL.createObjectURL(file)\r\n  translatedPdfSource.value = null\r\n  showPdfViewer.value = false\r\n  progress.value = 0\r\n  translationComplete.value = false\r\n\r\n  try {\r\n    // 使用pdfjsLib获取PDF页数\r\n    const loadingTask = pdfjsLib.getDocument({\r\n      url: originalPdfSource.value,\r\n      cMapUrl: 'https://cdn.jsdelivr.net/npm/pdfjs-dist@2.16.105/cmaps/',\r\n      cMapPacked: true\r\n    })\r\n    const pdf = await loadingTask.promise\r\n    originalTotalPages.value = pdf.numPages\r\n    originalVisiblePages.value = Array.from({ length: pdf.numPages }, (_, i) => i + 1)\r\n    showPdfViewer.value = true\r\n  } catch (error) {\r\n    console.error('获取PDF页数失败:', error)\r\n    // 默认显示前10页作为fallback\r\n    originalTotalPages.value = 10\r\n    originalVisiblePages.value = Array.from({ length: 10 }, (_, i) => i + 1)\r\n    showPdfViewer.value = true\r\n  }\r\n}\r\n\r\n// 上传并翻译文件\r\nconst uploadAndTranslate = async () => {\r\n  if (!originalPdfSource.value) return\r\n\r\n  try {\r\n    const fileInput = document.getElementById('originalPdf')\r\n    const file = fileInput.files[0]\r\n\r\n    const formData = new FormData()\r\n    formData.append('file', file)\r\n    formData.append('language', selectedLanguage.value)\r\n    formData.append('title', file.name)\r\n\r\n    message.value = '翻译排队中'\r\n    const response = await axios.post('http://10.241.109.58:8000/blogs/upload/', formData, {\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data',\r\n      },\r\n    })\r\n\r\n    taskId.value = response.data.task_id\r\n\r\n    // 建立WebSocket连接监听进度\r\n    ws = new WebSocket(`ws://10.241.109.58:8000/ws/progress/${taskId.value}/`)\r\n\r\n    ws.onopen = () => {\r\n      console.log('WebSocket连接已建立')\r\n      ws.send(JSON.stringify({type: 'init', task_id: taskId.value}))\r\n    }\r\n\r\n    ws.onmessage = (event) => {\r\n      const data = JSON.parse(event.data)\r\n      if (data.progress !== undefined) {\r\n        message.value = ''\r\n        progress.value = data.progress\r\n        if (data.progress >= 100) {\r\n          translationComplete.value = true\r\n        }\r\n      }\r\n    }\r\n\r\n    ws.onerror = (error) => {\r\n      console.error('WebSocket错误:', error)\r\n    }\r\n\r\n    ws.onclose = () => {\r\n      console.log('WebSocket连接已关闭')\r\n    }\r\n\r\n  } catch (error) {\r\n    console.error('文件上传或翻译失败:', error)\r\n  }\r\n}\r\n\r\n// 加载翻译后的PDF\r\nconst loadTranslatedPdf = async () => {\r\n  if (!taskId.value) return\r\n\r\n  try {\r\n    const url = `http://10.241.109.58:8000/blogs/download/${taskId.value}/?t=${Date.now()}`\r\n    translatedPdfSource.value = url\r\n\r\n    // 使用pdfjsLib获取翻译后PDF的页数\r\n    const loadingTask = pdfjsLib.getDocument({\r\n      url: translatedPdfSource.value,\r\n      cMapUrl: 'https://cdn.jsdelivr.net/npm/pdfjs-dist@2.16.105/cmaps/',\r\n      cMapPacked: true\r\n    })\r\n    const pdf = await loadingTask.promise\r\n    translatedTotalPages.value = pdf.numPages\r\n    translatedVisiblePages.value = Array.from({ length: pdf.numPages }, (_, i) => i + 1)\r\n\r\n    showPdfViewer.value = true\r\n  } catch (error) {\r\n    console.error('加载翻译结果失败:', error)\r\n    // 默认显示前10页作为fallback\r\n    translatedTotalPages.value = 10\r\n    translatedVisiblePages.value = Array.from({ length: 10 }, (_, i) => i + 1)\r\n    showPdfViewer.value = true\r\n  }\r\n}\r\n\r\n// 页面渲染回调\r\nconst onPageRendered = (type, page) => {\r\n  console.log(`${type} PDF 第 ${page} 页渲染完成`)\r\n\r\n  // 同步两侧页面高度\r\n  if (originalPdfPages.value[page-1] && translatedPdfPages.value[page-1]) {\r\n    const originalHeight = originalPdfPages.value[page-1].$el.clientHeight\r\n    const translatedHeight = translatedPdfPages.value[page-1].$el.clientHeight\r\n    const maxHeight = Math.max(originalHeight, translatedHeight)\r\n\r\n    originalPdfPages.value[page-1].$el.style.minHeight = `${maxHeight}px`\r\n    translatedPdfPages.value[page-1].$el.style.minHeight = `${maxHeight}px`\r\n  }\r\n}\r\n\r\nonMounted(() => {\r\n  if (scrollContainer.value) {\r\n    scrollContainer.value.addEventListener('scroll', () => {\r\n      // 可以在这里添加滚动事件处理\r\n    })\r\n  }\r\n})\r\n\r\nonUnmounted(() => {\r\n  if (scrollContainer.value) {\r\n    scrollContainer.value.removeEventListener('scroll', () => {})\r\n  }\r\n\r\n  // 释放对象URL\r\n  if (originalPdfSource.value) URL.revokeObjectURL(originalPdfSource.value)\r\n  if (ws) ws.close()\r\n})\r\n</script>\r\n\r\n\r\n<style scoped>\r\n/* 样式保持不变 */\r\n.pdf-comparison-container {\r\n  width: 100%;\r\n  height: 100vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.control-panel {\r\n  padding: 20px;\r\n  background: #f5f5f5;\r\n  border-bottom: 1px solid #ddd;\r\n}\r\n\r\n.upload-section {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 20px;\r\n  margin-bottom: 15px;\r\n}\r\n\r\n.upload-box {\r\n  position: relative;\r\n  width: 200px;\r\n  height: 40px;\r\n}\r\n\r\n.file-input {\r\n  opacity: 0;\r\n  position: absolute;\r\n  width: 100%;\r\n  height: 100%;\r\n  cursor: pointer;\r\n}\r\n\r\n.upload-label {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 100%;\r\n  height: 100%;\r\n  border: 1px dashed #ccc;\r\n  border-radius: 4px;\r\n  background: white;\r\n  transition: all 0.3s;\r\n}\r\n\r\n.upload-label:hover {\r\n  border-color: #409eff;\r\n  background: #f0f7ff;\r\n}\r\n\r\n.language-selector {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 10px;\r\n}\r\n\r\n.language-dropdown {\r\n  padding: 5px;\r\n  border: 1px solid #ddd;\r\n  border-radius: 4px;\r\n}\r\n\r\n.action-button {\r\n  padding: 8px 16px;\r\n  background-color: #4CAF50;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  transition: background-color 0.3s;\r\n}\r\n\r\n.action-button:hover {\r\n  background-color: #45a049;\r\n}\r\n\r\n.action-button:disabled {\r\n  background-color: #cccccc;\r\n  cursor: not-allowed;\r\n}\r\n\r\n.progress-section {\r\n  margin-top: 15px;\r\n}\r\n\r\n.progress-container {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 10px;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.progress-bar {\r\n  flex: 1;\r\n  height: 10px;\r\n}\r\n\r\n.progress-text {\r\n  min-width: 40px;\r\n  text-align: right;\r\n}\r\n\r\n.pdf-viewer-wrapper {\r\n  flex: 1;\r\n  width: 100%;\r\n  overflow: hidden;\r\n}\r\n\r\n.scroll-container {\r\n  width: 100%;\r\n  height: 100%;\r\n  overflow-y: auto;\r\n}\r\n\r\n.content-wrapper {\r\n  display: flex;\r\n  min-height: 100%;\r\n}\r\n\r\n.pdf-column {\r\n  flex: 1;\r\n  padding: 15px;\r\n  box-sizing: border-box;\r\n}\r\n\r\n.pdf-header {\r\n  font-weight: bold;\r\n  margin-bottom: 15px;\r\n  padding-bottom: 5px;\r\n  border-bottom: 1px solid #eee;\r\n}\r\n\r\n.original-pdf {\r\n  border-right: 1px solid #ddd;\r\n}\r\n\r\n.vue-pdf-embed {\r\n  margin-bottom: 20px;\r\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.loading {\r\n  text-align: center;\r\n  padding: 20px;\r\n  color: #666;\r\n  background: #f5f5f5;\r\n  margin-top: 10px;\r\n  border-radius: 4px;\r\n}\r\n</style>\r\n"],"mappings":";;;AAyFA,SAASA,GAAG,EAAEC,SAAS,EAAEC,WAAW,QAAQ,KAAK;AACjD,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB;AACA;;AAEA;AACA;;AAEA;;;;;;;;IACA,MAAMC,iBAAiB,GAAGL,GAAG,CAAC,IAAI,CAAC;IACnC,MAAMM,gBAAgB,GAAGN,GAAG,CAAC,EAAE,CAAC;IAChC,MAAMO,gBAAgB,GAAGP,GAAG,CAAC,IAAI,CAAC;;IAElC;IACA,MAAMQ,mBAAmB,GAAGR,GAAG,CAAC,IAAI,CAAC;IACrC,MAAMS,QAAQ,GAAGT,GAAG,CAAC,CAAC,CAAC;IACvB,MAAMU,mBAAmB,GAAGV,GAAG,CAAC,KAAK,CAAC;IACtC,MAAMW,MAAM,GAAGX,GAAG,CAAC,IAAI,CAAC;IACxB,IAAIY,EAAE,GAAG,IAAI;;IAEb;IACA,MAAMC,aAAa,GAAGb,GAAG,CAAC,KAAK,CAAC;IAChC,MAAMc,oBAAoB,GAAGd,GAAG,CAAC,EAAE,CAAC;IACpC,MAAMe,sBAAsB,GAAGf,GAAG,CAAC,EAAE,CAAC;IACtC,MAAMgB,kBAAkB,GAAGhB,GAAG,CAAC,CAAC,CAAC;IACjC,MAAMiB,oBAAoB,GAAGjB,GAAG,CAAC,CAAC,CAAC;;IAEnC;IACA,MAAMkB,eAAe,GAAGlB,GAAG,CAAC,IAAI,CAAC;IACjC,MAAMmB,gBAAgB,GAAGnB,GAAG,CAAC,EAAE,CAAC;IAChC,MAAMoB,kBAAkB,GAAGpB,GAAG,CAAC,EAAE,CAAC;IAClC,MAAMqB,OAAO,GAAGrB,GAAG,CAAC,EAAE,CAAC;;IAEvB;IACA,MAAMsB,gBAAgB,GAAG,MAAOC,KAAK,IAAK;MACxC,MAAMC,IAAI,GAAGD,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;MAClC,IAAI,CAACF,IAAI,IAAIA,IAAI,CAACG,IAAI,KAAK,iBAAiB,EAAE;QAC5CC,KAAK,CAAC,aAAa,CAAC;QACpB;MACF;MAEAtB,gBAAgB,CAACuB,KAAK,GAAGL,IAAI,CAACM,IAAI;MAClCzB,iBAAiB,CAACwB,KAAK,GAAGE,GAAG,CAACC,eAAe,CAACR,IAAI,CAAC;MACnDhB,mBAAmB,CAACqB,KAAK,GAAG,IAAI;MAChChB,aAAa,CAACgB,KAAK,GAAG,KAAK;MAC3BpB,QAAQ,CAACoB,KAAK,GAAG,CAAC;MAClBnB,mBAAmB,CAACmB,KAAK,GAAG,KAAK;MAEjC,IAAI;QACF;QACA,MAAMI,WAAW,GAAGC,QAAQ,CAACC,WAAW,CAAC;UACvCC,GAAG,EAAE/B,iBAAiB,CAACwB,KAAK;UAC5BQ,OAAO,EAAE,yDAAyD;UAClEC,UAAU,EAAE;QACd,CAAC,CAAC;QACF,MAAMC,GAAG,GAAG,MAAMN,WAAW,CAACO,OAAO;QACrCxB,kBAAkB,CAACa,KAAK,GAAGU,GAAG,CAACE,QAAQ;QACvC3B,oBAAoB,CAACe,KAAK,GAAGa,KAAK,CAACC,IAAI,CAAC;UAAEC,MAAM,EAAEL,GAAG,CAACE;QAAS,CAAC,EAAE,CAACI,CAAC,EAAEC,CAAC,KAAKA,CAAC,GAAG,CAAC,CAAC;QAClFjC,aAAa,CAACgB,KAAK,GAAG,IAAI;MAC5B,CAAC,CAAC,OAAOkB,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,YAAY,EAAEA,KAAK,CAAC;QAClC;QACA/B,kBAAkB,CAACa,KAAK,GAAG,EAAE;QAC7Bf,oBAAoB,CAACe,KAAK,GAAGa,KAAK,CAACC,IAAI,CAAC;UAAEC,MAAM,EAAE;QAAG,CAAC,EAAE,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,GAAG,CAAC,CAAC;QACxEjC,aAAa,CAACgB,KAAK,GAAG,IAAI;MAC5B;IACF,CAAC;;IAED;IACA,MAAMoB,kBAAkB,GAAG,MAAAA,CAAA,KAAY;MACrC,IAAI,CAAC5C,iBAAiB,CAACwB,KAAK,EAAE;MAE9B,IAAI;QACF,MAAMqB,SAAS,GAAGC,QAAQ,CAACC,cAAc,CAAC,aAAa,CAAC;QACxD,MAAM5B,IAAI,GAAG0B,SAAS,CAACxB,KAAK,CAAC,CAAC,CAAC;QAE/B,MAAM2B,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;QAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAE/B,IAAI,CAAC;QAC7B6B,QAAQ,CAACE,MAAM,CAAC,UAAU,EAAEhD,gBAAgB,CAACsB,KAAK,CAAC;QACnDwB,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAE/B,IAAI,CAACM,IAAI,CAAC;QAEnCT,OAAO,CAACQ,KAAK,GAAG,OAAO;QACvB,MAAM2B,QAAQ,GAAG,MAAMpD,KAAK,CAACqD,IAAI,CAAC,yCAAyC,EAAEJ,QAAQ,EAAE;UACrFK,OAAO,EAAE;YACP,cAAc,EAAE;UAClB;QACF,CAAC,CAAC;QAEF/C,MAAM,CAACkB,KAAK,GAAG2B,QAAQ,CAACG,IAAI,CAACC,OAAO;;QAEpC;QACAhD,EAAE,GAAG,IAAIiD,SAAS,CAAC,uCAAuClD,MAAM,CAACkB,KAAK,GAAG,CAAC;QAE1EjB,EAAE,CAACkD,MAAM,GAAG,MAAM;UAChBd,OAAO,CAACe,GAAG,CAAC,gBAAgB,CAAC;UAC7BnD,EAAE,CAACoD,IAAI,CAACC,IAAI,CAACC,SAAS,CAAC;YAACvC,IAAI,EAAE,MAAM;YAAEiC,OAAO,EAAEjD,MAAM,CAACkB;UAAK,CAAC,CAAC,CAAC;QAChE,CAAC;QAEDjB,EAAE,CAACuD,SAAS,GAAI5C,KAAK,IAAK;UACxB,MAAMoC,IAAI,GAAGM,IAAI,CAACG,KAAK,CAAC7C,KAAK,CAACoC,IAAI,CAAC;UACnC,IAAIA,IAAI,CAAClD,QAAQ,KAAK4D,SAAS,EAAE;YAC/BhD,OAAO,CAACQ,KAAK,GAAG,EAAE;YAClBpB,QAAQ,CAACoB,KAAK,GAAG8B,IAAI,CAAClD,QAAQ;YAC9B,IAAIkD,IAAI,CAAClD,QAAQ,IAAI,GAAG,EAAE;cACxBC,mBAAmB,CAACmB,KAAK,GAAG,IAAI;YAClC;UACF;QACF,CAAC;QAEDjB,EAAE,CAAC0D,OAAO,GAAIvB,KAAK,IAAK;UACtBC,OAAO,CAACD,KAAK,CAAC,cAAc,EAAEA,KAAK,CAAC;QACtC,CAAC;QAEDnC,EAAE,CAAC2D,OAAO,GAAG,MAAM;UACjBvB,OAAO,CAACe,GAAG,CAAC,gBAAgB,CAAC;QAC/B,CAAC;MAEH,CAAC,CAAC,OAAOhB,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,YAAY,EAAEA,KAAK,CAAC;MACpC;IACF,CAAC;;IAED;IACA,MAAMyB,iBAAiB,GAAG,MAAAA,CAAA,KAAY;MACpC,IAAI,CAAC7D,MAAM,CAACkB,KAAK,EAAE;MAEnB,IAAI;QACF,MAAMO,GAAG,GAAG,4CAA4CzB,MAAM,CAACkB,KAAK,OAAO4C,IAAI,CAACC,GAAG,CAAC,CAAC,EAAE;QACvFlE,mBAAmB,CAACqB,KAAK,GAAGO,GAAG;;QAE/B;QACA,MAAMH,WAAW,GAAGC,QAAQ,CAACC,WAAW,CAAC;UACvCC,GAAG,EAAE5B,mBAAmB,CAACqB,KAAK;UAC9BQ,OAAO,EAAE,yDAAyD;UAClEC,UAAU,EAAE;QACd,CAAC,CAAC;QACF,MAAMC,GAAG,GAAG,MAAMN,WAAW,CAACO,OAAO;QACrCvB,oBAAoB,CAACY,KAAK,GAAGU,GAAG,CAACE,QAAQ;QACzC1B,sBAAsB,CAACc,KAAK,GAAGa,KAAK,CAACC,IAAI,CAAC;UAAEC,MAAM,EAAEL,GAAG,CAACE;QAAS,CAAC,EAAE,CAACI,CAAC,EAAEC,CAAC,KAAKA,CAAC,GAAG,CAAC,CAAC;QAEpFjC,aAAa,CAACgB,KAAK,GAAG,IAAI;MAC5B,CAAC,CAAC,OAAOkB,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,WAAW,EAAEA,KAAK,CAAC;QACjC;QACA9B,oBAAoB,CAACY,KAAK,GAAG,EAAE;QAC/Bd,sBAAsB,CAACc,KAAK,GAAGa,KAAK,CAACC,IAAI,CAAC;UAAEC,MAAM,EAAE;QAAG,CAAC,EAAE,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,GAAG,CAAC,CAAC;QAC1EjC,aAAa,CAACgB,KAAK,GAAG,IAAI;MAC5B;IACF,CAAC;;IAED;IACA,MAAM8C,cAAc,GAAGA,CAAChD,IAAI,EAAEiD,IAAI,KAAK;MACrC5B,OAAO,CAACe,GAAG,CAAC,GAAGpC,IAAI,UAAUiD,IAAI,QAAQ,CAAC;;MAE1C;MACA,IAAIzD,gBAAgB,CAACU,KAAK,CAAC+C,IAAI,GAAC,CAAC,CAAC,IAAIxD,kBAAkB,CAACS,KAAK,CAAC+C,IAAI,GAAC,CAAC,CAAC,EAAE;QACtE,MAAMC,cAAc,GAAG1D,gBAAgB,CAACU,KAAK,CAAC+C,IAAI,GAAC,CAAC,CAAC,CAACE,GAAG,CAACC,YAAY;QACtE,MAAMC,gBAAgB,GAAG5D,kBAAkB,CAACS,KAAK,CAAC+C,IAAI,GAAC,CAAC,CAAC,CAACE,GAAG,CAACC,YAAY;QAC1E,MAAME,SAAS,GAAGC,IAAI,CAACC,GAAG,CAACN,cAAc,EAAEG,gBAAgB,CAAC;QAE5D7D,gBAAgB,CAACU,KAAK,CAAC+C,IAAI,GAAC,CAAC,CAAC,CAACE,GAAG,CAACM,KAAK,CAACC,SAAS,GAAG,GAAGJ,SAAS,IAAI;QACrE7D,kBAAkB,CAACS,KAAK,CAAC+C,IAAI,GAAC,CAAC,CAAC,CAACE,GAAG,CAACM,KAAK,CAACC,SAAS,GAAG,GAAGJ,SAAS,IAAI;MACzE;IACF,CAAC;IAEDhF,SAAS,CAAC,MAAM;MACd,IAAIiB,eAAe,CAACW,KAAK,EAAE;QACzBX,eAAe,CAACW,KAAK,CAACyD,gBAAgB,CAAC,QAAQ,EAAE,MAAM;UACrD;QAAA,CACD,CAAC;MACJ;IACF,CAAC,CAAC;IAEFpF,WAAW,CAAC,MAAM;MAChB,IAAIgB,eAAe,CAACW,KAAK,EAAE;QACzBX,eAAe,CAACW,KAAK,CAAC0D,mBAAmB,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC,CAAC;MAC/D;;MAEA;MACA,IAAIlF,iBAAiB,CAACwB,KAAK,EAAEE,GAAG,CAACyD,eAAe,CAACnF,iBAAiB,CAACwB,KAAK,CAAC;MACzE,IAAIjB,EAAE,EAAEA,EAAE,CAAC6E,KAAK,CAAC,CAAC;IACpB,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}