{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"button\", {\n    onClick: $setup.startProgress\n  }, \"开始任务\"), _createElementVNode(\"div\", null, \"进度: \" + _toDisplayString($setup.progress) + \"%\", 1 /* TEXT */), _createElementVNode(\"div\", null, \"状态: \" + _toDisplayString($setup.status), 1 /* TEXT */)]);\n}","map":{"version":3,"names":["_createElementBlock","_createElementVNode","onClick","$setup","startProgress","_toDisplayString","progress","status"],"sources":["D:\\Study\\Code\\AICloud\\front\\src\\components\\socketTest.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <button @click=\"startProgress\">开始任务</button>\r\n    <div>进度: {{ progress }}%</div>\r\n    <div>状态: {{ status }}</div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref } from 'vue'\r\n\r\nconst progress = ref(0)\r\nconst status = ref('等待开始')\r\nlet socket = null\r\n\r\nconst startProgress = () => {\r\n  if (socket && socket.readyState === WebSocket.OPEN) {\r\n    socket.close()\r\n  }\r\n\r\n  socket = new WebSocket('ws://127.0.0.1:8000/ws/progress/')\r\n\r\n  socket.onopen = () => {\r\n    socket.send(JSON.stringify({ message: 'start' }))\r\n    status.value = '连接已建立'\r\n  }\r\n\r\n  socket.onmessage = (e) => {\r\n    const data = JSON.parse(e.data)\r\n    progress.value = data.progress\r\n    status.value = data.status\r\n  }\r\n\r\n  socket.onclose = () => {\r\n    status.value = '连接已关闭'\r\n  }\r\n}\r\n</script>"],"mappings":";;uBACEA,mBAAA,CAIM,cAHJC,mBAAA,CAA4C;IAAnCC,OAAK,EAAEC,MAAA,CAAAC;EAAa,GAAE,MAAI,GACnCH,mBAAA,CAA8B,aAAzB,MAAI,GAAAI,gBAAA,CAAGF,MAAA,CAAAG,QAAQ,IAAG,GAAC,iBACxBL,mBAAA,CAA2B,aAAtB,MAAI,GAAAI,gBAAA,CAAGF,MAAA,CAAAI,MAAM,iB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}