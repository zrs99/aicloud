{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport VuePdfEmbed from 'vue-pdf-embed';\nimport { ref, onMounted, onUnmounted } from 'vue';\nexport default {\n  components: {\n    VuePdfEmbed\n  },\n  setup() {\n    const pdfSource = ref('your-pdf-file.pdf');\n    const totalPages = ref(0);\n    const visiblePages = ref([1, 2, 3]);\n    const loading = ref(false);\n    const lastPageLoaded = ref(3);\n    const loadMorePages = () => {\n      if (loading.value || lastPageLoaded.value >= totalPages.value) return;\n      loading.value = true;\n      const newPages = [];\n      const pagesToLoad = Math.min(2, totalPages.value - lastPageLoaded.value);\n      for (let i = 1; i <= pagesToLoad; i++) {\n        newPages.push(lastPageLoaded.value + i);\n      }\n      visiblePages.value = [...visiblePages.value, ...newPages];\n      lastPageLoaded.value += pagesToLoad;\n      loading.value = false;\n    };\n    const handleScroll = () => {\n      const scrollPosition = window.scrollY + window.innerHeight;\n      const documentHeight = document.documentElement.scrollHeight;\n      if (documentHeight - scrollPosition < 500) {\n        loadMorePages();\n      }\n    };\n    const onPageRendered = () => {\n      // 可以在这里添加渲染完成后的逻辑\n    };\n    onMounted(() => {\n      // 获取PDF总页数\n      // 实际应用中可能需要使用PDF.js API获取总页数\n      totalPages.value = 10; // 假设总页数为10\n      window.addEventListener('scroll', handleScroll);\n    });\n    onUnmounted(() => {\n      window.removeEventListener('scroll', handleScroll);\n    });\n    return {\n      pdfSource,\n      visiblePages,\n      loading,\n      onPageRendered\n    };\n  }\n};","map":{"version":3,"names":["VuePdfEmbed","ref","onMounted","onUnmounted","components","setup","pdfSource","totalPages","visiblePages","loading","lastPageLoaded","loadMorePages","value","newPages","pagesToLoad","Math","min","i","push","handleScroll","scrollPosition","window","scrollY","innerHeight","documentHeight","document","documentElement","scrollHeight","onPageRendered","addEventListener","removeEventListener"],"sources":["D:\\Study\\Code\\AICloud\\front\\src\\components\\PDFViewer.vue"],"sourcesContent":["<template>\r\n  <div class=\"pdf-viewer\">\r\n    <div v-for=\"page in visiblePages\" :key=\"page\">\r\n      <vue-pdf-embed\r\n        :source=\"pdfSource\"\r\n        :page=\"page\"\r\n        @rendered=\"onPageRendered\"\r\n      />\r\n    </div>\r\n    <div v-if=\"loading\" class=\"loading\">加载中...</div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport VuePdfEmbed from 'vue-pdf-embed'\r\nimport { ref, onMounted, onUnmounted } from 'vue'\r\n\r\nexport default {\r\n  components: {\r\n    VuePdfEmbed\r\n  },\r\n  setup() {\r\n    const pdfSource = ref('your-pdf-file.pdf')\r\n    const totalPages = ref(0)\r\n    const visiblePages = ref([1, 2, 3])\r\n    const loading = ref(false)\r\n    const lastPageLoaded = ref(3)\r\n\r\n    const loadMorePages = () => {\r\n      if (loading.value || lastPageLoaded.value >= totalPages.value) return\r\n\r\n      loading.value = true\r\n      const newPages = []\r\n      const pagesToLoad = Math.min(2, totalPages.value - lastPageLoaded.value)\r\n\r\n      for (let i = 1; i <= pagesToLoad; i++) {\r\n        newPages.push(lastPageLoaded.value + i)\r\n      }\r\n\r\n      visiblePages.value = [...visiblePages.value, ...newPages]\r\n      lastPageLoaded.value += pagesToLoad\r\n      loading.value = false\r\n    }\r\n\r\n    const handleScroll = () => {\r\n      const scrollPosition = window.scrollY + window.innerHeight\r\n      const documentHeight = document.documentElement.scrollHeight\r\n\r\n      if (documentHeight - scrollPosition < 500) {\r\n        loadMorePages()\r\n      }\r\n    }\r\n\r\n    const onPageRendered = () => {\r\n      // 可以在这里添加渲染完成后的逻辑\r\n    }\r\n\r\n    onMounted(() => {\r\n      // 获取PDF总页数\r\n      // 实际应用中可能需要使用PDF.js API获取总页数\r\n      totalPages.value = 10 // 假设总页数为10\r\n      window.addEventListener('scroll', handleScroll)\r\n    })\r\n\r\n    onUnmounted(() => {\r\n      window.removeEventListener('scroll', handleScroll)\r\n    })\r\n\r\n    return {\r\n      pdfSource,\r\n      visiblePages,\r\n      loading,\r\n      onPageRendered\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n.pdf-viewer {\r\n  max-width: 800px;\r\n  margin: 0 auto;\r\n}\r\n\r\n.loading {\r\n  text-align: center;\r\n  padding: 20px;\r\n}\r\n</style>"],"mappings":";AAcA,OAAOA,WAAU,MAAO,eAAc;AACtC,SAASC,GAAG,EAAEC,SAAS,EAAEC,WAAU,QAAS,KAAI;AAEhD,eAAe;EACbC,UAAU,EAAE;IACVJ;EACF,CAAC;EACDK,KAAKA,CAAA,EAAG;IACN,MAAMC,SAAQ,GAAIL,GAAG,CAAC,mBAAmB;IACzC,MAAMM,UAAS,GAAIN,GAAG,CAAC,CAAC;IACxB,MAAMO,YAAW,GAAIP,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IAClC,MAAMQ,OAAM,GAAIR,GAAG,CAAC,KAAK;IACzB,MAAMS,cAAa,GAAIT,GAAG,CAAC,CAAC;IAE5B,MAAMU,aAAY,GAAIA,CAAA,KAAM;MAC1B,IAAIF,OAAO,CAACG,KAAI,IAAKF,cAAc,CAACE,KAAI,IAAKL,UAAU,CAACK,KAAK,EAAE;MAE/DH,OAAO,CAACG,KAAI,GAAI,IAAG;MACnB,MAAMC,QAAO,GAAI,EAAC;MAClB,MAAMC,WAAU,GAAIC,IAAI,CAACC,GAAG,CAAC,CAAC,EAAET,UAAU,CAACK,KAAI,GAAIF,cAAc,CAACE,KAAK;MAEvE,KAAK,IAAIK,CAAA,GAAI,CAAC,EAAEA,CAAA,IAAKH,WAAW,EAAEG,CAAC,EAAE,EAAE;QACrCJ,QAAQ,CAACK,IAAI,CAACR,cAAc,CAACE,KAAI,GAAIK,CAAC;MACxC;MAEAT,YAAY,CAACI,KAAI,GAAI,CAAC,GAAGJ,YAAY,CAACI,KAAK,EAAE,GAAGC,QAAQ;MACxDH,cAAc,CAACE,KAAI,IAAKE,WAAU;MAClCL,OAAO,CAACG,KAAI,GAAI,KAAI;IACtB;IAEA,MAAMO,YAAW,GAAIA,CAAA,KAAM;MACzB,MAAMC,cAAa,GAAIC,MAAM,CAACC,OAAM,GAAID,MAAM,CAACE,WAAU;MACzD,MAAMC,cAAa,GAAIC,QAAQ,CAACC,eAAe,CAACC,YAAW;MAE3D,IAAIH,cAAa,GAAIJ,cAAa,GAAI,GAAG,EAAE;QACzCT,aAAa,CAAC;MAChB;IACF;IAEA,MAAMiB,cAAa,GAAIA,CAAA,KAAM;MAC3B;IAAA,CACF;IAEA1B,SAAS,CAAC,MAAM;MACd;MACA;MACAK,UAAU,CAACK,KAAI,GAAI,EAAC,EAAE;MACtBS,MAAM,CAACQ,gBAAgB,CAAC,QAAQ,EAAEV,YAAY;IAChD,CAAC;IAEDhB,WAAW,CAAC,MAAM;MAChBkB,MAAM,CAACS,mBAAmB,CAAC,QAAQ,EAAEX,YAAY;IACnD,CAAC;IAED,OAAO;MACLb,SAAS;MACTE,YAAY;MACZC,OAAO;MACPmB;IACF;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}