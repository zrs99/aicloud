{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport VuePdfEmbed from 'vue-pdf-embed';\nimport { ref, onMounted, onUnmounted } from 'vue';\nexport default {\n  components: {\n    VuePdfEmbed\n  },\n  setup() {\n    // PDF源文件\n    const leftPdfSource = ref('111.pdf');\n    const rightPdfSource = ref('111_qs9p2cE-mono.pdf');\n\n    // 页面状态\n    const leftVisiblePages = ref([1, 2, 3]);\n    const rightVisiblePages = ref([1, 2, 3]);\n    const leftLoading = ref(false);\n    const rightLoading = ref(false);\n    const lastLeftPage = ref(3);\n    const lastRightPage = ref(3);\n    const totalPages = ref({\n      left: 10,\n      // 假设左侧PDF共10页\n      right: 8 // 假设右侧PDF共8页\n    });\n\n    // DOM引用\n    const leftViewer = ref(null);\n    const rightViewer = ref(null);\n    const leftPdfPages = ref([]);\n    const rightPdfPages = ref([]);\n\n    // 同步滚动处理\n    let isSyncingScroll = false;\n    const syncScroll = (source, target) => {\n      if (isSyncingScroll) return;\n      isSyncingScroll = true;\n      const sourceEl = source.value;\n      const targetEl = target.value;\n\n      // 计算滚动比例\n      const sourceScrollRatio = sourceEl.scrollTop / (sourceEl.scrollHeight - sourceEl.clientHeight);\n      const targetScrollTo = sourceScrollRatio * (targetEl.scrollHeight - targetEl.clientHeight);\n      targetEl.scrollTo({\n        top: targetScrollTo,\n        behavior: 'auto'\n      });\n      setTimeout(() => {\n        isSyncingScroll = false;\n      }, 100);\n    };\n\n    // 滚动事件处理\n    const handleLeftScroll = () => syncScroll(leftViewer, rightViewer);\n    const handleRightScroll = () => syncScroll(rightViewer, leftViewer);\n\n    // 加载更多页面\n    const loadMorePages = side => {\n      const isLeft = side === 'left';\n      const lastPage = isLeft ? lastLeftPage : lastRightPage;\n      const total = isLeft ? totalPages.value.left : totalPages.value.right;\n      if ((isLeft ? leftLoading : rightLoading).value || lastPage.value >= total) return;\n      isLeft ? leftLoading.value = true : rightLoading.value = true;\n      const newPages = [];\n      const pagesToLoad = Math.min(2, total - lastPage.value);\n      for (let i = 1; i <= pagesToLoad; i++) {\n        newPages.push(lastPage.value + i);\n      }\n      if (isLeft) {\n        leftVisiblePages.value = [...leftVisiblePages.value, ...newPages];\n      } else {\n        rightVisiblePages.value = [...rightVisiblePages.value, ...newPages];\n      }\n      lastPage.value += pagesToLoad;\n      setTimeout(() => {\n        isLeft ? leftLoading.value = false : rightLoading.value = false;\n      }, 300);\n    };\n\n    // 检查是否需要加载更多\n    const checkLoadMore = () => {\n      const leftScrollPos = leftViewer.value.scrollTop + leftViewer.value.clientHeight;\n      const leftHeight = leftViewer.value.scrollHeight;\n      const rightScrollPos = rightViewer.value.scrollTop + rightViewer.value.clientHeight;\n      const rightHeight = rightViewer.value.scrollHeight;\n      if (leftHeight - leftScrollPos < 500) loadMorePages('left');\n      if (rightHeight - rightScrollPos < 500) loadMorePages('right');\n    };\n\n    // 页面渲染回调\n    const onPageRendered = side => {\n      // 可以在这里添加页面渲染后的逻辑\n      console.log(`${side} PDF 页面渲染完成`);\n    };\n    onMounted(() => {\n      leftViewer.value.addEventListener('scroll', handleLeftScroll);\n      rightViewer.value.addEventListener('scroll', handleRightScroll);\n\n      // 添加滚动检查定时器\n      const scrollCheckInterval = setInterval(checkLoadMore, 500);\n      onUnmounted(() => {\n        clearInterval(scrollCheckInterval);\n        leftViewer.value?.removeEventListener('scroll', handleLeftScroll);\n        rightViewer.value?.removeEventListener('scroll', handleRightScroll);\n      });\n    });\n    return {\n      leftPdfSource,\n      rightPdfSource,\n      leftVisiblePages,\n      rightVisiblePages,\n      leftLoading,\n      rightLoading,\n      leftViewer,\n      rightViewer,\n      leftPdfPages,\n      rightPdfPages,\n      onPageRendered\n    };\n  }\n};","map":{"version":3,"names":["VuePdfEmbed","ref","onMounted","onUnmounted","components","setup","leftPdfSource","rightPdfSource","leftVisiblePages","rightVisiblePages","leftLoading","rightLoading","lastLeftPage","lastRightPage","totalPages","left","right","leftViewer","rightViewer","leftPdfPages","rightPdfPages","isSyncingScroll","syncScroll","source","target","sourceEl","value","targetEl","sourceScrollRatio","scrollTop","scrollHeight","clientHeight","targetScrollTo","scrollTo","top","behavior","setTimeout","handleLeftScroll","handleRightScroll","loadMorePages","side","isLeft","lastPage","total","newPages","pagesToLoad","Math","min","i","push","checkLoadMore","leftScrollPos","leftHeight","rightScrollPos","rightHeight","onPageRendered","console","log","addEventListener","scrollCheckInterval","setInterval","clearInterval","removeEventListener"],"sources":["D:\\Study\\Code\\AICloud\\front\\src\\components\\PDFViewer.vue"],"sourcesContent":["<template>\r\n  <div class=\"pdf-container\">\r\n    <!-- 左侧PDF -->\r\n    <div class=\"pdf-viewer\" ref=\"leftViewer\">\r\n      <div v-for=\"page in leftVisiblePages\" :key=\"'left-'+page\">\r\n        <vue-pdf-embed\r\n          :source=\"leftPdfSource\"\r\n          :page=\"page\"\r\n          @rendered=\"onPageRendered('left')\"\r\n          ref=\"leftPdfPages\"\r\n        />\r\n      </div>\r\n      <div v-if=\"leftLoading\" class=\"loading\">左侧加载中...</div>\r\n    </div>\r\n\r\n    <!-- 右侧PDF -->\r\n    <div class=\"pdf-viewer\" ref=\"rightViewer\">\r\n      <div v-for=\"page in rightVisiblePages\" :key=\"'right-'+page\">\r\n        <vue-pdf-embed\r\n          :source=\"rightPdfSource\"\r\n          :page=\"page\"\r\n          @rendered=\"onPageRendered('right')\"\r\n          ref=\"rightPdfPages\"\r\n        />\r\n      </div>\r\n      <div v-if=\"rightLoading\" class=\"loading\">右侧加载中...</div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport VuePdfEmbed from 'vue-pdf-embed'\r\nimport { ref, onMounted, onUnmounted } from 'vue'\r\n\r\nexport default {\r\n  components: {\r\n    VuePdfEmbed\r\n  },\r\n  setup() {\r\n    // PDF源文件\r\n    const leftPdfSource = ref('111.pdf')\r\n    const rightPdfSource = ref('111_qs9p2cE-mono.pdf')\r\n\r\n    // 页面状态\r\n    const leftVisiblePages = ref([1, 2, 3])\r\n    const rightVisiblePages = ref([1, 2, 3])\r\n    const leftLoading = ref(false)\r\n    const rightLoading = ref(false)\r\n    const lastLeftPage = ref(3)\r\n    const lastRightPage = ref(3)\r\n    const totalPages = ref({\r\n      left: 10, // 假设左侧PDF共10页\r\n      right: 8  // 假设右侧PDF共8页\r\n    })\r\n\r\n    // DOM引用\r\n    const leftViewer = ref(null)\r\n    const rightViewer = ref(null)\r\n    const leftPdfPages = ref([])\r\n    const rightPdfPages = ref([])\r\n\r\n    // 同步滚动处理\r\n    let isSyncingScroll = false\r\n    const syncScroll = (source, target) => {\r\n      if (isSyncingScroll) return\r\n      isSyncingScroll = true\r\n\r\n      const sourceEl = source.value\r\n      const targetEl = target.value\r\n\r\n      // 计算滚动比例\r\n      const sourceScrollRatio = sourceEl.scrollTop / (sourceEl.scrollHeight - sourceEl.clientHeight)\r\n      const targetScrollTo = sourceScrollRatio * (targetEl.scrollHeight - targetEl.clientHeight)\r\n\r\n      targetEl.scrollTo({\r\n        top: targetScrollTo,\r\n        behavior: 'auto'\r\n      })\r\n\r\n      setTimeout(() => {\r\n        isSyncingScroll = false\r\n      }, 100)\r\n    }\r\n\r\n    // 滚动事件处理\r\n    const handleLeftScroll = () => syncScroll(leftViewer, rightViewer)\r\n    const handleRightScroll = () => syncScroll(rightViewer, leftViewer)\r\n\r\n    // 加载更多页面\r\n    const loadMorePages = (side) => {\r\n      const isLeft = side === 'left'\r\n      const lastPage = isLeft ? lastLeftPage : lastRightPage\r\n      const total = isLeft ? totalPages.value.left : totalPages.value.right\r\n\r\n      if ((isLeft ? leftLoading : rightLoading).value || lastPage.value >= total) return\r\n\r\n      isLeft ? leftLoading.value = true : rightLoading.value = true\r\n      const newPages = []\r\n      const pagesToLoad = Math.min(2, total - lastPage.value)\r\n\r\n      for (let i = 1; i <= pagesToLoad; i++) {\r\n        newPages.push(lastPage.value + i)\r\n      }\r\n\r\n      if (isLeft) {\r\n        leftVisiblePages.value = [...leftVisiblePages.value, ...newPages]\r\n      } else {\r\n        rightVisiblePages.value = [...rightVisiblePages.value, ...newPages]\r\n      }\r\n\r\n      lastPage.value += pagesToLoad\r\n      setTimeout(() => {\r\n        isLeft ? leftLoading.value = false : rightLoading.value = false\r\n      }, 300)\r\n    }\r\n\r\n    // 检查是否需要加载更多\r\n    const checkLoadMore = () => {\r\n      const leftScrollPos = leftViewer.value.scrollTop + leftViewer.value.clientHeight\r\n      const leftHeight = leftViewer.value.scrollHeight\r\n\r\n      const rightScrollPos = rightViewer.value.scrollTop + rightViewer.value.clientHeight\r\n      const rightHeight = rightViewer.value.scrollHeight\r\n\r\n      if (leftHeight - leftScrollPos < 500) loadMorePages('left')\r\n      if (rightHeight - rightScrollPos < 500) loadMorePages('right')\r\n    }\r\n\r\n    // 页面渲染回调\r\n    const onPageRendered = (side) => {\r\n      // 可以在这里添加页面渲染后的逻辑\r\n      console.log(`${side} PDF 页面渲染完成`)\r\n    }\r\n\r\n    onMounted(() => {\r\n      leftViewer.value.addEventListener('scroll', handleLeftScroll)\r\n      rightViewer.value.addEventListener('scroll', handleRightScroll)\r\n\r\n      // 添加滚动检查定时器\r\n      const scrollCheckInterval = setInterval(checkLoadMore, 500)\r\n\r\n      onUnmounted(() => {\r\n        clearInterval(scrollCheckInterval)\r\n        leftViewer.value?.removeEventListener('scroll', handleLeftScroll)\r\n        rightViewer.value?.removeEventListener('scroll', handleRightScroll)\r\n      })\r\n    })\r\n\r\n    return {\r\n      leftPdfSource,\r\n      rightPdfSource,\r\n      leftVisiblePages,\r\n      rightVisiblePages,\r\n      leftLoading,\r\n      rightLoading,\r\n      leftViewer,\r\n      rightViewer,\r\n      leftPdfPages,\r\n      rightPdfPages,\r\n      onPageRendered\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.pdf-container {\r\n  display: flex;\r\n  height: 100vh;\r\n  overflow: hidden;\r\n}\r\n\r\n.pdf-viewer {\r\n  flex: 1;\r\n  height: 100%;\r\n  overflow-y: auto;\r\n  padding: 20px;\r\n  box-sizing: border-box;\r\n  position: relative;\r\n}\r\n\r\n.pdf-viewer:first-child {\r\n  border-right: 1px solid #ddd;\r\n}\r\n\r\n.loading {\r\n  text-align: center;\r\n  padding: 20px;\r\n  color: #666;\r\n  background: #f5f5f5;\r\n  margin-top: 10px;\r\n  border-radius: 4px;\r\n}\r\n\r\n/* 确保PDF页面有间距 */\r\n.vue-pdf-embed {\r\n  margin-bottom: 20px;\r\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}