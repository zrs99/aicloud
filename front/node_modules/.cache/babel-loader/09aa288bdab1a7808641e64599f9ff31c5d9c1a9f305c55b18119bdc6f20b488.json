{"ast":null,"code":"import { ref } from 'vue';\nexport default {\n  __name: 'socketTest',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const progress = ref(0);\n    const status = ref('等待开始');\n    let socket = null;\n    const startProgress = () => {\n      if (socket && socket.readyState === WebSocket.OPEN) {\n        socket.close();\n      }\n      socket = new WebSocket('ws://127.0.0.1:8000/ws/progress/');\n      socket.onopen = () => {\n        socket.send(JSON.stringify({\n          message: 'start'\n        }));\n        status.value = '连接已建立';\n      };\n      socket.onmessage = e => {\n        const data = JSON.parse(e.data);\n        progress.value = data.progress;\n        status.value = data.status;\n      };\n      socket.onclose = () => {\n        status.value = '连接已关闭';\n      };\n    };\n    const __returned__ = {\n      progress,\n      status,\n      get socket() {\n        return socket;\n      },\n      set socket(v) {\n        socket = v;\n      },\n      startProgress,\n      ref\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","progress","status","socket","startProgress","readyState","WebSocket","OPEN","close","onopen","send","JSON","stringify","message","value","onmessage","e","data","parse","onclose"],"sources":["D:/Study/Code/AICloud/front/src/components/socketTest.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <button @click=\"startProgress\">开始任务</button>\r\n    <div>进度: {{ progress }}%</div>\r\n    <div>状态: {{ status }}</div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref } from 'vue'\r\n\r\nconst progress = ref(0)\r\nconst status = ref('等待开始')\r\nlet socket = null\r\n\r\nconst startProgress = () => {\r\n  if (socket && socket.readyState === WebSocket.OPEN) {\r\n    socket.close()\r\n  }\r\n\r\n  socket = new WebSocket('ws://127.0.0.1:8000/ws/progress/')\r\n\r\n  socket.onopen = () => {\r\n    socket.send(JSON.stringify({ message: 'start' }))\r\n    status.value = '连接已建立'\r\n  }\r\n\r\n  socket.onmessage = (e) => {\r\n    const data = JSON.parse(e.data)\r\n    progress.value = data.progress\r\n    status.value = data.status\r\n  }\r\n\r\n  socket.onclose = () => {\r\n    status.value = '连接已关闭'\r\n  }\r\n}\r\n</script>"],"mappings":"AASA,SAASA,GAAG,QAAQ,KAAK;;;;;;;IAEzB,MAAMC,QAAQ,GAAGD,GAAG,CAAC,CAAC,CAAC;IACvB,MAAME,MAAM,GAAGF,GAAG,CAAC,MAAM,CAAC;IAC1B,IAAIG,MAAM,GAAG,IAAI;IAEjB,MAAMC,aAAa,GAAGA,CAAA,KAAM;MAC1B,IAAID,MAAM,IAAIA,MAAM,CAACE,UAAU,KAAKC,SAAS,CAACC,IAAI,EAAE;QAClDJ,MAAM,CAACK,KAAK,CAAC,CAAC;MAChB;MAEAL,MAAM,GAAG,IAAIG,SAAS,CAAC,kCAAkC,CAAC;MAE1DH,MAAM,CAACM,MAAM,GAAG,MAAM;QACpBN,MAAM,CAACO,IAAI,CAACC,IAAI,CAACC,SAAS,CAAC;UAAEC,OAAO,EAAE;QAAQ,CAAC,CAAC,CAAC;QACjDX,MAAM,CAACY,KAAK,GAAG,OAAO;MACxB,CAAC;MAEDX,MAAM,CAACY,SAAS,GAAIC,CAAC,IAAK;QACxB,MAAMC,IAAI,GAAGN,IAAI,CAACO,KAAK,CAACF,CAAC,CAACC,IAAI,CAAC;QAC/BhB,QAAQ,CAACa,KAAK,GAAGG,IAAI,CAAChB,QAAQ;QAC9BC,MAAM,CAACY,KAAK,GAAGG,IAAI,CAACf,MAAM;MAC5B,CAAC;MAEDC,MAAM,CAACgB,OAAO,GAAG,MAAM;QACrBjB,MAAM,CAACY,KAAK,GAAG,OAAO;MACxB,CAAC;IACH,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}