{"ast":null,"code":"import \"core-js/modules/web.url-search-params.delete.js\";\nimport \"core-js/modules/web.url-search-params.has.js\";\nimport \"core-js/modules/web.url-search-params.size.js\";\nimport VuePdfEmbed from 'vue-pdf-embed';\nimport { ref, onMounted, onUnmounted } from 'vue';\nimport axios from 'axios';\nexport default {\n  components: {\n    VuePdfEmbed\n  },\n  setup() {\n    // 文件上传相关\n    const originalPdfSource = ref(null);\n    const originalFileName = ref('');\n    const selectedLanguage = ref('zh');\n\n    // 翻译相关\n    const translatedPdfSource = ref(null);\n    const progress = ref(0);\n    const translationComplete = ref(false);\n    const taskId = ref(null);\n    let ws = null;\n\n    // PDF展示相关\n    const showPdfViewer = ref(false);\n    const visiblePages = ref([]); // 修改为动态页面数组\n    const loading = ref(false);\n    const totalPages = ref(0); // 修改为动态总页数\n    const pdfDocument = ref(null); // 用于存储PDF文档对象\n\n    // DOM引用\n    const scrollContainer = ref(null);\n    const originalPdfPages = ref([]);\n    const translatedPdfPages = ref([]);\n    const message = ref('');\n\n    // 处理文件上传\n    const handleFileUpload = async event => {\n      const file = event.target.files[0];\n      if (!file || file.type !== 'application/pdf') {\n        alert('请上传有效的PDF文件');\n        return;\n      }\n      originalFileName.value = file.name;\n      originalPdfSource.value = URL.createObjectURL(file);\n      translatedPdfSource.value = null;\n      showPdfViewer.value = false;\n      progress.value = 0;\n      translationComplete.value = false;\n\n      // 获取PDF总页数\n      await getPdfPageCount(file);\n    };\n\n    // 获取PDF总页数\n    const getPdfPageCount = async file => {\n      try {\n        const arrayBuffer = await file.arrayBuffer();\n        const pdf = await window.pdfjsLib.getDocument(arrayBuffer).promise;\n        totalPages.value = pdf.numPages;\n        pdfDocument.value = pdf;\n\n        // 初始化显示所有页面\n        visiblePages.value = Array.from({\n          length: totalPages.value\n        }, (_, i) => i + 1);\n      } catch (error) {\n        console.error('获取PDF页数失败:', error);\n      }\n    };\n\n    // 上传并翻译文件\n    const uploadAndTranslate = async () => {\n      // ... 保持原有逻辑不变 ...\n    };\n\n    // 加载翻译后的PDF\n    const loadTranslatedPdf = async () => {\n      if (!taskId.value) return;\n      try {\n        const url = `http://10.241.109.58:8000/blogs/download/${taskId.value}/?t=${Date.now()}`;\n        translatedPdfSource.value = url;\n        showPdfViewer.value = true;\n\n        // 翻译后的PDF使用相同的页面数\n        visiblePages.value = Array.from({\n          length: totalPages.value\n        }, (_, i) => i + 1);\n      } catch (error) {\n        console.error('加载翻译结果失败:', error);\n      }\n    };\n\n    // 页面渲染回调\n    const onPageRendered = (type, page) => {\n      console.log(`${type} PDF 第 ${page} 页渲染完成`);\n      if (originalPdfPages.value[page - 1] && translatedPdfPages.value[page - 1]) {\n        const originalHeight = originalPdfPages.value[page - 1].$el.clientHeight;\n        const translatedHeight = translatedPdfPages.value[page - 1].$el.clientHeight;\n        const maxHeight = Math.max(originalHeight, translatedHeight);\n        originalPdfPages.value[page - 1].$el.style.minHeight = `${maxHeight}px`;\n        translatedPdfPages.value[page - 1].$el.style.minHeight = `${maxHeight}px`;\n      }\n    };\n    onMounted(async () => {\n      // 加载pdf.js库\n      if (!window.pdfjsLib) {\n        const script = document.createElement('script');\n        script.src = 'https://cdnjs.cloudflare.com/ajax/libs/pdf.js/2.9.359/pdf.min.js';\n        document.head.appendChild(script);\n        await new Promise(resolve => script.onload = resolve);\n        window.pdfjsLib.GlobalWorkerOptions.workerSrc = 'https://cdnjs.cloudflare.com/ajax/libs/pdf.js/2.9.359/pdf.worker.min.js';\n      }\n    });\n    onUnmounted(() => {\n      if (originalPdfSource.value) URL.revokeObjectURL(originalPdfSource.value);\n      if (ws) ws.close();\n      if (pdfDocument.value) pdfDocument.value.destroy();\n    });\n    return {\n      originalPdfSource,\n      translatedPdfSource,\n      originalFileName,\n      selectedLanguage,\n      progress,\n      translationComplete,\n      showPdfViewer,\n      visiblePages,\n      loading,\n      scrollContainer,\n      originalPdfPages,\n      translatedPdfPages,\n      handleFileUpload,\n      uploadAndTranslate,\n      loadTranslatedPdf,\n      onPageRendered,\n      message\n    };\n  }\n};","map":{"version":3,"names":["VuePdfEmbed","ref","onMounted","onUnmounted","axios","components","setup","originalPdfSource","originalFileName","selectedLanguage","translatedPdfSource","progress","translationComplete","taskId","ws","showPdfViewer","visiblePages","loading","totalPages","pdfDocument","scrollContainer","originalPdfPages","translatedPdfPages","message","handleFileUpload","event","file","target","files","type","alert","value","name","URL","createObjectURL","getPdfPageCount","arrayBuffer","pdf","window","pdfjsLib","getDocument","promise","numPages","Array","from","length","_","i","error","console","uploadAndTranslate","loadTranslatedPdf","url","Date","now","onPageRendered","page","log","originalHeight","$el","clientHeight","translatedHeight","maxHeight","Math","max","style","minHeight","script","document","createElement","src","head","appendChild","Promise","resolve","onload","GlobalWorkerOptions","workerSrc","revokeObjectURL","close","destroy"],"sources":["D:\\Study\\Code\\AICloud\\front\\src\\components\\TestView.vue"],"sourcesContent":["<template>\r\n  <div class=\"pdf-comparison-container\">\r\n    <!-- 上传和翻译控制区域 -->\r\n    <div class=\"control-panel\">\r\n      <div class=\"upload-section\">\r\n        <div class=\"upload-box\">\r\n          <input\r\n            type=\"file\"\r\n            id=\"originalPdf\"\r\n            accept=\".pdf\"\r\n            @change=\"handleFileUpload\"\r\n            class=\"file-input\"\r\n          >\r\n          <label for=\"originalPdf\" class=\"upload-label\">\r\n            <span v-if=\"!originalFileName\">上传PDF文件</span>\r\n            <span v-else>{{ originalFileName }}</span>\r\n          </label>\r\n        </div>\r\n\r\n        <div class=\"language-selector\">\r\n          <label>目标语言:</label>\r\n          <select v-model=\"selectedLanguage\" class=\"language-dropdown\">\r\n            <option value=\"zh\">中文(简体)</option>\r\n            <option value=\"en\">英语</option>\r\n          </select>\r\n          <button\r\n            @click=\"uploadAndTranslate\"\r\n            class=\"action-button\"\r\n            :disabled=\"!originalPdfSource\"\r\n          >\r\n            翻译文档\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <p v-if=\"message\" class=\"message\">{{ message }}</p>\r\n\r\n      <div class=\"progress-section\" v-if=\"progress > 0\">\r\n        <div class=\"progress-container\">\r\n          <label>翻译进度:</label>\r\n          <progress :value=\"progress\" max=\"100\" class=\"progress-bar\"></progress>\r\n          <span class=\"progress-text\">{{ progress }}%</span>\r\n        </div>\r\n        <button\r\n          v-if=\"translationComplete\"\r\n          @click=\"loadTranslatedPdf\"\r\n          class=\"action-button\"\r\n        >\r\n          加载翻译结果\r\n        </button>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- PDF对比展示区域 -->\r\n    <div v-if=\"showPdfViewer\" class=\"pdf-viewer-wrapper\">\r\n      <div class=\"scroll-container\" ref=\"scrollContainer\">\r\n        <div class=\"content-wrapper\">\r\n          <!-- 左侧原始PDF -->\r\n          <div class=\"pdf-column original-pdf\">\r\n            <div class=\"pdf-header\">原始文档</div>\r\n            <div v-for=\"page in visiblePages\" :key=\"'original-'+page\">\r\n              <vue-pdf-embed\r\n                :source=\"originalPdfSource\"\r\n                :page=\"page\"\r\n                @rendered=\"onPageRendered('original', page)\"\r\n                ref=\"originalPdfPages\"\r\n              />\r\n            </div>\r\n            <div v-if=\"loading\" class=\"loading\">加载中...</div>\r\n          </div>\r\n\r\n          <!-- 右侧翻译后PDF -->\r\n          <div class=\"pdf-column translated-pdf\">\r\n            <div class=\"pdf-header\">翻译结果</div>\r\n            <div v-for=\"page in visiblePages\" :key=\"'translated-'+page\">\r\n              <vue-pdf-embed\r\n                :source=\"translatedPdfSource\"\r\n                :page=\"page\"\r\n                @rendered=\"onPageRendered('translated', page)\"\r\n                ref=\"translatedPdfPages\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport VuePdfEmbed from 'vue-pdf-embed'\r\nimport { ref, onMounted, onUnmounted } from 'vue'\r\nimport axios from 'axios'\r\n\r\nexport default {\r\n  components: {\r\n    VuePdfEmbed\r\n  },\r\n  setup() {\r\n    // 文件上传相关\r\n    const originalPdfSource = ref(null)\r\n    const originalFileName = ref('')\r\n    const selectedLanguage = ref('zh')\r\n\r\n    // 翻译相关\r\n    const translatedPdfSource = ref(null)\r\n    const progress = ref(0)\r\n    const translationComplete = ref(false)\r\n    const taskId = ref(null)\r\n    let ws = null\r\n\r\n    // PDF展示相关\r\n    const showPdfViewer = ref(false)\r\n    const visiblePages = ref([])  // 修改为动态页面数组\r\n    const loading = ref(false)\r\n    const totalPages = ref(0)    // 修改为动态总页数\r\n    const pdfDocument = ref(null) // 用于存储PDF文档对象\r\n\r\n    // DOM引用\r\n    const scrollContainer = ref(null)\r\n    const originalPdfPages = ref([])\r\n    const translatedPdfPages = ref([])\r\n    const message = ref('');\r\n\r\n    // 处理文件上传\r\n    const handleFileUpload = async (event) => {\r\n      const file = event.target.files[0]\r\n      if (!file || file.type !== 'application/pdf') {\r\n        alert('请上传有效的PDF文件')\r\n        return\r\n      }\r\n\r\n      originalFileName.value = file.name\r\n      originalPdfSource.value = URL.createObjectURL(file)\r\n      translatedPdfSource.value = null\r\n      showPdfViewer.value = false\r\n      progress.value = 0\r\n      translationComplete.value = false\r\n\r\n      // 获取PDF总页数\r\n      await getPdfPageCount(file)\r\n    }\r\n\r\n    // 获取PDF总页数\r\n    const getPdfPageCount = async (file) => {\r\n      try {\r\n        const arrayBuffer = await file.arrayBuffer()\r\n        const pdf = await window.pdfjsLib.getDocument(arrayBuffer).promise\r\n        totalPages.value = pdf.numPages\r\n        pdfDocument.value = pdf\r\n\r\n        // 初始化显示所有页面\r\n        visiblePages.value = Array.from({ length: totalPages.value }, (_, i) => i + 1)\r\n      } catch (error) {\r\n        console.error('获取PDF页数失败:', error)\r\n      }\r\n    }\r\n\r\n    // 上传并翻译文件\r\n    const uploadAndTranslate = async () => {\r\n      // ... 保持原有逻辑不变 ...\r\n    }\r\n\r\n    // 加载翻译后的PDF\r\n    const loadTranslatedPdf = async () => {\r\n      if (!taskId.value) return\r\n\r\n      try {\r\n        const url = `http://10.241.109.58:8000/blogs/download/${taskId.value}/?t=${Date.now()}`\r\n        translatedPdfSource.value = url\r\n        showPdfViewer.value = true\r\n\r\n        // 翻译后的PDF使用相同的页面数\r\n        visiblePages.value = Array.from({ length: totalPages.value }, (_, i) => i + 1)\r\n\r\n      } catch (error) {\r\n        console.error('加载翻译结果失败:', error)\r\n      }\r\n    }\r\n\r\n    // 页面渲染回调\r\n    const onPageRendered = (type, page) => {\r\n      console.log(`${type} PDF 第 ${page} 页渲染完成`)\r\n\r\n      if (originalPdfPages.value[page-1] && translatedPdfPages.value[page-1]) {\r\n        const originalHeight = originalPdfPages.value[page-1].$el.clientHeight\r\n        const translatedHeight = translatedPdfPages.value[page-1].$el.clientHeight\r\n        const maxHeight = Math.max(originalHeight, translatedHeight)\r\n\r\n        originalPdfPages.value[page-1].$el.style.minHeight = `${maxHeight}px`\r\n        translatedPdfPages.value[page-1].$el.style.minHeight = `${maxHeight}px`\r\n      }\r\n    }\r\n\r\n    onMounted(async () => {\r\n      // 加载pdf.js库\r\n      if (!window.pdfjsLib) {\r\n        const script = document.createElement('script')\r\n        script.src = 'https://cdnjs.cloudflare.com/ajax/libs/pdf.js/2.9.359/pdf.min.js'\r\n        document.head.appendChild(script)\r\n        await new Promise(resolve => script.onload = resolve)\r\n        window.pdfjsLib.GlobalWorkerOptions.workerSrc =\r\n          'https://cdnjs.cloudflare.com/ajax/libs/pdf.js/2.9.359/pdf.worker.min.js'\r\n      }\r\n    })\r\n\r\n    onUnmounted(() => {\r\n      if (originalPdfSource.value) URL.revokeObjectURL(originalPdfSource.value)\r\n      if (ws) ws.close()\r\n      if (pdfDocument.value) pdfDocument.value.destroy()\r\n    })\r\n\r\n    return {\r\n      originalPdfSource,\r\n      translatedPdfSource,\r\n      originalFileName,\r\n      selectedLanguage,\r\n      progress,\r\n      translationComplete,\r\n      showPdfViewer,\r\n      visiblePages,\r\n      loading,\r\n      scrollContainer,\r\n      originalPdfPages,\r\n      translatedPdfPages,\r\n      handleFileUpload,\r\n      uploadAndTranslate,\r\n      loadTranslatedPdf,\r\n      onPageRendered,\r\n      message\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.pdf-comparison-container {\r\n  width: 100%;\r\n  height: 100vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.control-panel {\r\n  padding: 20px;\r\n  background: #f5f5f5;\r\n  border-bottom: 1px solid #ddd;\r\n}\r\n\r\n.upload-section {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 20px;\r\n  margin-bottom: 15px;\r\n}\r\n\r\n.upload-box {\r\n  position: relative;\r\n  width: 200px;\r\n  height: 40px;\r\n}\r\n\r\n.file-input {\r\n  opacity: 0;\r\n  position: absolute;\r\n  width: 100%;\r\n  height: 100%;\r\n  cursor: pointer;\r\n}\r\n\r\n.upload-label {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 100%;\r\n  height: 100%;\r\n  border: 1px dashed #ccc;\r\n  border-radius: 4px;\r\n  background: white;\r\n  transition: all 0.3s;\r\n}\r\n\r\n.upload-label:hover {\r\n  border-color: #409eff;\r\n  background: #f0f7ff;\r\n}\r\n\r\n.language-selector {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 10px;\r\n}\r\n\r\n.language-dropdown {\r\n  padding: 5px;\r\n  border: 1px solid #ddd;\r\n  border-radius: 4px;\r\n}\r\n\r\n.action-button {\r\n  padding: 8px 16px;\r\n  background-color: #4CAF50;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  transition: background-color 0.3s;\r\n}\r\n\r\n.action-button:hover {\r\n  background-color: #45a049;\r\n}\r\n\r\n.action-button:disabled {\r\n  background-color: #cccccc;\r\n  cursor: not-allowed;\r\n}\r\n\r\n.progress-section {\r\n  margin-top: 15px;\r\n}\r\n\r\n.progress-container {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 10px;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.progress-bar {\r\n  flex: 1;\r\n  height: 10px;\r\n}\r\n\r\n.progress-text {\r\n  min-width: 40px;\r\n  text-align: right;\r\n}\r\n\r\n.pdf-viewer-wrapper {\r\n  flex: 1;\r\n  width: 100%;\r\n  overflow: hidden;\r\n}\r\n\r\n.scroll-container {\r\n  width: 100%;\r\n  height: 100%;\r\n  overflow-y: auto;\r\n}\r\n\r\n.content-wrapper {\r\n  display: flex;\r\n  min-height: 100%;\r\n}\r\n\r\n.pdf-column {\r\n  flex: 1;\r\n  padding: 15px;\r\n  box-sizing: border-box;\r\n}\r\n\r\n.pdf-header {\r\n  font-weight: bold;\r\n  margin-bottom: 15px;\r\n  padding-bottom: 5px;\r\n  border-bottom: 1px solid #eee;\r\n}\r\n\r\n.original-pdf {\r\n  border-right: 1px solid #ddd;\r\n}\r\n\r\n.vue-pdf-embed {\r\n  margin-bottom: 20px;\r\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.loading {\r\n  text-align: center;\r\n  padding: 20px;\r\n  color: #666;\r\n  background: #f5f5f5;\r\n  margin-top: 10px;\r\n  border-radius: 4px;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}