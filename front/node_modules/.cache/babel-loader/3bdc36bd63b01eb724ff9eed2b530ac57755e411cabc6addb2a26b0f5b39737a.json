{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref } from 'vue';\nimport { useWebSocket } from '@vueuse/core';\nexport default {\n  __name: 'socket',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const message = ref('');\n    const messages = ref([]);\n    const {\n      data,\n      send,\n      open,\n      close\n    } = useWebSocket('ws://localhost:8000/ws/progress/', {\n      autoReconnect: true,\n      onMessage: (ws, event) => {\n        const data = JSON.parse(event.data);\n        messages.value.push(data.message);\n      }\n    });\n    const sendMessage = () => {\n      if (message.value.trim()) {\n        send(JSON.stringify({\n          message: message.value\n        }));\n        message.value = '';\n      }\n    };\n    const __returned__ = {\n      message,\n      messages,\n      data,\n      send,\n      open,\n      close,\n      sendMessage,\n      ref,\n      get useWebSocket() {\n        return useWebSocket;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","useWebSocket","message","messages","data","send","open","close","autoReconnect","onMessage","ws","event","JSON","parse","value","push","sendMessage","trim","stringify"],"sources":["D:/Study/Code/AICloud/front/src/components/socket.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <input v-model=\"message\" @keyup.enter=\"sendMessage\" />\r\n    <div v-for=\"(msg, index) in messages\" :key=\"index\">{{ msg }}</div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref } from 'vue'\r\nimport { useWebSocket } from '@vueuse/core'\r\n\r\nconst message = ref('')\r\nconst messages = ref([])\r\n\r\nconst { data, send, open, close } = useWebSocket(\r\n  'ws://localhost:8000/ws/progress/',\r\n  {\r\n    autoReconnect: true,\r\n    onMessage: (ws, event) => {\r\n      const data = JSON.parse(event.data)\r\n      messages.value.push(data.message)\r\n    }\r\n  }\r\n)\r\n\r\nconst sendMessage = () => {\r\n  if (message.value.trim()) {\r\n    send(JSON.stringify({ message: message.value }))\r\n    message.value = ''\r\n  }\r\n}\r\n</script>"],"mappings":";AAQA,SAASA,GAAG,QAAQ,KAAK;AACzB,SAASC,YAAY,QAAQ,cAAc;;;;;;;IAE3C,MAAMC,OAAO,GAAGF,GAAG,CAAC,EAAE,CAAC;IACvB,MAAMG,QAAQ,GAAGH,GAAG,CAAC,EAAE,CAAC;IAExB,MAAM;MAAEI,IAAI;MAAEC,IAAI;MAAEC,IAAI;MAAEC;IAAM,CAAC,GAAGN,YAAY,CAC9C,kCAAkC,EAClC;MACEO,aAAa,EAAE,IAAI;MACnBC,SAAS,EAAEA,CAACC,EAAE,EAAEC,KAAK,KAAK;QACxB,MAAMP,IAAI,GAAGQ,IAAI,CAACC,KAAK,CAACF,KAAK,CAACP,IAAI,CAAC;QACnCD,QAAQ,CAACW,KAAK,CAACC,IAAI,CAACX,IAAI,CAACF,OAAO,CAAC;MACnC;IACF,CACF,CAAC;IAED,MAAMc,WAAW,GAAGA,CAAA,KAAM;MACxB,IAAId,OAAO,CAACY,KAAK,CAACG,IAAI,CAAC,CAAC,EAAE;QACxBZ,IAAI,CAACO,IAAI,CAACM,SAAS,CAAC;UAAEhB,OAAO,EAAEA,OAAO,CAACY;QAAM,CAAC,CAAC,CAAC;QAChDZ,OAAO,CAACY,KAAK,GAAG,EAAE;MACpB;IACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}