{"ast":null,"code":"import \"core-js/modules/web.url-search-params.delete.js\";\nimport \"core-js/modules/web.url-search-params.has.js\";\nimport \"core-js/modules/web.url-search-params.size.js\";\nimport { ref } from 'vue';\nimport axios from 'axios';\n\n// 响应式数据\n\nexport default {\n  __name: 'FileUpload',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const file = ref(null);\n    const message = ref('');\n    const progress = ref(0);\n    const selectedLanguage = ref('zh'); // 默认选择中文\n    const translationComplete = ref(false);\n    const receiveTranslatedFile = ref(false);\n    const translatedFileUrl = ref('');\n    const socket = ref(null);\n\n    // 处理文件选择\n    const handleFileChange = event => {\n      file.value = event.target.files[0];\n      message.value = ''; // 清空消息\n    };\n\n    // 模拟翻译进度（实际应由后端返回）\n    const simulateProgress = () => {\n      progress.value = 0;\n      const interval = setInterval(() => {\n        progress.value += 10;\n        if (progress.value >= 100) {\n          clearInterval(interval);\n          translationComplete.value = true;\n        }\n      }, 500);\n    };\n\n    // 上传文件并翻译\n    const uploadFile = async () => {\n      if (!file.value) {\n        message.value = '请选择一个文件';\n        return;\n      }\n      const formData = new FormData();\n      formData.append('file', file.value);\n      formData.append('language', selectedLanguage.value);\n      formData.append('title', file.value.name);\n      try {\n        message.value = '正在上传并翻译...';\n        simulateProgress(); // 模拟进度\n\n        socket.value = new WebSocket(`ws://127.0.0.1:8000/ws/progress/${taskId}/`);\n        const response = await axios.post('http://127.0.0.1:8000/blogs/upload/', formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          },\n          responseType: 'blob' // 接收二进制文件\n          // onUploadProgress: (progressEvent) => {\n          //   // 实际进度应从后端返回，这里仅模拟\n          //   // progress.value = Math.round((progressEvent.loaded / progressEvent.total) * 100);\n          // },\n        });\n        translatedFileUrl.value = window.URL.createObjectURL(new Blob([response.data]));\n        message.value = '翻译完成！';\n      } catch (error) {\n        message.value = '文件上传或翻译失败';\n        console.error('Error uploading file:', error);\n        progress.value = 0;\n        translationComplete.value = false;\n      }\n    };\n\n    // 下载翻译文件\n    const downloadTranslatedFile = () => {\n      if (translatedFileUrl.value && receiveTranslatedFile.value) {\n        const link = document.createElement('a');\n        link.href = translatedFileUrl.value;\n        link.setAttribute('download', `translated_${file.value.name}`);\n        document.body.appendChild(link);\n        link.click();\n        document.body.removeChild(link);\n      }\n    };\n    const __returned__ = {\n      file,\n      message,\n      progress,\n      selectedLanguage,\n      translationComplete,\n      receiveTranslatedFile,\n      translatedFileUrl,\n      socket,\n      handleFileChange,\n      simulateProgress,\n      uploadFile,\n      downloadTranslatedFile,\n      ref,\n      get axios() {\n        return axios;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","axios","file","message","progress","selectedLanguage","translationComplete","receiveTranslatedFile","translatedFileUrl","socket","handleFileChange","event","value","target","files","simulateProgress","interval","setInterval","clearInterval","uploadFile","formData","FormData","append","name","WebSocket","taskId","response","post","headers","responseType","window","URL","createObjectURL","Blob","data","error","console","downloadTranslatedFile","link","document","createElement","href","setAttribute","body","appendChild","click","removeChild"],"sources":["D:/Study/Code/AICloud/front/src/components/FileUpload.vue"],"sourcesContent":["<template>\r\n  <div class=\"upload-container\">\r\n    <h1 class=\"title\">文献上传与翻译</h1>\r\n\r\n    <!-- 语言选择 -->\r\n    <div class=\"language-selector\">\r\n      <label>目标语言:</label>\r\n      <select v-model=\"selectedLanguage\" class=\"language-dropdown\">\r\n        <option value=\"zh\">中文(简体)</option>\r\n        <option value=\"en\">英语</option>\r\n      </select>\r\n    </div>\r\n\r\n    <!-- 文件上传区域 -->\r\n    <div class=\"upload-area\">\r\n      <input type=\"file\" @change=\"handleFileChange\" class=\"file-input\" />\r\n      <button @click=\"uploadFile\" class=\"upload-button\">上传并翻译</button>\r\n    </div>\r\n\r\n    <!-- 进度条 -->\r\n    <div v-if=\"progress > 0\" class=\"progress-container\">\r\n      <label>翻译进度:</label>\r\n      <progress :value=\"progress\" max=\"100\" class=\"progress-bar\"></progress>\r\n      <span class=\"progress-text\">{{ progress }}%</span>\r\n    </div>\r\n\r\n    <!-- 接收翻译文件选项 -->\r\n    <div v-if=\"translationComplete\" class=\"download-option\">\r\n      <label>\r\n        <input type=\"checkbox\" v-model=\"receiveTranslatedFile\" />\r\n        接收翻译后的文件\r\n      </label>\r\n      <button v-if=\"receiveTranslatedFile\" @click=\"downloadTranslatedFile\" class=\"download-button\">\r\n        下载翻译文件\r\n      </button>\r\n    </div>\r\n\r\n    <!-- 消息提示 -->\r\n    <p v-if=\"message\" class=\"message\">{{ message }}</p>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref } from 'vue';\r\nimport axios from 'axios';\r\n\r\n// 响应式数据\r\nconst file = ref(null);\r\nconst message = ref('');\r\nconst progress = ref(0);\r\nconst selectedLanguage = ref('zh'); // 默认选择中文\r\nconst translationComplete = ref(false);\r\nconst receiveTranslatedFile = ref(false);\r\nconst translatedFileUrl = ref('');\r\nconst socket = ref(null);\r\n\r\n// 处理文件选择\r\nconst handleFileChange = (event) => {\r\n  file.value = event.target.files[0];\r\n  message.value = ''; // 清空消息\r\n};\r\n\r\n// 模拟翻译进度（实际应由后端返回）\r\nconst simulateProgress = () => {\r\n  progress.value = 0;\r\n  const interval = setInterval(() => {\r\n    progress.value += 10;\r\n    if (progress.value >= 100) {\r\n      clearInterval(interval);\r\n      translationComplete.value = true;\r\n    }\r\n  }, 500);\r\n};\r\n\r\n// 上传文件并翻译\r\nconst uploadFile = async () => {\r\n  if (!file.value) {\r\n    message.value = '请选择一个文件';\r\n    return;\r\n  }\r\n\r\n  const formData = new FormData();\r\n  formData.append('file', file.value);\r\n  formData.append('language', selectedLanguage.value);\r\n  formData.append('title', file.value.name);\r\n\r\n  try {\r\n    message.value = '正在上传并翻译...';\r\n    simulateProgress(); // 模拟进度\r\n\r\n    socket.value = new WebSocket(`ws://127.0.0.1:8000/ws/progress/${taskId}/`);\r\n\r\n    const response = await axios.post('http://127.0.0.1:8000/blogs/upload/', formData, {\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data',\r\n      },\r\n      responseType: 'blob', // 接收二进制文件\r\n      // onUploadProgress: (progressEvent) => {\r\n      //   // 实际进度应从后端返回，这里仅模拟\r\n      //   // progress.value = Math.round((progressEvent.loaded / progressEvent.total) * 100);\r\n      // },\r\n    });\r\n\r\n    translatedFileUrl.value = window.URL.createObjectURL(new Blob([response.data]));\r\n    message.value = '翻译完成！';\r\n  } catch (error) {\r\n    message.value = '文件上传或翻译失败';\r\n    console.error('Error uploading file:', error);\r\n    progress.value = 0;\r\n    translationComplete.value = false;\r\n  }\r\n};\r\n\r\n// 下载翻译文件\r\nconst downloadTranslatedFile = () => {\r\n  if (translatedFileUrl.value && receiveTranslatedFile.value) {\r\n    const link = document.createElement('a');\r\n    link.href = translatedFileUrl.value;\r\n    link.setAttribute('download', `translated_${file.value.name}`);\r\n    document.body.appendChild(link);\r\n    link.click();\r\n    document.body.removeChild(link);\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.upload-container {\r\n  max-width: 600px;\r\n  margin: 20px auto;\r\n  padding: 20px;\r\n  background-color: #f9f9f9;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.title {\r\n  text-align: center;\r\n  color: #333;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.language-selector {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.language-dropdown {\r\n  padding: 8px;\r\n  font-size: 16px;\r\n  border: 1px solid #ddd;\r\n  border-radius: 4px;\r\n  width: 100%;\r\n  max-width: 200px;\r\n}\r\n\r\n.upload-area {\r\n  display: flex;\r\n  gap: 10px;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.file-input {\r\n  flex: 1;\r\n  padding: 8px;\r\n  border: 1px solid #ddd;\r\n  border-radius: 4px;\r\n}\r\n\r\n.upload-button {\r\n  padding: 10px 20px;\r\n  background-color: #4CAF50;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n}\r\n\r\n.upload-button:hover {\r\n  background-color: #45a049;\r\n}\r\n\r\n.progress-container {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.progress-bar {\r\n  width: 100%;\r\n  height: 20px;\r\n}\r\n\r\n.progress-text {\r\n  display: block;\r\n  text-align: center;\r\n  margin-top: 5px;\r\n}\r\n\r\n.download-option {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.download-button {\r\n  margin-left: 10px;\r\n  padding: 8px 16px;\r\n  background-color: #2196F3;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n}\r\n\r\n.download-button:hover {\r\n  background-color: #1976D2;\r\n}\r\n\r\n.message {\r\n  text-align: center;\r\n  color: #d32f2f;\r\n  font-weight: bold;\r\n}\r\n</style>"],"mappings":";;;AA2CA,SAASA,GAAG,QAAQ,KAAK;AACzB,OAAOC,KAAK,MAAM,OAAO;;AAEzB;;;;;;;;IACA,MAAMC,IAAI,GAAGF,GAAG,CAAC,IAAI,CAAC;IACtB,MAAMG,OAAO,GAAGH,GAAG,CAAC,EAAE,CAAC;IACvB,MAAMI,QAAQ,GAAGJ,GAAG,CAAC,CAAC,CAAC;IACvB,MAAMK,gBAAgB,GAAGL,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACpC,MAAMM,mBAAmB,GAAGN,GAAG,CAAC,KAAK,CAAC;IACtC,MAAMO,qBAAqB,GAAGP,GAAG,CAAC,KAAK,CAAC;IACxC,MAAMQ,iBAAiB,GAAGR,GAAG,CAAC,EAAE,CAAC;IACjC,MAAMS,MAAM,GAAGT,GAAG,CAAC,IAAI,CAAC;;IAExB;IACA,MAAMU,gBAAgB,GAAIC,KAAK,IAAK;MAClCT,IAAI,CAACU,KAAK,GAAGD,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;MAClCX,OAAO,CAACS,KAAK,GAAG,EAAE,CAAC,CAAC;IACtB,CAAC;;IAED;IACA,MAAMG,gBAAgB,GAAGA,CAAA,KAAM;MAC7BX,QAAQ,CAACQ,KAAK,GAAG,CAAC;MAClB,MAAMI,QAAQ,GAAGC,WAAW,CAAC,MAAM;QACjCb,QAAQ,CAACQ,KAAK,IAAI,EAAE;QACpB,IAAIR,QAAQ,CAACQ,KAAK,IAAI,GAAG,EAAE;UACzBM,aAAa,CAACF,QAAQ,CAAC;UACvBV,mBAAmB,CAACM,KAAK,GAAG,IAAI;QAClC;MACF,CAAC,EAAE,GAAG,CAAC;IACT,CAAC;;IAED;IACA,MAAMO,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAI,CAACjB,IAAI,CAACU,KAAK,EAAE;QACfT,OAAO,CAACS,KAAK,GAAG,SAAS;QACzB;MACF;MAEA,MAAMQ,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;MAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEpB,IAAI,CAACU,KAAK,CAAC;MACnCQ,QAAQ,CAACE,MAAM,CAAC,UAAU,EAAEjB,gBAAgB,CAACO,KAAK,CAAC;MACnDQ,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAEpB,IAAI,CAACU,KAAK,CAACW,IAAI,CAAC;MAEzC,IAAI;QACFpB,OAAO,CAACS,KAAK,GAAG,YAAY;QAC5BG,gBAAgB,CAAC,CAAC,CAAC,CAAC;;QAEpBN,MAAM,CAACG,KAAK,GAAG,IAAIY,SAAS,CAAC,mCAAmCC,MAAM,GAAG,CAAC;QAE1E,MAAMC,QAAQ,GAAG,MAAMzB,KAAK,CAAC0B,IAAI,CAAC,qCAAqC,EAAEP,QAAQ,EAAE;UACjFQ,OAAO,EAAE;YACP,cAAc,EAAE;UAClB,CAAC;UACDC,YAAY,EAAE,MAAM,CAAE;UACtB;UACA;UACA;UACA;QACF,CAAC,CAAC;QAEFrB,iBAAiB,CAACI,KAAK,GAAGkB,MAAM,CAACC,GAAG,CAACC,eAAe,CAAC,IAAIC,IAAI,CAAC,CAACP,QAAQ,CAACQ,IAAI,CAAC,CAAC,CAAC;QAC/E/B,OAAO,CAACS,KAAK,GAAG,OAAO;MACzB,CAAC,CAAC,OAAOuB,KAAK,EAAE;QACdhC,OAAO,CAACS,KAAK,GAAG,WAAW;QAC3BwB,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;QAC7C/B,QAAQ,CAACQ,KAAK,GAAG,CAAC;QAClBN,mBAAmB,CAACM,KAAK,GAAG,KAAK;MACnC;IACF,CAAC;;IAED;IACA,MAAMyB,sBAAsB,GAAGA,CAAA,KAAM;MACnC,IAAI7B,iBAAiB,CAACI,KAAK,IAAIL,qBAAqB,CAACK,KAAK,EAAE;QAC1D,MAAM0B,IAAI,GAAGC,QAAQ,CAACC,aAAa,CAAC,GAAG,CAAC;QACxCF,IAAI,CAACG,IAAI,GAAGjC,iBAAiB,CAACI,KAAK;QACnC0B,IAAI,CAACI,YAAY,CAAC,UAAU,EAAE,cAAcxC,IAAI,CAACU,KAAK,CAACW,IAAI,EAAE,CAAC;QAC9DgB,QAAQ,CAACI,IAAI,CAACC,WAAW,CAACN,IAAI,CAAC;QAC/BA,IAAI,CAACO,KAAK,CAAC,CAAC;QACZN,QAAQ,CAACI,IAAI,CAACG,WAAW,CAACR,IAAI,CAAC;MACjC;IACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}