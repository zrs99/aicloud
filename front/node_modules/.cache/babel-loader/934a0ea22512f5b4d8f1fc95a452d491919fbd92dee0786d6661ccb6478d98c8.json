{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, vModelSelect as _vModelSelect, withDirectives as _withDirectives, renderList as _renderList, Fragment as _Fragment, resolveComponent as _resolveComponent, createVNode as _createVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"pdf-comparison-container\"\n};\nconst _hoisted_2 = {\n  class: \"control-panel\"\n};\nconst _hoisted_3 = {\n  class: \"upload-section\"\n};\nconst _hoisted_4 = {\n  class: \"upload-box\"\n};\nconst _hoisted_5 = {\n  for: \"originalPdf\",\n  class: \"upload-label\"\n};\nconst _hoisted_6 = {\n  key: 0\n};\nconst _hoisted_7 = {\n  key: 1\n};\nconst _hoisted_8 = {\n  class: \"language-selector\"\n};\nconst _hoisted_9 = [\"disabled\"];\nconst _hoisted_10 = {\n  key: 0,\n  class: \"message\"\n};\nconst _hoisted_11 = {\n  key: 1,\n  class: \"progress-section\"\n};\nconst _hoisted_12 = {\n  class: \"progress-container\"\n};\nconst _hoisted_13 = [\"value\"];\nconst _hoisted_14 = {\n  class: \"progress-text\"\n};\nconst _hoisted_15 = {\n  key: 0,\n  class: \"pdf-viewer-wrapper\"\n};\nconst _hoisted_16 = {\n  class: \"scroll-container\",\n  ref: \"scrollContainer\"\n};\nconst _hoisted_17 = {\n  class: \"content-wrapper\"\n};\nconst _hoisted_18 = {\n  class: \"pdf-column original-pdf\"\n};\nconst _hoisted_19 = {\n  key: 0,\n  class: \"loading\"\n};\nconst _hoisted_20 = {\n  class: \"pdf-column translated-pdf\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_vue_pdf_embed = _resolveComponent(\"vue-pdf-embed\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createCommentVNode(\" 上传和翻译控制区域 \"), _createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"input\", {\n    type: \"file\",\n    id: \"originalPdf\",\n    accept: \".pdf\",\n    onChange: _cache[0] || (_cache[0] = (...args) => $setup.handleFileUpload && $setup.handleFileUpload(...args)),\n    class: \"file-input\"\n  }, null, 32 /* NEED_HYDRATION */), _createElementVNode(\"label\", _hoisted_5, [!$setup.originalFileName ? (_openBlock(), _createElementBlock(\"span\", _hoisted_6, \"上传PDF文件\")) : (_openBlock(), _createElementBlock(\"span\", _hoisted_7, _toDisplayString($setup.originalFileName), 1 /* TEXT */))])]), _createElementVNode(\"div\", _hoisted_8, [_cache[5] || (_cache[5] = _createElementVNode(\"label\", null, \"目标语言:\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"select\", {\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $setup.selectedLanguage = $event),\n    class: \"language-dropdown\"\n  }, _cache[4] || (_cache[4] = [_createElementVNode(\"option\", {\n    value: \"zh\"\n  }, \"中文(简体)\", -1 /* HOISTED */), _createElementVNode(\"option\", {\n    value: \"en\"\n  }, \"英语\", -1 /* HOISTED */)]), 512 /* NEED_PATCH */), [[_vModelSelect, $setup.selectedLanguage]]), _createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = (...args) => $setup.uploadAndTranslate && $setup.uploadAndTranslate(...args)),\n    class: \"action-button\",\n    disabled: !$setup.originalPdfSource\n  }, \" 翻译文档 \", 8 /* PROPS */, _hoisted_9)])]), $setup.message ? (_openBlock(), _createElementBlock(\"p\", _hoisted_10, _toDisplayString($setup.message), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), $setup.progress > 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_11, [_createElementVNode(\"div\", _hoisted_12, [_cache[6] || (_cache[6] = _createElementVNode(\"label\", null, \"翻译进度:\", -1 /* HOISTED */)), _createElementVNode(\"progress\", {\n    value: $setup.progress,\n    max: \"100\",\n    class: \"progress-bar\"\n  }, null, 8 /* PROPS */, _hoisted_13), _createElementVNode(\"span\", _hoisted_14, _toDisplayString($setup.progress) + \"%\", 1 /* TEXT */)]), $setup.translationComplete ? (_openBlock(), _createElementBlock(\"button\", {\n    key: 0,\n    onClick: _cache[3] || (_cache[3] = (...args) => $setup.loadTranslatedPdf && $setup.loadTranslatedPdf(...args)),\n    class: \"action-button\"\n  }, \" 加载翻译结果 \")) : _createCommentVNode(\"v-if\", true)])) : _createCommentVNode(\"v-if\", true)]), _createCommentVNode(\" PDF对比展示区域 \"), $setup.showPdfViewer ? (_openBlock(), _createElementBlock(\"div\", _hoisted_15, [_createElementVNode(\"div\", _hoisted_16, [_createElementVNode(\"div\", _hoisted_17, [_createCommentVNode(\" 左侧原始PDF \"), _createElementVNode(\"div\", _hoisted_18, [_cache[7] || (_cache[7] = _createElementVNode(\"div\", {\n    class: \"pdf-header\"\n  }, \"原始文档\", -1 /* HOISTED */)), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.visiblePages, page => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: 'original-' + page\n    }, [_createVNode(_component_vue_pdf_embed, {\n      source: $setup.originalPdfSource,\n      page: page,\n      onRendered: $event => $setup.onPageRendered('original', page),\n      ref_for: true,\n      ref: \"originalPdfPages\"\n    }, null, 8 /* PROPS */, [\"source\", \"page\", \"onRendered\"])]);\n  }), 128 /* KEYED_FRAGMENT */)), $setup.loading ? (_openBlock(), _createElementBlock(\"div\", _hoisted_19, \"加载中...\")) : _createCommentVNode(\"v-if\", true)]), _createCommentVNode(\" 右侧翻译后PDF \"), _createElementVNode(\"div\", _hoisted_20, [_cache[8] || (_cache[8] = _createElementVNode(\"div\", {\n    class: \"pdf-header\"\n  }, \"翻译结果\", -1 /* HOISTED */)), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.visiblePages, page => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: 'translated-' + page\n    }, [_createVNode(_component_vue_pdf_embed, {\n      source: $setup.translatedPdfSource,\n      page: page,\n      onRendered: $event => $setup.onPageRendered('translated', page),\n      ref_for: true,\n      ref: \"translatedPdfPages\"\n    }, null, 8 /* PROPS */, [\"source\", \"page\", \"onRendered\"])]);\n  }), 128 /* KEYED_FRAGMENT */))])])], 512 /* NEED_PATCH */)])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["class","for","key","ref","_createElementBlock","_hoisted_1","_createCommentVNode","_createElementVNode","_hoisted_2","_hoisted_3","_hoisted_4","type","id","accept","onChange","_cache","args","$setup","handleFileUpload","_hoisted_5","originalFileName","_hoisted_6","_hoisted_7","_toDisplayString","_hoisted_8","$event","selectedLanguage","value","onClick","uploadAndTranslate","disabled","originalPdfSource","_hoisted_9","message","_hoisted_10","progress","_hoisted_11","_hoisted_12","max","_hoisted_13","_hoisted_14","translationComplete","loadTranslatedPdf","showPdfViewer","_hoisted_15","_hoisted_16","_hoisted_17","_hoisted_18","_Fragment","_renderList","visiblePages","page","_createVNode","_component_vue_pdf_embed","source","onRendered","onPageRendered","ref_for","loading","_hoisted_19","_hoisted_20","translatedPdfSource"],"sources":["D:\\Study\\Code\\AICloud\\front\\src\\components\\TestView.vue"],"sourcesContent":["<template>\r\n  <div class=\"pdf-comparison-container\">\r\n    <!-- 上传和翻译控制区域 -->\r\n    <div class=\"control-panel\">\r\n      <div class=\"upload-section\">\r\n        <div class=\"upload-box\">\r\n          <input\r\n            type=\"file\"\r\n            id=\"originalPdf\"\r\n            accept=\".pdf\"\r\n            @change=\"handleFileUpload\"\r\n            class=\"file-input\"\r\n          >\r\n          <label for=\"originalPdf\" class=\"upload-label\">\r\n            <span v-if=\"!originalFileName\">上传PDF文件</span>\r\n            <span v-else>{{ originalFileName }}</span>\r\n          </label>\r\n        </div>\r\n\r\n        <div class=\"language-selector\">\r\n          <label>目标语言:</label>\r\n          <select v-model=\"selectedLanguage\" class=\"language-dropdown\">\r\n            <option value=\"zh\">中文(简体)</option>\r\n            <option value=\"en\">英语</option>\r\n          </select>\r\n          <button\r\n            @click=\"uploadAndTranslate\"\r\n            class=\"action-button\"\r\n            :disabled=\"!originalPdfSource\"\r\n          >\r\n            翻译文档\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <p v-if=\"message\" class=\"message\">{{ message }}</p>\r\n\r\n      <div class=\"progress-section\" v-if=\"progress > 0\">\r\n        <div class=\"progress-container\">\r\n          <label>翻译进度:</label>\r\n          <progress :value=\"progress\" max=\"100\" class=\"progress-bar\"></progress>\r\n          <span class=\"progress-text\">{{ progress }}%</span>\r\n        </div>\r\n        <button\r\n          v-if=\"translationComplete\"\r\n          @click=\"loadTranslatedPdf\"\r\n          class=\"action-button\"\r\n        >\r\n          加载翻译结果\r\n        </button>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- PDF对比展示区域 -->\r\n    <div v-if=\"showPdfViewer\" class=\"pdf-viewer-wrapper\">\r\n      <div class=\"scroll-container\" ref=\"scrollContainer\">\r\n        <div class=\"content-wrapper\">\r\n          <!-- 左侧原始PDF -->\r\n          <div class=\"pdf-column original-pdf\">\r\n            <div class=\"pdf-header\">原始文档</div>\r\n            <div v-for=\"page in visiblePages\" :key=\"'original-'+page\">\r\n              <vue-pdf-embed\r\n                :source=\"originalPdfSource\"\r\n                :page=\"page\"\r\n                @rendered=\"onPageRendered('original', page)\"\r\n                ref=\"originalPdfPages\"\r\n              />\r\n            </div>\r\n            <div v-if=\"loading\" class=\"loading\">加载中...</div>\r\n          </div>\r\n\r\n          <!-- 右侧翻译后PDF -->\r\n          <div class=\"pdf-column translated-pdf\">\r\n            <div class=\"pdf-header\">翻译结果</div>\r\n            <div v-for=\"page in visiblePages\" :key=\"'translated-'+page\">\r\n              <vue-pdf-embed\r\n                :source=\"translatedPdfSource\"\r\n                :page=\"page\"\r\n                @rendered=\"onPageRendered('translated', page)\"\r\n                ref=\"translatedPdfPages\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport VuePdfEmbed from 'vue-pdf-embed'\r\nimport { ref, onMounted, onUnmounted } from 'vue'\r\nimport axios from 'axios'\r\nimport * as pdfjsLib from 'pdfjs-dist/build/pdf'\r\nimport pdfjsWorker from 'pdfjs-dist/build/pdf.worker.entry'\r\n\r\nexport default {\r\n  components: {\r\n    VuePdfEmbed\r\n  },\r\n  setup() {\r\n    // 文件上传相关\r\n    const originalPdfSource = ref(null)\r\n    const originalFileName = ref('')\r\n    const selectedLanguage = ref('zh')\r\n\r\n    // 翻译相关\r\n    const translatedPdfSource = ref(null)\r\n    const progress = ref(0)\r\n    const translationComplete = ref(false)\r\n    const taskId = ref(null)\r\n    let ws = null\r\n\r\n    // PDF展示相关\r\n    const showPdfViewer = ref(false)\r\n    const visiblePages = ref([1, 2, 3])\r\n    const loading = ref(false)\r\n    const lastPage = ref(3)\r\n    const totalPages = ref(10)\r\n\r\n    // DOM引用\r\n    const scrollContainer = ref(null)\r\n    const originalPdfPages = ref([])\r\n    const translatedPdfPages = ref([])\r\n    const message = ref('');\r\n\r\n    // 处理文件上传\r\n    const handleFileUpload = (event) => {\r\n      const file = event.target.files[0]\r\n      if (!file || file.type !== 'application/pdf') {\r\n        alert('请上传有效的PDF文件')\r\n        return\r\n      }\r\n\r\n      originalFileName.value = file.name\r\n      originalPdfSource.value = URL.createObjectURL(file)\r\n      translatedPdfSource.value = null // 重置翻译结果\r\n      showPdfViewer.value = false\r\n      progress.value = 0\r\n      translationComplete.value = false\r\n    }\r\n\r\n    // 上传并翻译文件\r\n    const uploadAndTranslate = async () => {\r\n      if (!originalPdfSource.value) return\r\n\r\n      try {\r\n        // 获取原始文件对象\r\n        const fileInput = document.getElementById('originalPdf')\r\n        const file = fileInput.files[0]\r\n\r\n        const formData = new FormData()\r\n        formData.append('file', file)\r\n        formData.append('language', selectedLanguage.value)\r\n        formData.append('title', file.name)\r\n\r\n        message.value = '翻译排队中';\r\n        const response = await axios.post('http://10.241.109.58:8000/blogs/upload/', formData, {\r\n          headers: {\r\n            'Content-Type': 'multipart/form-data',\r\n          },\r\n        })\r\n\r\n        taskId.value = response.data.task_id\r\n\r\n        // 建立WebSocket连接监听进度\r\n        ws = new WebSocket(`ws://10.241.109.58:8000/ws/progress/${taskId.value}/`)\r\n\r\n        ws.onopen = () => {\r\n          console.log('WebSocket连接已建立')\r\n          ws.send(JSON.stringify({type: 'init', task_id: taskId.value}))\r\n        }\r\n\r\n        ws.onmessage = (event) => {\r\n          const data = JSON.parse(event.data)\r\n          if (data.progress !== undefined) {\r\n            message.value = '';\r\n            progress.value = data.progress\r\n            if (data.progress >= 100) {\r\n              translationComplete.value = true\r\n            }\r\n          }\r\n        }\r\n\r\n        ws.onerror = (error) => {\r\n          console.error('WebSocket错误:', error)\r\n        }\r\n\r\n        ws.onclose = () => {\r\n          console.log('WebSocket连接已关闭')\r\n        }\r\n\r\n      } catch (error) {\r\n        console.error('文件上传或翻译失败:', error)\r\n      }\r\n    }\r\n\r\n    // 加载翻译后的PDF\r\n    const loadTranslatedPdf = async () => {\r\n      if (!taskId.value) return\r\n\r\n      try {\r\n        const url = `http://10.241.109.58:8000/blogs/download/${taskId.value}/?t=${Date.now()}`\r\n        translatedPdfSource.value = url\r\n        showPdfViewer.value = true\r\n\r\n        // 重置页码\r\n        visiblePages.value = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\r\n        lastPage.value = 10\r\n\r\n      } catch (error) {\r\n        console.error('加载翻译结果失败:', error)\r\n      }\r\n    }\r\n\r\n    // 加载更多页面\r\n    const loadMorePages = () => {\r\n      if (loading.value || lastPage.value >= totalPages.value) return\r\n\r\n      loading.value = true\r\n      const newPages = []\r\n      const pagesToLoad = Math.min(2, totalPages.value - lastPage.value)\r\n\r\n      for (let i = 1; i <= pagesToLoad; i++) {\r\n        newPages.push(lastPage.value + i)\r\n      }\r\n\r\n      visiblePages.value = [...visiblePages.value, ...newPages]\r\n      lastPage.value += pagesToLoad\r\n      loading.value = false\r\n    }\r\n\r\n    // 滚动处理\r\n    const handleScroll = () => {\r\n      if (!scrollContainer.value) return\r\n\r\n      const scrollPos = scrollContainer.value.scrollTop + scrollContainer.value.clientHeight\r\n      const totalHeight = scrollContainer.value.scrollHeight\r\n\r\n      if (totalHeight - scrollPos < 500) {\r\n        loadMorePages()\r\n      }\r\n    }\r\n\r\n    // 页面渲染回调\r\n    const onPageRendered = (type, page) => {\r\n      console.log(`${type} PDF 第 ${page} 页渲染完成`)\r\n\r\n      // 同步两侧页面高度\r\n      if (originalPdfPages.value[page-1] && translatedPdfPages.value[page-1]) {\r\n        const originalHeight = originalPdfPages.value[page-1].$el.clientHeight\r\n        const translatedHeight = translatedPdfPages.value[page-1].$el.clientHeight\r\n        const maxHeight = Math.max(originalHeight, translatedHeight)\r\n\r\n        originalPdfPages.value[page-1].$el.style.minHeight = `${maxHeight}px`\r\n        translatedPdfPages.value[page-1].$el.style.minHeight = `${maxHeight}px`\r\n      }\r\n    }\r\n\r\n    onMounted(() => {\r\n      if (scrollContainer.value) {\r\n        scrollContainer.value.addEventListener('scroll', handleScroll)\r\n      }\r\n    })\r\n\r\n    onUnmounted(() => {\r\n      if (scrollContainer.value) {\r\n        scrollContainer.value.removeEventListener('scroll', handleScroll)\r\n      }\r\n\r\n      // 释放对象URL\r\n      if (originalPdfSource.value) URL.revokeObjectURL(originalPdfSource.value)\r\n      if (ws) ws.close()\r\n    })\r\n\r\n    return {\r\n      originalPdfSource,\r\n      translatedPdfSource,\r\n      originalFileName,\r\n      selectedLanguage,\r\n      progress,\r\n      translationComplete,\r\n      showPdfViewer,\r\n      visiblePages,\r\n      loading,\r\n      scrollContainer,\r\n      originalPdfPages,\r\n      translatedPdfPages,\r\n      handleFileUpload,\r\n      uploadAndTranslate,\r\n      loadTranslatedPdf,\r\n      onPageRendered,\r\n      message\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.pdf-comparison-container {\r\n  width: 100%;\r\n  height: 100vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.control-panel {\r\n  padding: 20px;\r\n  background: #f5f5f5;\r\n  border-bottom: 1px solid #ddd;\r\n}\r\n\r\n.upload-section {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 20px;\r\n  margin-bottom: 15px;\r\n}\r\n\r\n.upload-box {\r\n  position: relative;\r\n  width: 200px;\r\n  height: 40px;\r\n}\r\n\r\n.file-input {\r\n  opacity: 0;\r\n  position: absolute;\r\n  width: 100%;\r\n  height: 100%;\r\n  cursor: pointer;\r\n}\r\n\r\n.upload-label {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 100%;\r\n  height: 100%;\r\n  border: 1px dashed #ccc;\r\n  border-radius: 4px;\r\n  background: white;\r\n  transition: all 0.3s;\r\n}\r\n\r\n.upload-label:hover {\r\n  border-color: #409eff;\r\n  background: #f0f7ff;\r\n}\r\n\r\n.language-selector {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 10px;\r\n}\r\n\r\n.language-dropdown {\r\n  padding: 5px;\r\n  border: 1px solid #ddd;\r\n  border-radius: 4px;\r\n}\r\n\r\n.action-button {\r\n  padding: 8px 16px;\r\n  background-color: #4CAF50;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  transition: background-color 0.3s;\r\n}\r\n\r\n.action-button:hover {\r\n  background-color: #45a049;\r\n}\r\n\r\n.action-button:disabled {\r\n  background-color: #cccccc;\r\n  cursor: not-allowed;\r\n}\r\n\r\n.progress-section {\r\n  margin-top: 15px;\r\n}\r\n\r\n.progress-container {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 10px;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.progress-bar {\r\n  flex: 1;\r\n  height: 10px;\r\n}\r\n\r\n.progress-text {\r\n  min-width: 40px;\r\n  text-align: right;\r\n}\r\n\r\n.pdf-viewer-wrapper {\r\n  flex: 1;\r\n  width: 100%;\r\n  overflow: hidden;\r\n}\r\n\r\n.scroll-container {\r\n  width: 100%;\r\n  height: 100%;\r\n  overflow-y: auto;\r\n}\r\n\r\n.content-wrapper {\r\n  display: flex;\r\n  min-height: 100%;\r\n}\r\n\r\n.pdf-column {\r\n  flex: 1;\r\n  padding: 15px;\r\n  box-sizing: border-box;\r\n}\r\n\r\n.pdf-header {\r\n  font-weight: bold;\r\n  margin-bottom: 15px;\r\n  padding-bottom: 5px;\r\n  border-bottom: 1px solid #eee;\r\n}\r\n\r\n.original-pdf {\r\n  border-right: 1px solid #ddd;\r\n}\r\n\r\n.vue-pdf-embed {\r\n  margin-bottom: 20px;\r\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.loading {\r\n  text-align: center;\r\n  padding: 20px;\r\n  color: #666;\r\n  background: #f5f5f5;\r\n  margin-top: 10px;\r\n  border-radius: 4px;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}