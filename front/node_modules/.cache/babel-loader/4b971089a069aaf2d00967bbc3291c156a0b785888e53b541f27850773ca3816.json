{"ast":null,"code":"import \"core-js/modules/web.url-search-params.delete.js\";\nimport \"core-js/modules/web.url-search-params.has.js\";\nimport \"core-js/modules/web.url-search-params.size.js\";\nimport VuePdfEmbed from 'vue-pdf-embed';\nimport { ref, onMounted, onUnmounted } from 'vue';\nimport axios from 'axios';\nexport default {\n  components: {\n    VuePdfEmbed\n  },\n  setup() {\n    // 文件上传相关\n    const originalPdfSource = ref(null);\n    const originalFileName = ref('');\n    const selectedLanguage = ref('zh');\n\n    // 翻译相关\n    const translatedPdfSource = ref(null);\n    const progress = ref(0);\n    const translationComplete = ref(false);\n    const taskId = ref(null);\n    let ws = null;\n\n    // PDF展示相关\n    const showPdfViewer = ref(false);\n    const originalVisiblePages = ref([]);\n    const translatedVisiblePages = ref([]);\n    const originalTotalPages = ref(0);\n    const translatedTotalPages = ref(0);\n    const pageSizes = ref({});\n\n    // DOM引用\n    const scrollContainer = ref(null);\n    const originalPdfPages = ref([]);\n    const translatedPdfPages = ref([]);\n    const message = ref('');\n\n    // 处理文件上传\n    const handleFileUpload = async event => {\n      const file = event.target.files[0];\n      if (!file || file.type !== 'application/pdf') {\n        alert('请上传有效的PDF文件');\n        return;\n      }\n      originalFileName.value = file.name;\n      originalPdfSource.value = URL.createObjectURL(file);\n      translatedPdfSource.value = null;\n      showPdfViewer.value = false;\n      progress.value = 0;\n      translationComplete.value = false;\n\n      // 使用vue-pdf-embed内置方法获取页数\n      const loadingTask = VuePdfEmbed.getDocument(originalPdfSource.value);\n      const pdf = await loadingTask.promise;\n      originalTotalPages.value = pdf.numPages;\n      originalVisiblePages.value = Array.from({\n        length: pdf.numPages\n      }, (_, i) => i + 1);\n    };\n\n    // 上传并翻译文件\n    const uploadAndTranslate = async () => {\n      if (!originalPdfSource.value) return;\n      try {\n        const fileInput = document.getElementById('originalPdf');\n        const file = fileInput.files[0];\n        const formData = new FormData();\n        formData.append('file', file);\n        formData.append('language', selectedLanguage.value);\n        formData.append('title', file.name);\n        message.value = '翻译排队中';\n        const response = await axios.post('http://10.241.109.58:8000/blogs/upload/', formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          }\n        });\n        taskId.value = response.data.task_id;\n\n        // 建立WebSocket连接监听进度\n        ws = new WebSocket(`ws://10.241.109.58:8000/ws/progress/${taskId.value}/`);\n        ws.onopen = () => {\n          console.log('WebSocket连接已建立');\n          ws.send(JSON.stringify({\n            type: 'init',\n            task_id: taskId.value\n          }));\n        };\n        ws.onmessage = event => {\n          const data = JSON.parse(event.data);\n          if (data.progress !== undefined) {\n            message.value = '';\n            progress.value = data.progress;\n            if (data.progress >= 100) {\n              translationComplete.value = true;\n            }\n          }\n        };\n        ws.onerror = error => {\n          console.error('WebSocket错误:', error);\n        };\n        ws.onclose = () => {\n          console.log('WebSocket连接已关闭');\n        };\n      } catch (error) {\n        console.error('文件上传或翻译失败:', error);\n      }\n    };\n\n    // 加载翻译后的PDF\n    const loadTranslatedPdf = async () => {\n      if (!taskId.value) return;\n      try {\n        const url = `http://10.241.109.58:8000/blogs/download/${taskId.value}/?t=${Date.now()}`;\n        translatedPdfSource.value = url;\n\n        // 使用vue-pdf-embed内置方法获取页数\n        const loadingTask = VuePdfEmbed.getDocument(translatedPdfSource.value);\n        const pdf = await loadingTask.promise;\n        translatedTotalPages.value = pdf.numPages;\n        translatedVisiblePages.value = Array.from({\n          length: pdf.numPages\n        }, (_, i) => i + 1);\n        showPdfViewer.value = true;\n      } catch (error) {\n        console.error('加载翻译结果失败:', error);\n      }\n    };\n\n    // 处理页面尺寸变化\n    const handlePageSize = ({\n      page,\n      width,\n      height\n    }) => {\n      pageSizes.value[page] = {\n        width,\n        height\n      };\n    };\n\n    // 页面渲染回调\n    const onPageRendered = (type, page) => {\n      console.log(`${type} PDF 第 ${page} 页渲染完成`);\n\n      // 同步两侧页面高度\n      if (originalPdfPages.value[page - 1] && translatedPdfPages.value[page - 1]) {\n        const originalHeight = originalPdfPages.value[page - 1].$el.clientHeight;\n        const translatedHeight = translatedPdfPages.value[page - 1].$el.clientHeight;\n        const maxHeight = Math.max(originalHeight, translatedHeight);\n        originalPdfPages.value[page - 1].$el.style.minHeight = `${maxHeight}px`;\n        translatedPdfPages.value[page - 1].$el.style.minHeight = `${maxHeight}px`;\n      }\n    };\n    onMounted(() => {\n      if (scrollContainer.value) {\n        scrollContainer.value.addEventListener('scroll', () => {\n          // 可以在这里添加滚动事件处理\n        });\n      }\n    });\n    onUnmounted(() => {\n      if (scrollContainer.value) {\n        scrollContainer.value.removeEventListener('scroll', () => {});\n      }\n\n      // 释放对象URL\n      if (originalPdfSource.value) URL.revokeObjectURL(originalPdfSource.value);\n      if (ws) ws.close();\n    });\n    return {\n      originalPdfSource,\n      translatedPdfSource,\n      originalFileName,\n      selectedLanguage,\n      progress,\n      translationComplete,\n      showPdfViewer,\n      originalVisiblePages,\n      translatedVisiblePages,\n      originalTotalPages,\n      translatedTotalPages,\n      scrollContainer,\n      originalPdfPages,\n      translatedPdfPages,\n      handleFileUpload,\n      uploadAndTranslate,\n      loadTranslatedPdf,\n      onPageRendered,\n      handlePageSize,\n      message\n    };\n  }\n};","map":{"version":3,"names":["VuePdfEmbed","ref","onMounted","onUnmounted","axios","components","setup","originalPdfSource","originalFileName","selectedLanguage","translatedPdfSource","progress","translationComplete","taskId","ws","showPdfViewer","originalVisiblePages","translatedVisiblePages","originalTotalPages","translatedTotalPages","pageSizes","scrollContainer","originalPdfPages","translatedPdfPages","message","handleFileUpload","event","file","target","files","type","alert","value","name","URL","createObjectURL","loadingTask","getDocument","pdf","promise","numPages","Array","from","length","_","i","uploadAndTranslate","fileInput","document","getElementById","formData","FormData","append","response","post","headers","data","task_id","WebSocket","onopen","console","log","send","JSON","stringify","onmessage","parse","undefined","onerror","error","onclose","loadTranslatedPdf","url","Date","now","handlePageSize","page","width","height","onPageRendered","originalHeight","$el","clientHeight","translatedHeight","maxHeight","Math","max","style","minHeight","addEventListener","removeEventListener","revokeObjectURL","close"],"sources":["D:\\Study\\Code\\AICloud\\front\\src\\components\\TestView.vue"],"sourcesContent":["<template>\r\n  <div class=\"pdf-comparison-container\">\r\n    <!-- 上传和翻译控制区域 -->\r\n    <div class=\"control-panel\">\r\n      <div class=\"upload-section\">\r\n        <div class=\"upload-box\">\r\n          <input\r\n            type=\"file\"\r\n            id=\"originalPdf\"\r\n            accept=\".pdf\"\r\n            @change=\"handleFileUpload\"\r\n            class=\"file-input\"\r\n          >\r\n          <label for=\"originalPdf\" class=\"upload-label\">\r\n            <span v-if=\"!originalFileName\">上传PDF文件</span>\r\n            <span v-else>{{ originalFileName }}</span>\r\n          </label>\r\n        </div>\r\n\r\n        <div class=\"language-selector\">\r\n          <label>目标语言:</label>\r\n          <select v-model=\"selectedLanguage\" class=\"language-dropdown\">\r\n            <option value=\"zh\">中文(简体)</option>\r\n            <option value=\"en\">英语</option>\r\n          </select>\r\n          <button\r\n            @click=\"uploadAndTranslate\"\r\n            class=\"action-button\"\r\n            :disabled=\"!originalPdfSource\"\r\n          >\r\n            翻译文档\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <p v-if=\"message\" class=\"message\">{{ message }}</p>\r\n\r\n      <div class=\"progress-section\" v-if=\"progress > 0\">\r\n        <div class=\"progress-container\">\r\n          <label>翻译进度:</label>\r\n          <progress :value=\"progress\" max=\"100\" class=\"progress-bar\"></progress>\r\n          <span class=\"progress-text\">{{ progress }}%</span>\r\n        </div>\r\n        <button\r\n          v-if=\"translationComplete\"\r\n          @click=\"loadTranslatedPdf\"\r\n          class=\"action-button\"\r\n        >\r\n          加载翻译结果\r\n        </button>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- PDF对比展示区域 -->\r\n    <div v-if=\"showPdfViewer\" class=\"pdf-viewer-wrapper\">\r\n      <div class=\"scroll-container\" ref=\"scrollContainer\">\r\n        <div class=\"content-wrapper\">\r\n          <!-- 左侧原始PDF -->\r\n          <div class=\"pdf-column original-pdf\">\r\n            <div class=\"pdf-header\">原始文档 (共{{ originalTotalPages }}页)</div>\r\n            <div v-for=\"page in originalVisiblePages\" :key=\"'original-'+page\">\r\n              <vue-pdf-embed\r\n                :source=\"originalPdfSource\"\r\n                :page=\"page\"\r\n                @rendered=\"onPageRendered('original', page)\"\r\n                @page-size=\"handlePageSize\"\r\n                ref=\"originalPdfPages\"\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <!-- 右侧翻译后PDF -->\r\n          <div class=\"pdf-column translated-pdf\">\r\n            <div class=\"pdf-header\">翻译结果 (共{{ translatedTotalPages }}页)</div>\r\n            <div v-for=\"page in translatedVisiblePages\" :key=\"'translated-'+page\">\r\n              <vue-pdf-embed\r\n                :source=\"translatedPdfSource\"\r\n                :page=\"page\"\r\n                @rendered=\"onPageRendered('translated', page)\"\r\n                @page-size=\"handlePageSize\"\r\n                ref=\"translatedPdfPages\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport VuePdfEmbed from 'vue-pdf-embed'\r\nimport { ref, onMounted, onUnmounted } from 'vue'\r\nimport axios from 'axios'\r\n\r\nexport default {\r\n  components: {\r\n    VuePdfEmbed\r\n  },\r\n  setup() {\r\n    // 文件上传相关\r\n    const originalPdfSource = ref(null)\r\n    const originalFileName = ref('')\r\n    const selectedLanguage = ref('zh')\r\n\r\n    // 翻译相关\r\n    const translatedPdfSource = ref(null)\r\n    const progress = ref(0)\r\n    const translationComplete = ref(false)\r\n    const taskId = ref(null)\r\n    let ws = null\r\n\r\n    // PDF展示相关\r\n    const showPdfViewer = ref(false)\r\n    const originalVisiblePages = ref([])\r\n    const translatedVisiblePages = ref([])\r\n    const originalTotalPages = ref(0)\r\n    const translatedTotalPages = ref(0)\r\n    const pageSizes = ref({})\r\n\r\n    // DOM引用\r\n    const scrollContainer = ref(null)\r\n    const originalPdfPages = ref([])\r\n    const translatedPdfPages = ref([])\r\n    const message = ref('')\r\n\r\n    // 处理文件上传\r\n    const handleFileUpload = async (event) => {\r\n      const file = event.target.files[0]\r\n      if (!file || file.type !== 'application/pdf') {\r\n        alert('请上传有效的PDF文件')\r\n        return\r\n      }\r\n\r\n      originalFileName.value = file.name\r\n      originalPdfSource.value = URL.createObjectURL(file)\r\n      translatedPdfSource.value = null\r\n      showPdfViewer.value = false\r\n      progress.value = 0\r\n      translationComplete.value = false\r\n\r\n      // 使用vue-pdf-embed内置方法获取页数\r\n      const loadingTask = VuePdfEmbed.getDocument(originalPdfSource.value)\r\n      const pdf = await loadingTask.promise\r\n      originalTotalPages.value = pdf.numPages\r\n      originalVisiblePages.value = Array.from({ length: pdf.numPages }, (_, i) => i + 1)\r\n    }\r\n\r\n    // 上传并翻译文件\r\n    const uploadAndTranslate = async () => {\r\n      if (!originalPdfSource.value) return\r\n\r\n      try {\r\n        const fileInput = document.getElementById('originalPdf')\r\n        const file = fileInput.files[0]\r\n\r\n        const formData = new FormData()\r\n        formData.append('file', file)\r\n        formData.append('language', selectedLanguage.value)\r\n        formData.append('title', file.name)\r\n\r\n        message.value = '翻译排队中'\r\n        const response = await axios.post('http://10.241.109.58:8000/blogs/upload/', formData, {\r\n          headers: {\r\n            'Content-Type': 'multipart/form-data',\r\n          },\r\n        })\r\n\r\n        taskId.value = response.data.task_id\r\n\r\n        // 建立WebSocket连接监听进度\r\n        ws = new WebSocket(`ws://10.241.109.58:8000/ws/progress/${taskId.value}/`)\r\n\r\n        ws.onopen = () => {\r\n          console.log('WebSocket连接已建立')\r\n          ws.send(JSON.stringify({type: 'init', task_id: taskId.value}))\r\n        }\r\n\r\n        ws.onmessage = (event) => {\r\n          const data = JSON.parse(event.data)\r\n          if (data.progress !== undefined) {\r\n            message.value = ''\r\n            progress.value = data.progress\r\n            if (data.progress >= 100) {\r\n              translationComplete.value = true\r\n            }\r\n          }\r\n        }\r\n\r\n        ws.onerror = (error) => {\r\n          console.error('WebSocket错误:', error)\r\n        }\r\n\r\n        ws.onclose = () => {\r\n          console.log('WebSocket连接已关闭')\r\n        }\r\n\r\n      } catch (error) {\r\n        console.error('文件上传或翻译失败:', error)\r\n      }\r\n    }\r\n\r\n    // 加载翻译后的PDF\r\n    const loadTranslatedPdf = async () => {\r\n      if (!taskId.value) return\r\n\r\n      try {\r\n        const url = `http://10.241.109.58:8000/blogs/download/${taskId.value}/?t=${Date.now()}`\r\n        translatedPdfSource.value = url\r\n\r\n        // 使用vue-pdf-embed内置方法获取页数\r\n        const loadingTask = VuePdfEmbed.getDocument(translatedPdfSource.value)\r\n        const pdf = await loadingTask.promise\r\n        translatedTotalPages.value = pdf.numPages\r\n        translatedVisiblePages.value = Array.from({ length: pdf.numPages }, (_, i) => i + 1)\r\n\r\n        showPdfViewer.value = true\r\n\r\n      } catch (error) {\r\n        console.error('加载翻译结果失败:', error)\r\n      }\r\n    }\r\n\r\n    // 处理页面尺寸变化\r\n    const handlePageSize = ({ page, width, height }) => {\r\n      pageSizes.value[page] = { width, height }\r\n    }\r\n\r\n    // 页面渲染回调\r\n    const onPageRendered = (type, page) => {\r\n      console.log(`${type} PDF 第 ${page} 页渲染完成`)\r\n\r\n      // 同步两侧页面高度\r\n      if (originalPdfPages.value[page-1] && translatedPdfPages.value[page-1]) {\r\n        const originalHeight = originalPdfPages.value[page-1].$el.clientHeight\r\n        const translatedHeight = translatedPdfPages.value[page-1].$el.clientHeight\r\n        const maxHeight = Math.max(originalHeight, translatedHeight)\r\n\r\n        originalPdfPages.value[page-1].$el.style.minHeight = `${maxHeight}px`\r\n        translatedPdfPages.value[page-1].$el.style.minHeight = `${maxHeight}px`\r\n      }\r\n    }\r\n\r\n    onMounted(() => {\r\n      if (scrollContainer.value) {\r\n        scrollContainer.value.addEventListener('scroll', () => {\r\n          // 可以在这里添加滚动事件处理\r\n        })\r\n      }\r\n    })\r\n\r\n    onUnmounted(() => {\r\n      if (scrollContainer.value) {\r\n        scrollContainer.value.removeEventListener('scroll', () => {})\r\n      }\r\n\r\n      // 释放对象URL\r\n      if (originalPdfSource.value) URL.revokeObjectURL(originalPdfSource.value)\r\n      if (ws) ws.close()\r\n    })\r\n\r\n    return {\r\n      originalPdfSource,\r\n      translatedPdfSource,\r\n      originalFileName,\r\n      selectedLanguage,\r\n      progress,\r\n      translationComplete,\r\n      showPdfViewer,\r\n      originalVisiblePages,\r\n      translatedVisiblePages,\r\n      originalTotalPages,\r\n      translatedTotalPages,\r\n      scrollContainer,\r\n      originalPdfPages,\r\n      translatedPdfPages,\r\n      handleFileUpload,\r\n      uploadAndTranslate,\r\n      loadTranslatedPdf,\r\n      onPageRendered,\r\n      handlePageSize,\r\n      message\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n/* 原有样式保持不变 */\r\n.pdf-comparison-container {\r\n  width: 100%;\r\n  height: 100vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.control-panel {\r\n  padding: 20px;\r\n  background: #f5f5f5;\r\n  border-bottom: 1px solid #ddd;\r\n}\r\n\r\n.upload-section {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 20px;\r\n  margin-bottom: 15px;\r\n}\r\n\r\n.upload-box {\r\n  position: relative;\r\n  width: 200px;\r\n  height: 40px;\r\n}\r\n\r\n.file-input {\r\n  opacity: 0;\r\n  position: absolute;\r\n  width: 100%;\r\n  height: 100%;\r\n  cursor: pointer;\r\n}\r\n\r\n.upload-label {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 100%;\r\n  height: 100%;\r\n  border: 1px dashed #ccc;\r\n  border-radius: 4px;\r\n  background: white;\r\n  transition: all 0.3s;\r\n}\r\n\r\n.upload-label:hover {\r\n  border-color: #409eff;\r\n  background: #f0f7ff;\r\n}\r\n\r\n.language-selector {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 10px;\r\n}\r\n\r\n.language-dropdown {\r\n  padding: 5px;\r\n  border: 1px solid #ddd;\r\n  border-radius: 4px;\r\n}\r\n\r\n.action-button {\r\n  padding: 8px 16px;\r\n  background-color: #4CAF50;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  transition: background-color 0.3s;\r\n}\r\n\r\n.action-button:hover {\r\n  background-color: #45a049;\r\n}\r\n\r\n.action-button:disabled {\r\n  background-color: #cccccc;\r\n  cursor: not-allowed;\r\n}\r\n\r\n.progress-section {\r\n  margin-top: 15px;\r\n}\r\n\r\n.progress-container {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 10px;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.progress-bar {\r\n  flex: 1;\r\n  height: 10px;\r\n}\r\n\r\n.progress-text {\r\n  min-width: 40px;\r\n  text-align: right;\r\n}\r\n\r\n.pdf-viewer-wrapper {\r\n  flex: 1;\r\n  width: 100%;\r\n  overflow: hidden;\r\n}\r\n\r\n.scroll-container {\r\n  width: 100%;\r\n  height: 100%;\r\n  overflow-y: auto;\r\n}\r\n\r\n.content-wrapper {\r\n  display: flex;\r\n  min-height: 100%;\r\n}\r\n\r\n.pdf-column {\r\n  flex: 1;\r\n  padding: 15px;\r\n  box-sizing: border-box;\r\n}\r\n\r\n.pdf-header {\r\n  font-weight: bold;\r\n  margin-bottom: 15px;\r\n  padding-bottom: 5px;\r\n  border-bottom: 1px solid #eee;\r\n}\r\n\r\n.original-pdf {\r\n  border-right: 1px solid #ddd;\r\n}\r\n\r\n.vue-pdf-embed {\r\n  margin-bottom: 20px;\r\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.loading {\r\n  text-align: center;\r\n  padding: 20px;\r\n  color: #666;\r\n  background: #f5f5f5;\r\n  margin-top: 10px;\r\n  border-radius: 4px;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}