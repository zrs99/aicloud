{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createElementVNode as _createElementVNode, normalizeStyle as _normalizeStyle, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString } from \"vue\";\nconst _hoisted_1 = {\n  class: \"pdf-viewer-container\"\n};\nconst _hoisted_2 = [\"width\", \"height\"];\nconst _hoisted_3 = {\n  key: 0,\n  class: \"loading-indicator\"\n};\nconst _hoisted_4 = {\n  key: 1,\n  class: \"error-message\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", {\n    class: \"pdf-scroll-container\",\n    ref: \"scrollContainer\",\n    onScroll: $setup.handleScroll\n  }, [_createElementVNode(\"div\", {\n    class: \"pdf-pages-container\",\n    style: _normalizeStyle({\n      height: $setup.totalHeight + 'px'\n    })\n  }, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.visiblePages, page => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: page.pageNumber,\n      class: \"pdf-page-container\",\n      style: _normalizeStyle({\n        top: page.offset + 'px',\n        height: page.height + 'px',\n        width: '100%'\n      })\n    }, [_createElementVNode(\"canvas\", {\n      ref_for: true,\n      ref: el => $setup.setCanvasRef(el, page.pageNumber),\n      width: page.width,\n      height: page.height\n    }, null, 8 /* PROPS */, _hoisted_2)], 4 /* STYLE */);\n  }), 128 /* KEYED_FRAGMENT */))], 4 /* STYLE */)], 544 /* NEED_HYDRATION, NEED_PATCH */), $setup.loading ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, \"加载中...\")) : _createCommentVNode(\"v-if\", true), $setup.error ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, _toDisplayString($setup.error), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createElementVNode","ref","onScroll","$setup","handleScroll","style","_normalizeStyle","height","totalHeight","_Fragment","_renderList","visiblePages","page","pageNumber","offset","ref_for","el","setCanvasRef","width","_hoisted_2","loading","_hoisted_3","_createCommentVNode","error","_hoisted_4","_toDisplayString"],"sources":["D:\\Study\\Code\\AICloud\\front\\src\\components\\PDFViewer.vue"],"sourcesContent":["<template>\r\n  <div class=\"pdf-viewer-container\">\r\n    <div class=\"pdf-scroll-container\" ref=\"scrollContainer\" @scroll=\"handleScroll\">\r\n      <div class=\"pdf-pages-container\" :style=\"{ height: totalHeight + 'px' }\">\r\n        <div\r\n          v-for=\"page in visiblePages\"\r\n          :key=\"page.pageNumber\"\r\n          class=\"pdf-page-container\"\r\n          :style=\"{\r\n            top: page.offset + 'px',\r\n            height: page.height + 'px',\r\n            width: '100%'\r\n          }\"\r\n        >\r\n          <canvas\r\n            :ref=\"el => setCanvasRef(el, page.pageNumber)\"\r\n            :width=\"page.width\"\r\n            :height=\"page.height\"\r\n          ></canvas>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div v-if=\"loading\" class=\"loading-indicator\">加载中...</div>\r\n    <div v-if=\"error\" class=\"error-message\">{{ error }}</div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, onMounted, onUnmounted } from 'vue'\r\nimport * as pdfjsLib from 'pdfjs-dist/build/pdf'\r\nimport pdfjsWorker from 'pdfjs-dist/build/pdf.worker.min?url'\r\n//\r\n// import workerUrl from 'pdfjs-dist/build/pdf.worker.min.js'\r\npdfjsLib.GlobalWorkerOptions.workerSrc = workerUrl\r\n\r\nconst props = defineProps({\r\n  pdfUrl: {\r\n    type: String,\r\n    required: true\r\n  },\r\n  scale: {\r\n    type: Number,\r\n    default: 1.5\r\n  },\r\n  bufferPages: {\r\n    type: Number,\r\n    default: 2\r\n  }\r\n})\r\n\r\n// Refs\r\nconst scrollContainer = ref(null)\r\nconst pageCanvases = ref([])\r\nconst renderTasks = new Map()\r\nconst pdfDoc = ref(null)\r\nconst pageCount = ref(0)\r\nconst totalHeight = ref(0)\r\nconst pageDimensions = ref([])\r\nconst visiblePages = ref([])\r\nconst loading = ref(true)\r\nconst error = ref(null)\r\nconst viewportHeight = ref(0)\r\n\r\n// 初始化 PDF\r\nconst initPDF = async () => {\r\n  try {\r\n    loading.value = true\r\n    error.value = null\r\n\r\n    // 加载 PDF 文档\r\n    const loadingTask = pdfjsLib.getDocument({\r\n      url: props.pdfUrl,\r\n      disableAutoFetch: true,\r\n      disableStream: true\r\n    })\r\n\r\n    pdfDoc.value = await loadingTask.promise\r\n    pageCount.value = pdfDoc.value.numPages\r\n    pageCanvases.value = new Array(pageCount.value).fill(null)\r\n\r\n    // 计算页面尺寸\r\n    await calculatePageDimensions()\r\n    updateVisiblePages()\r\n  } catch (err) {\r\n    console.error('PDF 初始化失败:', err)\r\n    error.value = `加载失败: ${err.message}`\r\n  } finally {\r\n    loading.value = false\r\n  }\r\n}\r\n\r\n// 计算页面尺寸\r\nconst calculatePageDimensions = async () => {\r\n  const dimensions = []\r\n  let currentOffset = 0\r\n\r\n  for (let i = 1; i <= pageCount.value; i++) {\r\n    const page = await pdfDoc.value.getPage(i)\r\n    const viewport = page.getViewport({ scale: props.scale })\r\n\r\n    dimensions.push({\r\n      pageNumber: i,\r\n      height: viewport.height,\r\n      width: viewport.width,\r\n      offset: currentOffset\r\n    })\r\n\r\n    currentOffset += viewport.height\r\n  }\r\n\r\n  pageDimensions.value = dimensions\r\n  totalHeight.value = currentOffset\r\n}\r\n\r\n// 设置 Canvas 引用\r\nconst setCanvasRef = (el, pageNumber) => {\r\n  if (el) {\r\n    pageCanvases.value[pageNumber - 1] = el\r\n    // 立即渲染可见页面\r\n    if (visiblePages.value.some(p => p.pageNumber === pageNumber)) {\r\n      renderPage(pageNumber)\r\n    }\r\n  }\r\n}\r\n\r\n// 渲染页面\r\nconst renderPage = async (pageNumber) => {\r\n  if (!pdfDoc.value || renderTasks.has(pageNumber)) return\r\n\r\n  try {\r\n    const page = await pdfDoc.value.getPage(pageNumber)\r\n    const canvas = pageCanvases.value[pageNumber - 1]\r\n    if (!canvas) return\r\n\r\n    const dimension = pageDimensions.value[pageNumber - 1]\r\n    const viewport = page.getViewport({ scale: props.scale })\r\n\r\n    // 确保 Canvas 尺寸正确\r\n    canvas.width = dimension.width\r\n    canvas.height = dimension.height\r\n\r\n    const task = page.render({\r\n      canvasContext: canvas.getContext('2d'),\r\n      viewport: viewport\r\n    })\r\n\r\n    renderTasks.set(pageNumber, task)\r\n    await task.promise\r\n  } catch (err) {\r\n    if (err.name !== 'RenderingCancelledException') {\r\n      console.error(`页面 ${pageNumber} 渲染失败:`, err)\r\n    }\r\n  } finally {\r\n    renderTasks.delete(pageNumber)\r\n  }\r\n}\r\n\r\n// 更新可见页面\r\nconst updateVisiblePages = () => {\r\n  if (!scrollContainer.value || pageDimensions.value.length === 0) return\r\n\r\n  viewportHeight.value = scrollContainer.value.clientHeight\r\n  const scrollTop = scrollContainer.value.scrollTop\r\n  const bufferHeight = viewportHeight.value * props.bufferPages\r\n\r\n  const startY = Math.max(0, scrollTop - bufferHeight)\r\n  const endY = scrollTop + viewportHeight.value + bufferHeight\r\n\r\n  visiblePages.value = pageDimensions.value.filter(\r\n    page => page.offset + page.height > startY && page.offset < endY\r\n  )\r\n\r\n  // 批量渲染可见页面\r\n  visiblePages.value.forEach(page => {\r\n    if (pageCanvases.value[page.pageNumber - 1]) {\r\n      renderPage(page.pageNumber)\r\n    }\r\n  })\r\n}\r\n\r\n// 滚动处理\r\nconst handleScroll = () => {\r\n  requestAnimationFrame(updateVisiblePages)\r\n}\r\n\r\n// 窗口大小变化处理\r\nconst handleResize = () => {\r\n  if (pdfDoc.value) {\r\n    calculatePageDimensions().then(updateVisiblePages)\r\n  }\r\n}\r\n\r\n// 生命周期\r\nonMounted(() => {\r\n  initPDF()\r\n  window.addEventListener('resize', handleResize)\r\n})\r\n\r\nonUnmounted(() => {\r\n  renderTasks.forEach(task => task.cancel())\r\n  renderTasks.clear()\r\n  window.removeEventListener('resize', handleResize)\r\n\r\n  if (pdfDoc.value) {\r\n    pdfDoc.value.destroy()\r\n    pdfDoc.value = null\r\n  }\r\n})\r\n</script>\r\n\r\n<style scoped>\r\n.pdf-viewer-container {\r\n  position: relative;\r\n  width: 100%;\r\n  height: 100vh;\r\n  overflow: hidden;\r\n  background: #f5f5f5;\r\n}\r\n\r\n.pdf-scroll-container {\r\n  width: 100%;\r\n  height: 100%;\r\n  overflow-y: auto;\r\n  position: relative;\r\n}\r\n\r\n.pdf-pages-container {\r\n  position: relative;\r\n  width: 100%;\r\n}\r\n\r\n.pdf-page-container {\r\n  position: absolute;\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n  padding: 20px 0;\r\n  box-sizing: border-box;\r\n}\r\n\r\n.pdf-page-container canvas {\r\n  background: white;\r\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\r\n  max-width: 100%;\r\n}\r\n\r\n.loading-indicator,\r\n.error-message {\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  padding: 12px 24px;\r\n  border-radius: 4px;\r\n  font-size: 16px;\r\n}\r\n\r\n.loading-indicator {\r\n  background: rgba(0, 0, 0, 0.7);\r\n  color: white;\r\n}\r\n\r\n.error-message {\r\n  background: #ffebee;\r\n  color: #c62828;\r\n  border: 1px solid #ef9a9a;\r\n  max-width: 80%;\r\n  text-align: center;\r\n}\r\n</style>\r\n"],"mappings":";;EACOA,KAAK,EAAC;AAAsB;mBADnC;;EAAAC,GAAA;EAsBwBD,KAAK,EAAC;;;EAtB9BC,GAAA;EAuBsBD,KAAK,EAAC;;;uBAtB1BE,mBAAA,CAuBM,OAvBNC,UAuBM,GAtBJC,mBAAA,CAmBM;IAnBDJ,KAAK,EAAC,sBAAsB;IAACK,GAAG,EAAC,iBAAiB;IAAEC,QAAM,EAAEC,MAAA,CAAAC;MAC/DJ,mBAAA,CAiBM;IAjBDJ,KAAK,EAAC,qBAAqB;IAAES,KAAK,EAH7CC,eAAA;MAAAC,MAAA,EAGyDJ,MAAA,CAAAK,WAAW;IAAA;yBAC5DV,mBAAA,CAeMW,SAAA,QAnBdC,WAAA,CAKyBP,MAAA,CAAAQ,YAAY,EAApBC,IAAI;yBADbd,mBAAA,CAeM;MAbHD,GAAG,EAAEe,IAAI,CAACC,UAAU;MACrBjB,KAAK,EAAC,oBAAoB;MACzBS,KAAK,EARhBC,eAAA;aAQsCM,IAAI,CAACE,MAAM;gBAA8BF,IAAI,CAACL,MAAM;;;QAMhFP,mBAAA,CAIU;MAlBpBe,OAAA;MAead,GAAG,EAAEe,EAAE,IAAIb,MAAA,CAAAc,YAAY,CAACD,EAAE,EAAEJ,IAAI,CAACC,UAAU;MAC3CK,KAAK,EAAEN,IAAI,CAACM,KAAK;MACjBX,MAAM,EAAEK,IAAI,CAACL;4BAjB1BY,UAAA,E;2FAsBehB,MAAA,CAAAiB,OAAO,I,cAAlBtB,mBAAA,CAA0D,OAA1DuB,UAA0D,EAAZ,QAAM,KAtBxDC,mBAAA,gBAuBenB,MAAA,CAAAoB,KAAK,I,cAAhBzB,mBAAA,CAAyD,OAAzD0B,UAAyD,EAAAC,gBAAA,CAAdtB,MAAA,CAAAoB,KAAK,oBAvBpDD,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}