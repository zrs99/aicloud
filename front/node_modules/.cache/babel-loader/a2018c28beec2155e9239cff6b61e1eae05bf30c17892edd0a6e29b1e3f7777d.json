{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveComponent as _resolveComponent, createVNode as _createVNode, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"pdf-viewer\"\n};\nconst _hoisted_2 = {\n  key: 0,\n  class: \"loading\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_vue_pdf_embed = _resolveComponent(\"vue-pdf-embed\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.visiblePages, page => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: page\n    }, [_createVNode(_component_vue_pdf_embed, {\n      source: $setup.pdfSource,\n      page: page,\n      onRendered: $setup.onPageRendered\n    }, null, 8 /* PROPS */, [\"source\", \"page\", \"onRendered\"])]);\n  }), 128 /* KEYED_FRAGMENT */)), $setup.loading ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, \"加载中...\")) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_Fragment","_renderList","$setup","visiblePages","page","_createVNode","_component_vue_pdf_embed","source","pdfSource","onRendered","onPageRendered","loading","_hoisted_2","_createCommentVNode"],"sources":["D:\\Study\\Code\\AICloud\\front\\src\\components\\PDFViewer.vue"],"sourcesContent":["<template>\r\n  <div class=\"pdf-viewer\">\r\n    <div v-for=\"page in visiblePages\" :key=\"page\">\r\n      <vue-pdf-embed\r\n        :source=\"pdfSource\"\r\n        :page=\"page\"\r\n        @rendered=\"onPageRendered\"\r\n      />\r\n    </div>\r\n    <div v-if=\"loading\" class=\"loading\">加载中...</div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport VuePdfEmbed from 'vue-pdf-embed'\r\nimport { ref, onMounted, onUnmounted } from 'vue'\r\n\r\nexport default {\r\n  components: {\r\n    VuePdfEmbed\r\n  },\r\n  setup() {\r\n    const pdfSource = ref('IDKL.pdf')\r\n    const totalPages = ref(0)\r\n    const visiblePages = ref([1, 2, 3])\r\n    const loading = ref(false)\r\n    const lastPageLoaded = ref(3)\r\n\r\n    const loadMorePages = () => {\r\n      if (loading.value || lastPageLoaded.value >= totalPages.value) return\r\n\r\n      loading.value = true\r\n      const newPages = []\r\n      const pagesToLoad = Math.min(2, totalPages.value - lastPageLoaded.value)\r\n\r\n      for (let i = 1; i <= pagesToLoad; i++) {\r\n        newPages.push(lastPageLoaded.value + i)\r\n      }\r\n\r\n      visiblePages.value = [...visiblePages.value, ...newPages]\r\n      lastPageLoaded.value += pagesToLoad\r\n      loading.value = false\r\n    }\r\n\r\n    const handleScroll = () => {\r\n      const scrollPosition = window.scrollY + window.innerHeight\r\n      const documentHeight = document.documentElement.scrollHeight\r\n\r\n      if (documentHeight - scrollPosition < 500) {\r\n        loadMorePages()\r\n      }\r\n    }\r\n\r\n    const onPageRendered = () => {\r\n      // 可以在这里添加渲染完成后的逻辑\r\n    }\r\n\r\n    onMounted(() => {\r\n      // 获取PDF总页数\r\n      // 实际应用中可能需要使用PDF.js API获取总页数\r\n      totalPages.value = 10 // 假设总页数为10\r\n      window.addEventListener('scroll', handleScroll)\r\n    })\r\n\r\n    onUnmounted(() => {\r\n      window.removeEventListener('scroll', handleScroll)\r\n    })\r\n\r\n    return {\r\n      pdfSource,\r\n      visiblePages,\r\n      loading,\r\n      onPageRendered\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n.pdf-viewer {\r\n  max-width: 800px;\r\n  margin: 0 auto;\r\n}\r\n\r\n.loading {\r\n  text-align: center;\r\n  padding: 20px;\r\n}\r\n</style>"],"mappings":";;EACOA,KAAK,EAAC;AAAY;;EADzBC,GAAA;EASwBD,KAAK,EAAC;;;;uBAR5BE,mBAAA,CASM,OATNC,UASM,I,kBARJD,mBAAA,CAMME,SAAA,QARVC,WAAA,CAEwBC,MAAA,CAAAC,YAAY,EAApBC,IAAI;yBAAhBN,mBAAA,CAMM;MAN6BD,GAAG,EAAEO;IAAI,IAC1CC,YAAA,CAIEC,wBAAA;MAHCC,MAAM,EAAEL,MAAA,CAAAM,SAAS;MACjBJ,IAAI,EAAEA,IAAI;MACVK,UAAQ,EAAEP,MAAA,CAAAQ;;kCAGJR,MAAA,CAAAS,OAAO,I,cAAlBb,mBAAA,CAAgD,OAAhDc,UAAgD,EAAZ,QAAM,KAT9CC,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}