{"ast":null,"code":"import * as pdfjsLib from 'pdfjs-dist';\nexport default {\n  data() {\n    return {\n      pdfDoc: null,\n      pages: [],\n      canvases: [],\n      currentPage: 1,\n      isRendering: false,\n      pageRendering: false\n    };\n  },\n  async mounted() {\n    // 初始化PDF.js worker\n    pdfjsLib.GlobalWorkerOptions.workerSrc = 'https://cdn.jsdelivr.net/npm/pdfjs-dist@3.4.120/build/pdf.worker.min.js';\n\n    // 加载PDF文档\n    const loadingTask = pdfjsLib.getDocument('your-pdf-file.pdf');\n    this.pdfDoc = await loadingTask.promise;\n\n    // 初始化页面数组\n    this.pages = Array.from({\n      length: this.pdfDoc.numPages\n    }, (_, i) => ({\n      pageNumber: i + 1\n    }));\n\n    // 初始渲染前几页\n    this.renderPages(1, Math.min(3, this.pdfDoc.numPages));\n\n    // 添加滚动事件监听\n    window.addEventListener('scroll', this.handleScroll);\n  },\n  beforeUnmount() {\n    window.removeEventListener('scroll', this.handleScroll);\n  },\n  methods: {\n    async renderPages(start, end) {\n      if (this.isRendering) return;\n      this.isRendering = true;\n      for (let i = start; i <= end; i++) {\n        if (this.pageRendering || i > this.pdfDoc.numPages) continue;\n        this.pageRendering = true;\n        const page = await this.pdfDoc.getPage(i);\n        const viewport = page.getViewport({\n          scale: 1.5\n        });\n        const canvas = this.canvases[i - 1];\n        const context = canvas.getContext('2d');\n        canvas.height = viewport.height;\n        canvas.width = viewport.width;\n        await page.render({\n          canvasContext: context,\n          viewport: viewport\n        }).promise;\n        this.pageRendering = false;\n      }\n      this.isRendering = false;\n    },\n    handleScroll() {\n      const scrollPosition = window.scrollY + window.innerHeight;\n      const containerBottom = this.$refs.pdfContainer.offsetHeight;\n\n      // 当滚动到接近底部时加载更多页面\n      if (scrollPosition > containerBottom - 500 && this.currentPage < this.pdfDoc.numPages && !this.isRendering) {\n        const nextPage = this.currentPage + 1;\n        this.renderPages(nextPage, Math.min(nextPage + 2, this.pdfDoc.numPages));\n        this.currentPage = nextPage;\n      }\n    }\n  }\n};","map":{"version":3,"names":["pdfjsLib","data","pdfDoc","pages","canvases","currentPage","isRendering","pageRendering","mounted","GlobalWorkerOptions","workerSrc","loadingTask","getDocument","promise","Array","from","length","numPages","_","i","pageNumber","renderPages","Math","min","window","addEventListener","handleScroll","beforeUnmount","removeEventListener","methods","start","end","page","getPage","viewport","getViewport","scale","canvas","context","getContext","height","width","render","canvasContext","scrollPosition","scrollY","innerHeight","containerBottom","$refs","pdfContainer","offsetHeight","nextPage"],"sources":["D:\\Study\\Code\\AICloud\\front\\src\\components\\socketTest.vue"],"sourcesContent":["<template>\r\n  <div class=\"pdf-container\" ref=\"pdfContainer\">\r\n    <div v-for=\"page in pages\" :key=\"page.pageNumber\" class=\"pdf-page\">\r\n      <canvas :ref=\"el => { if (el) canvases[page.pageNumber-1] = el }\"></canvas>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport * as pdfjsLib from 'pdfjs-dist'\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      pdfDoc: null,\r\n      pages: [],\r\n      canvases: [],\r\n      currentPage: 1,\r\n      isRendering: false,\r\n      pageRendering: false\r\n    }\r\n  },\r\n  async mounted() {\r\n    // 初始化PDF.js worker\r\n    pdfjsLib.GlobalWorkerOptions.workerSrc = 'https://cdn.jsdelivr.net/npm/pdfjs-dist@3.4.120/build/pdf.worker.min.js'\r\n\r\n    // 加载PDF文档\r\n    const loadingTask = pdfjsLib.getDocument('your-pdf-file.pdf')\r\n    this.pdfDoc = await loadingTask.promise\r\n\r\n    // 初始化页面数组\r\n    this.pages = Array.from({ length: this.pdfDoc.numPages }, (_, i) => ({\r\n      pageNumber: i + 1\r\n    }))\r\n\r\n    // 初始渲染前几页\r\n    this.renderPages(1, Math.min(3, this.pdfDoc.numPages))\r\n\r\n    // 添加滚动事件监听\r\n    window.addEventListener('scroll', this.handleScroll)\r\n  },\r\n  beforeUnmount() {\r\n    window.removeEventListener('scroll', this.handleScroll)\r\n  },\r\n  methods: {\r\n    async renderPages(start, end) {\r\n      if (this.isRendering) return\r\n      this.isRendering = true\r\n\r\n      for (let i = start; i <= end; i++) {\r\n        if (this.pageRendering || i > this.pdfDoc.numPages) continue\r\n\r\n        this.pageRendering = true\r\n        const page = await this.pdfDoc.getPage(i)\r\n        const viewport = page.getViewport({ scale: 1.5 })\r\n\r\n        const canvas = this.canvases[i-1]\r\n        const context = canvas.getContext('2d')\r\n        canvas.height = viewport.height\r\n        canvas.width = viewport.width\r\n\r\n        await page.render({\r\n          canvasContext: context,\r\n          viewport: viewport\r\n        }).promise\r\n\r\n        this.pageRendering = false\r\n      }\r\n\r\n      this.isRendering = false\r\n    },\r\n    handleScroll() {\r\n      const scrollPosition = window.scrollY + window.innerHeight\r\n      const containerBottom = this.$refs.pdfContainer.offsetHeight\r\n\r\n      // 当滚动到接近底部时加载更多页面\r\n      if (scrollPosition > containerBottom - 500 &&\r\n          this.currentPage < this.pdfDoc.numPages &&\r\n          !this.isRendering) {\r\n        const nextPage = this.currentPage + 1\r\n        this.renderPages(nextPage, Math.min(nextPage + 2, this.pdfDoc.numPages))\r\n        this.currentPage = nextPage\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n.pdf-container {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  gap: 20px;\r\n  padding: 20px;\r\n}\r\n\r\n.pdf-page {\r\n  box-shadow: 0 0 5px rgba(0, 0, 0, 0.3);\r\n  margin-bottom: 20px;\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}