{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"dual-pdf-container\"\n};\nconst _hoisted_2 = {\n  class: \"pdf-column\",\n  ref: \"leftPdf\"\n};\nconst _hoisted_3 = {\n  class: \"pdf-column\",\n  ref: \"rightPdf\"\n};\nconst _hoisted_4 = {\n  key: 0,\n  class: \"loading\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_vue_pdf_embed = _resolveComponent(\"vue-pdf-embed\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.leftVisiblePages, page => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: 'left-' + page\n    }, [_createVNode(_component_vue_pdf_embed, {\n      source: $setup.leftPdfSource,\n      page: page,\n      onRendered: $event => _ctx.onPageRendered('left', page)\n    }, null, 8 /* PROPS */, [\"source\", \"page\", \"onRendered\"])]);\n  }), 128 /* KEYED_FRAGMENT */))], 512 /* NEED_PATCH */), _createElementVNode(\"div\", _hoisted_3, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.rightVisiblePages, page => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: 'right-' + page\n    }, [_createVNode(_component_vue_pdf_embed, {\n      source: $setup.rightPdfSource,\n      page: page,\n      onRendered: $event => _ctx.onPageRendered('right', page)\n    }, null, 8 /* PROPS */, [\"source\", \"page\", \"onRendered\"])]);\n  }), 128 /* KEYED_FRAGMENT */))], 512 /* NEED_PATCH */), $setup.loading ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, \"加载中...\")) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["class","ref","key","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_Fragment","_renderList","$setup","leftVisiblePages","page","_createVNode","_component_vue_pdf_embed","source","leftPdfSource","onRendered","$event","_ctx","onPageRendered","_hoisted_3","rightVisiblePages","rightPdfSource","loading","_hoisted_4","_createCommentVNode"],"sources":["D:\\Study\\Code\\AICloud\\front\\src\\components\\PDFViewer.vue"],"sourcesContent":["<template>\r\n  <div class=\"dual-pdf-container\">\r\n    <div class=\"pdf-column\" ref=\"leftPdf\">\r\n      <div v-for=\"page in leftVisiblePages\" :key=\"'left-' + page\">\r\n        <vue-pdf-embed\r\n          :source=\"leftPdfSource\"\r\n          :page=\"page\"\r\n          @rendered=\"onPageRendered('left', page)\"\r\n        />\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"pdf-column\" ref=\"rightPdf\">\r\n      <div v-for=\"page in rightVisiblePages\" :key=\"'right-' + page\">\r\n        <vue-pdf-embed\r\n          :source=\"rightPdfSource\"\r\n          :page=\"page\"\r\n          @rendered=\"onPageRendered('right', page)\"\r\n        />\r\n      </div>\r\n    </div>\r\n\r\n    <div v-if=\"loading\" class=\"loading\">加载中...</div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport VuePdfEmbed from 'vue-pdf-embed'\r\nimport { ref, onMounted, onUnmounted } from 'vue'\r\nimport { pdfjs } from 'vue-pdf-embed'\r\n\r\nexport default {\r\n  components: {\r\n    VuePdfEmbed\r\n  },\r\n  setup() {\r\n    // 初始化 PDF worker\r\n    pdfjs.GlobalWorkerOptions.workerSrc =\r\n      'https://cdn.jsdelivr.net/npm/pdfjs-dist@3.4.120/build/pdf.worker.min.js'\r\n\r\n    // 左侧PDF配置\r\n    const leftPdf = ref(null)\r\n    const leftPdfSource = ref('/111.pdf')  // 确保路径正确\r\n    const leftTotalPages = ref(0)\r\n    const leftVisiblePages = ref([])\r\n    const leftLastPageLoaded = ref(0)\r\n\r\n    // 右侧PDF配置\r\n    const rightPdf = ref(null)\r\n    const rightPdfSource = ref('/111_qs9p2cE-mono.pdf') // 确保路径正确\r\n    const rightTotalPages = ref(0)\r\n    const rightVisiblePages = ref([])\r\n    const rightLastPageLoaded = ref(0)\r\n\r\n    const loading = ref(false)\r\n    const isScrolling = ref(false)\r\n    const scrollSyncTimeout = ref(null)\r\n\r\n    // 加载PDF文档信息\r\n    const initPdf = async (source, totalPages) => {\r\n      try {\r\n        const pdf = await pdfjs.getDocument(source).promise\r\n        totalPages.value = pdf.numPages\r\n        return pdf.numPages\r\n      } catch (error) {\r\n        console.error('PDF加载失败:', error)\r\n        return 0\r\n      }\r\n    }\r\n\r\n    // 加载更多页面\r\n    const loadMorePages = async (side) => {\r\n      if (loading.value) return\r\n\r\n      loading.value = true\r\n      try {\r\n        const config = {\r\n          left: {\r\n            pages: leftVisiblePages,\r\n            lastPage: leftLastPageLoaded,\r\n            total: leftTotalPages\r\n          },\r\n          right: {\r\n            pages: rightVisiblePages,\r\n            lastPage: rightLastPageLoaded,\r\n            total: rightTotalPages\r\n          }\r\n        }[side]\r\n\r\n        if (config.lastPage.value >= config.total.value) {\r\n          loading.value = false\r\n          return\r\n        }\r\n\r\n        const pagesToLoad = Math.min(3, config.total.value - config.lastPage.value)\r\n        const newPages = Array.from(\r\n          { length: pagesToLoad },\r\n          (_, i) => config.lastPage.value + i + 1\r\n        )\r\n\r\n        config.pages.value = [...config.pages.value, ...newPages]\r\n        config.lastPage.value += pagesToLoad\r\n      } finally {\r\n        loading.value = false\r\n      }\r\n    }\r\n\r\n    // 同步滚动处理\r\n    const handleScroll = (event) => {\r\n      if (isScrolling.value) return\r\n\r\n      isScrolling.value = true\r\n      clearTimeout(scrollSyncTimeout.value)\r\n      scrollSyncTimeout.value = setTimeout(() => (isScrolling.value = false), 100)\r\n\r\n      const target = event.target\r\n      const isLeft = target === leftPdf.value\r\n      const otherElement = isLeft ? rightPdf.value : leftPdf.value\r\n\r\n      // 计算滚动比例\r\n      const scrollRatio = target.scrollTop / (target.scrollHeight - target.clientHeight)\r\n      otherElement.scrollTop = scrollRatio * (otherElement.scrollHeight - otherElement.clientHeight)\r\n\r\n      // 触发加载更多\r\n      const threshold = 500\r\n      if (target.scrollHeight - (target.scrollTop + target.clientHeight) < threshold) {\r\n        loadMorePages(isLeft ? 'left' : 'right')\r\n      }\r\n    }\r\n\r\n    onMounted(async () => {\r\n      // 初始化PDF文档\r\n      const [leftPages, rightPages] = await Promise.all([\r\n        initPdf(leftPdfSource.value, leftTotalPages),\r\n        initPdf(rightPdfSource.value, rightTotalPages)\r\n      ])\r\n\r\n      // 初始加载页面\r\n      await Promise.all([\r\n        loadMorePages('left'),\r\n        loadMorePages('right')\r\n      ])\r\n\r\n      // 添加滚动监听\r\n      leftPdf.value?.addEventListener('scroll', handleScroll)\r\n      rightPdf.value?.addEventListener('scroll', handleScroll)\r\n    })\r\n\r\n    onUnmounted(() => {\r\n      leftPdf.value?.removeEventListener('scroll', handleScroll)\r\n      rightPdf.value?.removeEventListener('scroll', handleScroll)\r\n      clearTimeout(scrollSyncTimeout.value)\r\n    })\r\n\r\n    return {\r\n      leftPdfSource,\r\n      leftVisiblePages,\r\n      rightPdfSource,\r\n      rightVisiblePages,\r\n      loading,\r\n      leftPdf,\r\n      rightPdf\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n.dual-pdf-container {\r\n  display: flex;\r\n  height: 100vh;\r\n  background: #f0f0f0;\r\n}\r\n\r\n.pdf-column {\r\n  flex: 1;\r\n  height: 100%;\r\n  overflow-y: auto;\r\n  padding: 20px;\r\n  background: white;\r\n  box-shadow: 0 0 10px rgba(0,0,0,0.1);\r\n}\r\n\r\n.pdf-column:first-child {\r\n  border-right: 1px solid #ddd;\r\n}\r\n\r\n.vue-pdf-embed {\r\n  margin-bottom: 20px;\r\n  border: 1px solid #eee;\r\n}\r\n\r\n.loading {\r\n  position: fixed;\r\n  bottom: 30px;\r\n  left: 50%;\r\n  transform: translateX(-50%);\r\n  background: #2196f3;\r\n  color: white;\r\n  padding: 8px 16px;\r\n  border-radius: 20px;\r\n  font-size: 14px;\r\n  box-shadow: 0 2px 8px rgba(0,0,0,0.1);\r\n}\r\n</style>"],"mappings":";;EACOA,KAAK,EAAC;AAAoB;;EACxBA,KAAK,EAAC,YAAY;EAACC,GAAG,EAAC;;;EAUvBD,KAAK,EAAC,YAAY;EAACC,GAAG,EAAC;;;EAZhCC,GAAA;EAsBwBF,KAAK,EAAC;;;;uBArB5BG,mBAAA,CAsBM,OAtBNC,UAsBM,GArBJC,mBAAA,CAQM,OARNC,UAQM,I,kBAPJH,mBAAA,CAMMI,SAAA,QATZC,WAAA,CAG0BC,MAAA,CAAAC,gBAAgB,EAAxBC,IAAI;yBAAhBR,mBAAA,CAMM;MANiCD,GAAG,YAAYS;QACpDC,YAAA,CAIEC,wBAAA;MAHCC,MAAM,EAAEL,MAAA,CAAAM,aAAa;MACrBJ,IAAI,EAAEA,IAAI;MACVK,UAAQ,EAAAC,MAAA,IAAEC,IAAA,CAAAC,cAAc,SAASR,IAAI;;0DAK5CN,mBAAA,CAQM,OARNe,UAQM,I,kBAPJjB,mBAAA,CAMMI,SAAA,QAnBZC,WAAA,CAa0BC,MAAA,CAAAY,iBAAiB,EAAzBV,IAAI;yBAAhBR,mBAAA,CAMM;MANkCD,GAAG,aAAaS;QACtDC,YAAA,CAIEC,wBAAA;MAHCC,MAAM,EAAEL,MAAA,CAAAa,cAAc;MACtBX,IAAI,EAAEA,IAAI;MACVK,UAAQ,EAAAC,MAAA,IAAEC,IAAA,CAAAC,cAAc,UAAUR,IAAI;;0DAKlCF,MAAA,CAAAc,OAAO,I,cAAlBpB,mBAAA,CAAgD,OAAhDqB,UAAgD,EAAZ,QAAM,KAtB9CC,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}