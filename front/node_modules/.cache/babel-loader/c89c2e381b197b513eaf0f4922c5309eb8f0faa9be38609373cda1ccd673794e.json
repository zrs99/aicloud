{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, vModelSelect as _vModelSelect, withDirectives as _withDirectives, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, vModelCheckbox as _vModelCheckbox, createTextVNode as _createTextVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"upload-container\"\n};\nconst _hoisted_2 = {\n  class: \"language-selector\"\n};\nconst _hoisted_3 = {\n  class: \"upload-area\"\n};\nconst _hoisted_4 = {\n  key: 0,\n  class: \"progress-container\"\n};\nconst _hoisted_5 = [\"value\"];\nconst _hoisted_6 = {\n  class: \"progress-text\"\n};\nconst _hoisted_7 = {\n  key: 1,\n  class: \"download-option\"\n};\nconst _hoisted_8 = {\n  key: 2,\n  class: \"message\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[6] || (_cache[6] = _createElementVNode(\"h1\", {\n    class: \"title\"\n  }, \"文献上传与翻译\", -1 /* HOISTED */)), _createCommentVNode(\" 语言选择 \"), _createElementVNode(\"div\", _hoisted_2, [_cache[3] || (_cache[3] = _createElementVNode(\"label\", null, \"目标语言:\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"select\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.selectedLanguage = $event),\n    class: \"language-dropdown\"\n  }, _cache[2] || (_cache[2] = [_createElementVNode(\"option\", {\n    value: \"zh\"\n  }, \"中文(简体)\", -1 /* HOISTED */), _createElementVNode(\"option\", {\n    value: \"en\"\n  }, \"英语\", -1 /* HOISTED */)]), 512 /* NEED_PATCH */), [[_vModelSelect, $setup.selectedLanguage]])]), _createCommentVNode(\" 文件上传区域 \"), _createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"input\", {\n    type: \"file\",\n    onChange: $setup.handleFileChange,\n    class: \"file-input\"\n  }, null, 32 /* NEED_HYDRATION */), _createElementVNode(\"button\", {\n    onClick: $setup.uploadFile,\n    class: \"upload-button\"\n  }, \"上传并翻译\")]), _createCommentVNode(\" 进度条 \"), $setup.progress > 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, [_cache[4] || (_cache[4] = _createElementVNode(\"label\", null, \"翻译进度:\", -1 /* HOISTED */)), _createElementVNode(\"progress\", {\n    value: $setup.progress,\n    max: \"100\",\n    class: \"progress-bar\"\n  }, null, 8 /* PROPS */, _hoisted_5), _createElementVNode(\"span\", _hoisted_6, _toDisplayString($setup.progress) + \"%\", 1 /* TEXT */)])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" 接收翻译文件选项 \"), $setup.translationComplete ? (_openBlock(), _createElementBlock(\"div\", _hoisted_7, [_createElementVNode(\"label\", null, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"checkbox\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $setup.receiveTranslatedFile = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelCheckbox, $setup.receiveTranslatedFile]]), _cache[5] || (_cache[5] = _createTextVNode(\" 接收翻译后的文件 \"))]), $setup.receiveTranslatedFile ? (_openBlock(), _createElementBlock(\"button\", {\n    key: 0,\n    onClick: $setup.downloadTranslatedFile,\n    class: \"download-button\"\n  }, \" 下载翻译文件 \")) : _createCommentVNode(\"v-if\", true)])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" 消息提示 \"), $setup.message ? (_openBlock(), _createElementBlock(\"p\", _hoisted_8, _toDisplayString($setup.message), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createElementVNode","_createCommentVNode","_hoisted_2","_cache","$event","$setup","selectedLanguage","value","_hoisted_3","type","onChange","handleFileChange","onClick","uploadFile","progress","_hoisted_4","max","_hoisted_5","_hoisted_6","_toDisplayString","translationComplete","_hoisted_7","receiveTranslatedFile","_createTextVNode","downloadTranslatedFile","message","_hoisted_8"],"sources":["D:\\Study\\Code\\AICloud\\front\\src\\components\\FileUpload.vue"],"sourcesContent":["<!--<template>-->\r\n<!--  <div>-->\r\n<!--    <h1>文件上传</h1>-->\r\n<!--    <input type=\"file\" @change=\"handleFileChange\" />-->\r\n<!--    <button @click=\"uploadFile\">上传</button>-->\r\n<!--    <p v-if=\"message\">{{ message }}</p>-->\r\n<!--  </div>-->\r\n<!--</template>-->\r\n\r\n<!--<script setup>-->\r\n<!--import { ref } from 'vue';-->\r\n<!--import axios from 'axios';-->\r\n\r\n<!--// 定义响应式数据-->\r\n<!--const file = ref(null);-->\r\n<!--const message = ref('');-->\r\n\r\n<!--// 处理文件选择-->\r\n<!--const handleFileChange = (event) => {-->\r\n<!--  file.value = event.target.files[0];-->\r\n<!--};-->\r\n\r\n<!--// 上传文件-->\r\n<!--const uploadFile = async () => {-->\r\n<!--  if (!file.value) {-->\r\n<!--    message.value = '请选择一个文件';-->\r\n<!--    return;-->\r\n<!--  }-->\r\n\r\n<!--  const formData = new FormData();-->\r\n<!--  formData.append('file', file.value);-->\r\n<!--  formData.append('title', file.value.name);-->\r\n\r\n<!--  try {-->\r\n<!--    const response = await axios.post('http://127.0.0.1:8000/blogs/upload/', formData, {-->\r\n<!--      headers: {-->\r\n<!--        'Content-Type': 'multipart/form-data',-->\r\n<!--      },-->\r\n<!--      responseType: 'blob', // 接收二进制文件-->\r\n<!--    });-->\r\n\r\n<!--    // 创建下载链接-->\r\n<!--    const url = window.URL.createObjectURL(new Blob([response.data]));-->\r\n<!--    const link = document.createElement('a');-->\r\n<!--    link.href = url;-->\r\n<!--    link.setAttribute('download', file.value.name);-->\r\n<!--    document.body.appendChild(link);-->\r\n<!--    link.click();-->\r\n<!--    document.body.removeChild(link);-->\r\n\r\n<!--    message.value = '文件上传并处理成功！';-->\r\n<!--  } catch (error) {-->\r\n<!--    message.value = '文件上传失败';-->\r\n<!--    console.error('Error uploading file:', error);-->\r\n<!--  }-->\r\n<!--};-->\r\n<!--</script>-->\r\n\r\n<template>\r\n  <div class=\"upload-container\">\r\n    <h1 class=\"title\">文献上传与翻译</h1>\r\n\r\n    <!-- 语言选择 -->\r\n    <div class=\"language-selector\">\r\n      <label>目标语言:</label>\r\n      <select v-model=\"selectedLanguage\" class=\"language-dropdown\">\r\n        <option value=\"zh\">中文(简体)</option>\r\n        <option value=\"en\">英语</option>\r\n      </select>\r\n    </div>\r\n\r\n    <!-- 文件上传区域 -->\r\n    <div class=\"upload-area\">\r\n      <input type=\"file\" @change=\"handleFileChange\" class=\"file-input\" />\r\n      <button @click=\"uploadFile\" class=\"upload-button\">上传并翻译</button>\r\n    </div>\r\n\r\n    <!-- 进度条 -->\r\n    <div v-if=\"progress > 0\" class=\"progress-container\">\r\n      <label>翻译进度:</label>\r\n      <progress :value=\"progress\" max=\"100\" class=\"progress-bar\"></progress>\r\n      <span class=\"progress-text\">{{ progress }}%</span>\r\n    </div>\r\n\r\n    <!-- 接收翻译文件选项 -->\r\n    <div v-if=\"translationComplete\" class=\"download-option\">\r\n      <label>\r\n        <input type=\"checkbox\" v-model=\"receiveTranslatedFile\" />\r\n        接收翻译后的文件\r\n      </label>\r\n      <button v-if=\"receiveTranslatedFile\" @click=\"downloadTranslatedFile\" class=\"download-button\">\r\n        下载翻译文件\r\n      </button>\r\n    </div>\r\n\r\n    <!-- 消息提示 -->\r\n    <p v-if=\"message\" class=\"message\">{{ message }}</p>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref } from 'vue';\r\nimport axios from 'axios';\r\n\r\n// 响应式数据\r\nconst file = ref(null);\r\nconst message = ref('');\r\nconst progress = ref(0);\r\nconst selectedLanguage = ref('zh'); // 默认选择中文\r\nconst translationComplete = ref(false);\r\nconst receiveTranslatedFile = ref(false);\r\nconst translatedFileUrl = ref('');\r\n\r\n// 处理文件选择\r\nconst handleFileChange = (event) => {\r\n  file.value = event.target.files[0];\r\n  message.value = ''; // 清空消息\r\n};\r\n\r\n// 模拟翻译进度（实际应由后端返回）\r\nconst simulateProgress = () => {\r\n  progress.value = 0;\r\n  const interval = setInterval(() => {\r\n    progress.value += 10;\r\n    if (progress.value >= 100) {\r\n      clearInterval(interval);\r\n      translationComplete.value = true;\r\n    }\r\n  }, 500);\r\n};\r\n\r\n// 上传文件并翻译\r\nconst uploadFile = async () => {\r\n  if (!file.value) {\r\n    message.value = '请选择一个文件';\r\n    return;\r\n  }\r\n\r\n  const formData = new FormData();\r\n  formData.append('file', file.value);\r\n  formData.append('language', selectedLanguage.value);\r\n  formData.append('title', file.value.name);\r\n\r\n  try {\r\n    message.value = '正在上传并翻译...';\r\n    simulateProgress(); // 模拟进度\r\n\r\n    const response = await axios.post('http://127.0.0.1:8000/blogs/upload/', formData, {\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data',\r\n      },\r\n      responseType: 'blob', // 接收二进制文件\r\n      // onUploadProgress: (progressEvent) => {\r\n      //   // 实际进度应从后端返回，这里仅模拟\r\n      //   // progress.value = Math.round((progressEvent.loaded / progressEvent.total) * 100);\r\n      // },\r\n    });\r\n\r\n    translatedFileUrl.value = window.URL.createObjectURL(new Blob([response.data]));\r\n    message.value = '翻译完成！';\r\n  } catch (error) {\r\n    message.value = '文件上传或翻译失败';\r\n    console.error('Error uploading file:', error);\r\n    progress.value = 0;\r\n    translationComplete.value = false;\r\n  }\r\n};\r\n\r\n// 下载翻译文件\r\nconst downloadTranslatedFile = () => {\r\n  if (translatedFileUrl.value && receiveTranslatedFile.value) {\r\n    const link = document.createElement('a');\r\n    link.href = translatedFileUrl.value;\r\n    link.setAttribute('download', `translated_${file.value.name}`);\r\n    document.body.appendChild(link);\r\n    link.click();\r\n    document.body.removeChild(link);\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.upload-container {\r\n  max-width: 600px;\r\n  margin: 20px auto;\r\n  padding: 20px;\r\n  background-color: #f9f9f9;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.title {\r\n  text-align: center;\r\n  color: #333;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.language-selector {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.language-dropdown {\r\n  padding: 8px;\r\n  font-size: 16px;\r\n  border: 1px solid #ddd;\r\n  border-radius: 4px;\r\n  width: 100%;\r\n  max-width: 200px;\r\n}\r\n\r\n.upload-area {\r\n  display: flex;\r\n  gap: 10px;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.file-input {\r\n  flex: 1;\r\n  padding: 8px;\r\n  border: 1px solid #ddd;\r\n  border-radius: 4px;\r\n}\r\n\r\n.upload-button {\r\n  padding: 10px 20px;\r\n  background-color: #4CAF50;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n}\r\n\r\n.upload-button:hover {\r\n  background-color: #45a049;\r\n}\r\n\r\n.progress-container {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.progress-bar {\r\n  width: 100%;\r\n  height: 20px;\r\n}\r\n\r\n.progress-text {\r\n  display: block;\r\n  text-align: center;\r\n  margin-top: 5px;\r\n}\r\n\r\n.download-option {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.download-button {\r\n  margin-left: 10px;\r\n  padding: 8px 16px;\r\n  background-color: #2196F3;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n}\r\n\r\n.download-button:hover {\r\n  background-color: #1976D2;\r\n}\r\n\r\n.message {\r\n  text-align: center;\r\n  color: #d32f2f;\r\n  font-weight: bold;\r\n}\r\n</style>"],"mappings":";;EA2DOA,KAAK,EAAC;AAAkB;;EAItBA,KAAK,EAAC;AAAmB;;EASzBA,KAAK,EAAC;AAAa;;EAxE5BC,GAAA;EA8E6BD,KAAK,EAAC;;mBA9EnC;;EAiFYA,KAAK,EAAC;AAAe;;EAjFjCC,GAAA;EAqFoCD,KAAK,EAAC;;;EArF1CC,GAAA;EAgGsBD,KAAK,EAAC;;;uBArC1BE,mBAAA,CAsCM,OAtCNC,UAsCM,G,0BArCJC,mBAAA,CAA8B;IAA1BJ,KAAK,EAAC;EAAO,GAAC,SAAO,sBAEzBK,mBAAA,UAAa,EACbD,mBAAA,CAMM,OANNE,UAMM,G,0BALJF,mBAAA,CAAoB,eAAb,OAAK,sB,gBACZA,mBAAA,CAGS;IApEf,uBAAAG,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAiEuBC,MAAA,CAAAC,gBAAgB,GAAAF,MAAA;IAAER,KAAK,EAAC;gCACvCI,mBAAA,CAAkC;IAA1BO,KAAK,EAAC;EAAI,GAAC,QAAM,qBACzBP,mBAAA,CAA8B;IAAtBO,KAAK,EAAC;EAAI,GAAC,IAAE,oB,2CAFNF,MAAA,CAAAC,gBAAgB,E,KAMnCL,mBAAA,YAAe,EACfD,mBAAA,CAGM,OAHNQ,UAGM,GAFJR,mBAAA,CAAmE;IAA5DS,IAAI,EAAC,MAAM;IAAEC,QAAM,EAAEL,MAAA,CAAAM,gBAAgB;IAAEf,KAAK,EAAC;qCACpDI,mBAAA,CAAgE;IAAvDY,OAAK,EAAEP,MAAA,CAAAQ,UAAU;IAAEjB,KAAK,EAAC;KAAgB,OAAK,E,GAGzDK,mBAAA,SAAY,EACDI,MAAA,CAAAS,QAAQ,Q,cAAnBhB,mBAAA,CAIM,OAJNiB,UAIM,G,0BAHJf,mBAAA,CAAoB,eAAb,OAAK,sBACZA,mBAAA,CAAsE;IAA3DO,KAAK,EAAEF,MAAA,CAAAS,QAAQ;IAAEE,GAAG,EAAC,KAAK;IAACpB,KAAK,EAAC;0BAhFlDqB,UAAA,GAiFMjB,mBAAA,CAAkD,QAAlDkB,UAAkD,EAAAC,gBAAA,CAAnBd,MAAA,CAAAS,QAAQ,IAAG,GAAC,gB,KAjFjDb,mBAAA,gBAoFIA,mBAAA,cAAiB,EACNI,MAAA,CAAAe,mBAAmB,I,cAA9BtB,mBAAA,CAQM,OARNuB,UAQM,GAPJrB,mBAAA,CAGQ,gB,gBAFNA,mBAAA,CAAyD;IAAlDS,IAAI,EAAC,UAAU;IAvF9B,uBAAAN,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAuFwCC,MAAA,CAAAiB,qBAAqB,GAAAlB,MAAA;qDAArBC,MAAA,CAAAiB,qBAAqB,E,6BAvF7DC,gBAAA,CAuFiE,YAE3D,G,GACclB,MAAA,CAAAiB,qBAAqB,I,cAAnCxB,mBAAA,CAES;IA5FfD,GAAA;IA0F4Ce,OAAK,EAAEP,MAAA,CAAAmB,sBAAsB;IAAE5B,KAAK,EAAC;KAAkB,UAE7F,KA5FNK,mBAAA,e,KAAAA,mBAAA,gBA+FIA,mBAAA,UAAa,EACJI,MAAA,CAAAoB,OAAO,I,cAAhB3B,mBAAA,CAAmD,KAAnD4B,UAAmD,EAAAP,gBAAA,CAAdd,MAAA,CAAAoB,OAAO,oBAhGhDxB,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}