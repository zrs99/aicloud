{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.iterator.for-each.js\";\nimport \"core-js/modules/es.iterator.some.js\";\nimport { ref, onMounted, onUnmounted, onErrorCaptured } from 'vue';\nimport * as pdfjsLib from 'pdfjs-dist/build/pdf';\nimport pdfjsWorker from 'pdfjs-dist/build/pdf.worker.min?url';\n\n// 配置PDF.js worker\n\nexport default {\n  __name: 'socketTest',\n  props: {\n    pdfUrl: {\n      type: String,\n      default: \"/IDKL.pdf\",\n      required: true\n    },\n    scale: {\n      type: Number,\n      default: 1.5\n    },\n    bufferPages: {\n      type: Number,\n      default: 2\n    }\n  },\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    pdfjsLib.GlobalWorkerOptions.workerSrc = pdfjsWorker;\n    const props = __props;\n\n    // Refs\n    const scrollContainer = ref(null);\n    const pageCanvases = ref([]);\n    const renderTasks = new Map();\n    const pdfDoc = ref(null);\n    const pageCount = ref(0);\n    const totalHeight = ref(0);\n    const pageDimensions = ref([]);\n    const visiblePages = ref([]);\n    const loading = ref(true);\n    const error = ref(null);\n    const viewportHeight = ref(0);\n\n    // 初始化PDF\n    const initPDF = async () => {\n      try {\n        // 验证PDF文件可访问\n        const fileExists = await verifyPDFAccess(props.pdfUrl);\n        if (!fileExists) throw new Error('PDF文件无法访问');\n\n        // 加载文档\n        const loadingTask = pdfjsLib.getDocument({\n          url: props.pdfUrl,\n          disableAutoFetch: true,\n          disableStream: true\n        });\n        pdfDoc.value = await loadingTask.promise;\n        pageCount.value = pdfDoc.value.numPages;\n        pageCanvases.value = new Array(pageCount.value).fill(null);\n\n        // 计算页面尺寸\n        await calculatePageDimensions();\n        updateVisiblePages();\n      } catch (err) {\n        console.error('PDF初始化失败:', err);\n        error.value = `加载失败: ${err.message}`;\n      } finally {\n        loading.value = false;\n      }\n    };\n\n    // 验证PDF可访问性\n    const verifyPDFAccess = async url => {\n      try {\n        const response = await fetch(url, {\n          method: 'HEAD'\n        });\n        return response.ok;\n      } catch {\n        return false;\n      }\n    };\n\n    // 计算页面尺寸\n    const calculatePageDimensions = async () => {\n      const dimensions = [];\n      let currentOffset = 0;\n      for (let i = 1; i <= pageCount.value; i++) {\n        const page = await pdfDoc.value.getPage(i);\n        const viewport = page.getViewport({\n          scale: props.scale\n        });\n        dimensions.push({\n          pageNumber: i,\n          height: viewport.height,\n          width: viewport.width,\n          offset: currentOffset\n        });\n        currentOffset += viewport.height;\n      }\n      pageDimensions.value = dimensions;\n      totalHeight.value = currentOffset;\n    };\n\n    // 设置Canvas引用\n    const setCanvasRef = (el, pageNumber) => {\n      if (el) {\n        pageCanvases.value[pageNumber - 1] = el;\n        // 立即渲染可见页面\n        if (visiblePages.value.some(p => p.pageNumber === pageNumber)) {\n          renderPage(pageNumber);\n        }\n      }\n    };\n\n    // 渲染页面\n    const renderPage = async pageNumber => {\n      if (!pdfDoc.value || renderTasks.has(pageNumber)) return;\n      try {\n        const page = await pdfDoc.value.getPage(pageNumber);\n        const canvas = pageCanvases.value[pageNumber - 1];\n        if (!canvas) return;\n        const dimension = pageDimensions.value[pageNumber - 1];\n        const viewport = page.getViewport({\n          scale: props.scale\n        });\n\n        // 确保Canvas尺寸正确\n        canvas.width = dimension.width;\n        canvas.height = dimension.height;\n        const task = page.render({\n          canvasContext: canvas.getContext('2d'),\n          viewport: viewport\n        });\n        renderTasks.set(pageNumber, task);\n        await task.promise;\n      } catch (err) {\n        if (err.name !== 'RenderingCancelledException') {\n          console.error(`页面${pageNumber}渲染失败:`, err);\n        }\n      } finally {\n        renderTasks.delete(pageNumber);\n      }\n    };\n\n    // 更新可见页面\n    const updateVisiblePages = () => {\n      if (!scrollContainer.value || pageDimensions.value.length === 0) return;\n      viewportHeight.value = scrollContainer.value.clientHeight;\n      const scrollTop = scrollContainer.value.scrollTop;\n      const bufferHeight = viewportHeight.value * props.bufferPages;\n      const startY = Math.max(0, scrollTop - bufferHeight);\n      const endY = scrollTop + viewportHeight.value + bufferHeight;\n      visiblePages.value = pageDimensions.value.filter(page => page.offset + page.height > startY && page.offset < endY);\n\n      // 批量渲染可见页面\n      visiblePages.value.forEach(page => {\n        if (pageCanvases.value[page.pageNumber - 1]) {\n          renderPage(page.pageNumber);\n        }\n      });\n    };\n\n    // 滚动处理\n    const handleScroll = () => {\n      requestAnimationFrame(updateVisiblePages);\n    };\n\n    // 窗口大小变化处理\n    const handleResize = () => {\n      if (pdfDoc.value) {\n        calculatePageDimensions().then(updateVisiblePages);\n      }\n    };\n\n    // 生命周期\n    onMounted(() => {\n      initPDF();\n      window.addEventListener('resize', handleResize);\n    });\n    onUnmounted(() => {\n      renderTasks.forEach(task => task.cancel());\n      renderTasks.clear();\n      window.removeEventListener('resize', handleResize);\n      if (pdfDoc.value) {\n        pdfDoc.value.destroy();\n        pdfDoc.value = null;\n      }\n    });\n    onErrorCaptured(err => {\n      error.value = `组件错误: ${err.message}`;\n      return false;\n    });\n    const __returned__ = {\n      props,\n      scrollContainer,\n      pageCanvases,\n      renderTasks,\n      pdfDoc,\n      pageCount,\n      totalHeight,\n      pageDimensions,\n      visiblePages,\n      loading,\n      error,\n      viewportHeight,\n      initPDF,\n      verifyPDFAccess,\n      calculatePageDimensions,\n      setCanvasRef,\n      renderPage,\n      updateVisiblePages,\n      handleScroll,\n      handleResize,\n      ref,\n      onMounted,\n      onUnmounted,\n      onErrorCaptured,\n      get pdfjsLib() {\n        return pdfjsLib;\n      },\n      get pdfjsWorker() {\n        return pdfjsWorker;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","onUnmounted","onErrorCaptured","pdfjsLib","pdfjsWorker","GlobalWorkerOptions","workerSrc","props","__props","scrollContainer","pageCanvases","renderTasks","Map","pdfDoc","pageCount","totalHeight","pageDimensions","visiblePages","loading","error","viewportHeight","initPDF","fileExists","verifyPDFAccess","pdfUrl","Error","loadingTask","getDocument","url","disableAutoFetch","disableStream","value","promise","numPages","Array","fill","calculatePageDimensions","updateVisiblePages","err","console","message","response","fetch","method","ok","dimensions","currentOffset","i","page","getPage","viewport","getViewport","scale","push","pageNumber","height","width","offset","setCanvasRef","el","some","p","renderPage","has","canvas","dimension","task","render","canvasContext","getContext","set","name","delete","length","clientHeight","scrollTop","bufferHeight","bufferPages","startY","Math","max","endY","filter","forEach","handleScroll","requestAnimationFrame","handleResize","then","window","addEventListener","cancel","clear","removeEventListener","destroy"],"sources":["D:/Study/Code/AICloud/front/src/components/socketTest.vue"],"sourcesContent":["<template>\r\n  <div class=\"pdf-viewer-container\">\r\n    <div class=\"pdf-scroll-container\" ref=\"scrollContainer\" @scroll=\"handleScroll\">\r\n      <div class=\"pdf-pages-container\" :style=\"{ height: totalHeight + 'px' }\">\r\n        <div\r\n          v-for=\"page in visiblePages\"\r\n          :key=\"page.pageNumber\"\r\n          class=\"pdf-page-container\"\r\n          :style=\"{\r\n            top: page.offset + 'px',\r\n            height: page.height + 'px',\r\n            width: '100%'\r\n          }\"\r\n        >\r\n          <canvas\r\n            :ref=\"el => setCanvasRef(el, page.pageNumber)\"\r\n            :width=\"page.width\"\r\n            :height=\"page.height\"\r\n          ></canvas>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div v-if=\"loading\" class=\"loading-indicator\">加载中...</div>\r\n    <div v-if=\"error\" class=\"error-message\">{{ error }}</div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, onMounted, onUnmounted, onErrorCaptured } from 'vue'\r\nimport * as pdfjsLib from 'pdfjs-dist/build/pdf'\r\nimport pdfjsWorker from 'pdfjs-dist/build/pdf.worker.min?url'\r\n\r\n// 配置PDF.js worker\r\npdfjsLib.GlobalWorkerOptions.workerSrc = pdfjsWorker\r\n\r\nconst props = defineProps({\r\n  pdfUrl: {\r\n    type: String,\r\n    default: \"/IDKL.pdf\",\r\n    required: true\r\n  },\r\n  scale: {\r\n    type: Number,\r\n    default: 1.5\r\n  },\r\n  bufferPages: {\r\n    type: Number,\r\n    default: 2\r\n  }\r\n})\r\n\r\n// Refs\r\nconst scrollContainer = ref(null)\r\nconst pageCanvases = ref([])\r\nconst renderTasks = new Map()\r\nconst pdfDoc = ref(null)\r\nconst pageCount = ref(0)\r\nconst totalHeight = ref(0)\r\nconst pageDimensions = ref([])\r\nconst visiblePages = ref([])\r\nconst loading = ref(true)\r\nconst error = ref(null)\r\nconst viewportHeight = ref(0)\r\n\r\n// 初始化PDF\r\nconst initPDF = async () => {\r\n  try {\r\n    // 验证PDF文件可访问\r\n    const fileExists = await verifyPDFAccess(props.pdfUrl)\r\n    if (!fileExists) throw new Error('PDF文件无法访问')\r\n\r\n    // 加载文档\r\n    const loadingTask = pdfjsLib.getDocument({\r\n      url: props.pdfUrl,\r\n      disableAutoFetch: true,\r\n      disableStream: true\r\n    })\r\n\r\n    pdfDoc.value = await loadingTask.promise\r\n    pageCount.value = pdfDoc.value.numPages\r\n    pageCanvases.value = new Array(pageCount.value).fill(null)\r\n\r\n    // 计算页面尺寸\r\n    await calculatePageDimensions()\r\n    updateVisiblePages()\r\n  } catch (err) {\r\n    console.error('PDF初始化失败:', err)\r\n    error.value = `加载失败: ${err.message}`\r\n  } finally {\r\n    loading.value = false\r\n  }\r\n}\r\n\r\n// 验证PDF可访问性\r\nconst verifyPDFAccess = async (url) => {\r\n  try {\r\n    const response = await fetch(url, { method: 'HEAD' })\r\n    return response.ok\r\n  } catch {\r\n    return false\r\n  }\r\n}\r\n\r\n// 计算页面尺寸\r\nconst calculatePageDimensions = async () => {\r\n  const dimensions = []\r\n  let currentOffset = 0\r\n\r\n  for (let i = 1; i <= pageCount.value; i++) {\r\n    const page = await pdfDoc.value.getPage(i)\r\n    const viewport = page.getViewport({ scale: props.scale })\r\n\r\n    dimensions.push({\r\n      pageNumber: i,\r\n      height: viewport.height,\r\n      width: viewport.width,\r\n      offset: currentOffset\r\n    })\r\n\r\n    currentOffset += viewport.height\r\n  }\r\n\r\n  pageDimensions.value = dimensions\r\n  totalHeight.value = currentOffset\r\n}\r\n\r\n// 设置Canvas引用\r\nconst setCanvasRef = (el, pageNumber) => {\r\n  if (el) {\r\n    pageCanvases.value[pageNumber - 1] = el\r\n    // 立即渲染可见页面\r\n    if (visiblePages.value.some(p => p.pageNumber === pageNumber)) {\r\n      renderPage(pageNumber)\r\n    }\r\n  }\r\n}\r\n\r\n// 渲染页面\r\nconst renderPage = async (pageNumber) => {\r\n  if (!pdfDoc.value || renderTasks.has(pageNumber)) return\r\n\r\n  try {\r\n    const page = await pdfDoc.value.getPage(pageNumber)\r\n    const canvas = pageCanvases.value[pageNumber - 1]\r\n    if (!canvas) return\r\n\r\n    const dimension = pageDimensions.value[pageNumber - 1]\r\n    const viewport = page.getViewport({ scale: props.scale })\r\n\r\n    // 确保Canvas尺寸正确\r\n    canvas.width = dimension.width\r\n    canvas.height = dimension.height\r\n\r\n    const task = page.render({\r\n      canvasContext: canvas.getContext('2d'),\r\n      viewport: viewport\r\n    })\r\n\r\n    renderTasks.set(pageNumber, task)\r\n    await task.promise\r\n  } catch (err) {\r\n    if (err.name !== 'RenderingCancelledException') {\r\n      console.error(`页面${pageNumber}渲染失败:`, err)\r\n    }\r\n  } finally {\r\n    renderTasks.delete(pageNumber)\r\n  }\r\n}\r\n\r\n// 更新可见页面\r\nconst updateVisiblePages = () => {\r\n  if (!scrollContainer.value || pageDimensions.value.length === 0) return\r\n\r\n  viewportHeight.value = scrollContainer.value.clientHeight\r\n  const scrollTop = scrollContainer.value.scrollTop\r\n  const bufferHeight = viewportHeight.value * props.bufferPages\r\n\r\n  const startY = Math.max(0, scrollTop - bufferHeight)\r\n  const endY = scrollTop + viewportHeight.value + bufferHeight\r\n\r\n  visiblePages.value = pageDimensions.value.filter(\r\n    page => page.offset + page.height > startY && page.offset < endY\r\n  )\r\n\r\n  // 批量渲染可见页面\r\n  visiblePages.value.forEach(page => {\r\n    if (pageCanvases.value[page.pageNumber - 1]) {\r\n      renderPage(page.pageNumber)\r\n    }\r\n  })\r\n}\r\n\r\n// 滚动处理\r\nconst handleScroll = () => {\r\n  requestAnimationFrame(updateVisiblePages)\r\n}\r\n\r\n// 窗口大小变化处理\r\nconst handleResize = () => {\r\n  if (pdfDoc.value) {\r\n    calculatePageDimensions().then(updateVisiblePages)\r\n  }\r\n}\r\n\r\n// 生命周期\r\nonMounted(() => {\r\n  initPDF()\r\n  window.addEventListener('resize', handleResize)\r\n})\r\n\r\nonUnmounted(() => {\r\n  renderTasks.forEach(task => task.cancel())\r\n  renderTasks.clear()\r\n  window.removeEventListener('resize', handleResize)\r\n\r\n  if (pdfDoc.value) {\r\n    pdfDoc.value.destroy()\r\n    pdfDoc.value = null\r\n  }\r\n})\r\n\r\nonErrorCaptured((err) => {\r\n  error.value = `组件错误: ${err.message}`\r\n  return false\r\n})\r\n</script>\r\n\r\n<style scoped>\r\n.pdf-viewer-container {\r\n  position: relative;\r\n  width: 100%;\r\n  height: 100vh;\r\n  overflow: hidden;\r\n  background: #f5f5f5;\r\n}\r\n\r\n.pdf-scroll-container {\r\n  width: 100%;\r\n  height: 100%;\r\n  overflow-y: auto;\r\n  position: relative;\r\n}\r\n\r\n.pdf-pages-container {\r\n  position: relative;\r\n  width: 100%;\r\n}\r\n\r\n.pdf-page-container {\r\n  position: absolute;\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n  padding: 20px 0;\r\n  box-sizing: border-box;\r\n}\r\n\r\n.pdf-page-container canvas {\r\n  background: white;\r\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\r\n  max-width: 100%;\r\n}\r\n\r\n.loading-indicator,\r\n.error-message {\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  padding: 12px 24px;\r\n  border-radius: 4px;\r\n  font-size: 16px;\r\n}\r\n\r\n.loading-indicator {\r\n  background: rgba(0, 0, 0, 0.7);\r\n  color: white;\r\n}\r\n\r\n.error-message {\r\n  background: #ffebee;\r\n  color: #c62828;\r\n  border: 1px solid #ef9a9a;\r\n  max-width: 80%;\r\n  text-align: center;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}