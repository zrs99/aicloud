{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  ref: \"pdfContainer\",\n  class: \"pdf-viewer\"\n};\nconst _hoisted_2 = {\n  class: \"controls\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"div\", _hoisted_1, null, 512 /* NEED_PATCH */), _createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"button\", {\n    onClick: $setup.prevPage\n  }, \"上一页\"), _createElementVNode(\"span\", null, \"第 \" + _toDisplayString($setup.currentPage) + \" 页 / 共 \" + _toDisplayString($setup.totalPages) + \" 页\", 1 /* TEXT */), _createElementVNode(\"button\", {\n    onClick: $setup.nextPage\n  }, \"下一页\")])]);\n}","map":{"version":3,"names":["ref","class","_createElementBlock","_createElementVNode","_hoisted_1","_hoisted_2","onClick","$setup","prevPage","_toDisplayString","currentPage","totalPages","nextPage"],"sources":["D:\\Study\\Code\\AICloud\\front\\src\\components\\socketTest.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <div ref=\"pdfContainer\" class=\"pdf-viewer\"></div>\r\n    <div class=\"controls\">\r\n      <button @click=\"prevPage\">上一页</button>\r\n      <span>第 {{ currentPage }} 页 / 共 {{ totalPages }} 页</span>\r\n      <button @click=\"nextPage\">下一页</button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, onMounted } from 'vue';\r\nimport * as pdfjsLib from 'pdfjs-dist/build/pdf';\r\nimport 'pdfjs-dist/web/pdf_viewer.css';\r\n\r\nconst props = defineProps({\r\n  pdfUrl: String // PDF文件URL（支持本地或远程）\r\n});\r\n\r\nconst pdfContainer = ref(null);\r\nconst currentPage = ref(1);\r\nconst totalPages = ref(0);\r\nlet pdfInstance = null;\r\n\r\n// 初始化PDF\r\nconst loadPdf = async () => {\r\n  pdfjsLib.GlobalWorkerOptions.workerSrc =\r\n    'https://cdn.jsdelivr.net/npm/pdfjs-dist@3.4.120/build/pdf.worker.min.js';\r\n\r\n  const loadingTask = pdfjsLib.getDocument(props.pdfUrl);\r\n  pdfInstance = await loadingTask.promise;\r\n  totalPages.value = pdfInstance.numPages;\r\n\r\n  renderPage();\r\n};\r\n\r\n// 渲染当前页\r\nconst renderPage = async () => {\r\n  const page = await pdfInstance.getPage(currentPage.value);\r\n  const viewport = page.getViewport({ scale: 1.5 });\r\n\r\n  const canvas = document.createElement('canvas');\r\n  const context = canvas.getContext('2d');\r\n  canvas.height = viewport.height;\r\n  canvas.width = viewport.width;\r\n\r\n  pdfContainer.value.innerHTML = '';\r\n  pdfContainer.value.appendChild(canvas);\r\n\r\n  await page.render({\r\n    canvasContext: context,\r\n    viewport: viewport\r\n  }).promise;\r\n};\r\n\r\n// 翻页控制\r\nconst prevPage = () => {\r\n  if (currentPage.value > 1) {\r\n    currentPage.value--;\r\n    renderPage();\r\n  }\r\n};\r\n\r\nconst nextPage = () => {\r\n  if (currentPage.value < totalPages.value) {\r\n    currentPage.value++;\r\n    renderPage();\r\n  }\r\n};\r\n\r\nonMounted(loadPdf);\r\n</script>\r\n\r\n<style>\r\n.pdf-viewer {\r\n  border: 1px solid #ccc;\r\n  margin-bottom: 10px;\r\n  overflow: auto;\r\n}\r\n.controls {\r\n  display: flex;\r\n  gap: 10px;\r\n  align-items: center;\r\n}\r\n</style>\r\n"],"mappings":";;EAESA,GAAG,EAAC,cAAc;EAACC,KAAK,EAAC;;;EACzBA,KAAK,EAAC;AAAU;;uBAFvBC,mBAAA,CAOM,cANJC,mBAAA,CAAiD,OAAjDC,UAAiD,+BACjDD,mBAAA,CAIM,OAJNE,UAIM,GAHJF,mBAAA,CAAsC;IAA7BG,OAAK,EAAEC,MAAA,CAAAC;EAAQ,GAAE,KAAG,GAC7BL,mBAAA,CAAyD,cAAnD,IAAE,GAAAM,gBAAA,CAAGF,MAAA,CAAAG,WAAW,IAAG,SAAO,GAAAD,gBAAA,CAAGF,MAAA,CAAAI,UAAU,IAAG,IAAE,iBAClDR,mBAAA,CAAsC;IAA7BG,OAAK,EAAEC,MAAA,CAAAK;EAAQ,GAAE,KAAG,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}