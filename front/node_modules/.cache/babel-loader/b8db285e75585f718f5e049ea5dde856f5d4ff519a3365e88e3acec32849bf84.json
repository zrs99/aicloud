{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, vModelSelect as _vModelSelect, withDirectives as _withDirectives, renderList as _renderList, Fragment as _Fragment, createVNode as _createVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"pdf-comparison-container\"\n};\nconst _hoisted_2 = {\n  class: \"control-panel\"\n};\nconst _hoisted_3 = {\n  class: \"upload-section\"\n};\nconst _hoisted_4 = {\n  class: \"upload-box\"\n};\nconst _hoisted_5 = {\n  for: \"originalPdf\",\n  class: \"upload-label\"\n};\nconst _hoisted_6 = {\n  key: 0\n};\nconst _hoisted_7 = {\n  key: 1\n};\nconst _hoisted_8 = {\n  class: \"language-selector\"\n};\nconst _hoisted_9 = [\"disabled\"];\nconst _hoisted_10 = {\n  key: 0,\n  class: \"message\"\n};\nconst _hoisted_11 = {\n  key: 1,\n  class: \"progress-section\"\n};\nconst _hoisted_12 = {\n  class: \"progress-container\"\n};\nconst _hoisted_13 = [\"value\"];\nconst _hoisted_14 = {\n  class: \"progress-text\"\n};\nconst _hoisted_15 = {\n  key: 0,\n  class: \"pdf-viewer-wrapper\"\n};\nconst _hoisted_16 = {\n  class: \"scroll-container\",\n  ref: \"scrollContainer\"\n};\nconst _hoisted_17 = {\n  class: \"content-wrapper\"\n};\nconst _hoisted_18 = {\n  class: \"pdf-column original-pdf\"\n};\nconst _hoisted_19 = {\n  class: \"pdf-header\"\n};\nconst _hoisted_20 = {\n  class: \"pdf-column translated-pdf\"\n};\nconst _hoisted_21 = {\n  class: \"pdf-header\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createCommentVNode(\" 上传和翻译控制区域 \"), _createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"input\", {\n    type: \"file\",\n    id: \"originalPdf\",\n    accept: \".pdf\",\n    onChange: $setup.handleFileUpload,\n    class: \"file-input\"\n  }, null, 32 /* NEED_HYDRATION */), _createElementVNode(\"label\", _hoisted_5, [!$setup.originalFileName ? (_openBlock(), _createElementBlock(\"span\", _hoisted_6, \"上传PDF文件\")) : (_openBlock(), _createElementBlock(\"span\", _hoisted_7, _toDisplayString($setup.originalFileName), 1 /* TEXT */))])]), _createElementVNode(\"div\", _hoisted_8, [_cache[2] || (_cache[2] = _createElementVNode(\"label\", null, \"目标语言:\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"select\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.selectedLanguage = $event),\n    class: \"language-dropdown\"\n  }, _cache[1] || (_cache[1] = [_createElementVNode(\"option\", {\n    value: \"zh\"\n  }, \"中文(简体)\", -1 /* HOISTED */), _createElementVNode(\"option\", {\n    value: \"en\"\n  }, \"英语\", -1 /* HOISTED */)]), 512 /* NEED_PATCH */), [[_vModelSelect, $setup.selectedLanguage]]), _createElementVNode(\"button\", {\n    onClick: $setup.uploadAndTranslate,\n    class: \"action-button\",\n    disabled: !$setup.originalPdfSource\n  }, \" 翻译文档 \", 8 /* PROPS */, _hoisted_9)])]), $setup.message ? (_openBlock(), _createElementBlock(\"p\", _hoisted_10, _toDisplayString($setup.message), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), $setup.progress > 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_11, [_createElementVNode(\"div\", _hoisted_12, [_cache[3] || (_cache[3] = _createElementVNode(\"label\", null, \"翻译进度:\", -1 /* HOISTED */)), _createElementVNode(\"progress\", {\n    value: $setup.progress,\n    max: \"100\",\n    class: \"progress-bar\"\n  }, null, 8 /* PROPS */, _hoisted_13), _createElementVNode(\"span\", _hoisted_14, _toDisplayString($setup.progress) + \"%\", 1 /* TEXT */)]), $setup.translationComplete ? (_openBlock(), _createElementBlock(\"button\", {\n    key: 0,\n    onClick: $setup.loadTranslatedPdf,\n    class: \"action-button\"\n  }, \" 加载翻译结果 \")) : _createCommentVNode(\"v-if\", true)])) : _createCommentVNode(\"v-if\", true)]), _createCommentVNode(\" PDF对比展示区域 \"), $setup.showPdfViewer ? (_openBlock(), _createElementBlock(\"div\", _hoisted_15, [_createElementVNode(\"div\", _hoisted_16, [_createElementVNode(\"div\", _hoisted_17, [_createCommentVNode(\" 左侧原始PDF \"), _createElementVNode(\"div\", _hoisted_18, [_createElementVNode(\"div\", _hoisted_19, \"原始文档 (共\" + _toDisplayString($setup.originalTotalPages) + \"页)\", 1 /* TEXT */), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.originalVisiblePages, page => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: 'original-' + page\n    }, [_createVNode($setup[\"VuePdfEmbed\"], {\n      source: $setup.originalPdfSource,\n      page: page,\n      onRendered: $event => $setup.onPageRendered('original', page),\n      ref_for: true,\n      ref: \"originalPdfPages\"\n    }, null, 8 /* PROPS */, [\"source\", \"page\", \"onRendered\"])]);\n  }), 128 /* KEYED_FRAGMENT */))]), _createCommentVNode(\" 右侧翻译后PDF \"), _createElementVNode(\"div\", _hoisted_20, [_createElementVNode(\"div\", _hoisted_21, \"翻译结果 (共\" + _toDisplayString($setup.translatedTotalPages) + \"页)\", 1 /* TEXT */), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.translatedVisiblePages, page => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: 'translated-' + page\n    }, [_createVNode($setup[\"VuePdfEmbed\"], {\n      source: $setup.translatedPdfSource,\n      page: page,\n      onRendered: $event => $setup.onPageRendered('translated', page),\n      ref_for: true,\n      ref: \"translatedPdfPages\"\n    }, null, 8 /* PROPS */, [\"source\", \"page\", \"onRendered\"])]);\n  }), 128 /* KEYED_FRAGMENT */))])])], 512 /* NEED_PATCH */)])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["class","for","key","ref","_createElementBlock","_hoisted_1","_createCommentVNode","_createElementVNode","_hoisted_2","_hoisted_3","_hoisted_4","type","id","accept","onChange","$setup","handleFileUpload","_hoisted_5","originalFileName","_hoisted_6","_hoisted_7","_toDisplayString","_hoisted_8","_cache","$event","selectedLanguage","value","onClick","uploadAndTranslate","disabled","originalPdfSource","_hoisted_9","message","_hoisted_10","progress","_hoisted_11","_hoisted_12","max","_hoisted_13","_hoisted_14","translationComplete","loadTranslatedPdf","showPdfViewer","_hoisted_15","_hoisted_16","_hoisted_17","_hoisted_18","_hoisted_19","originalTotalPages","_Fragment","_renderList","originalVisiblePages","page","_createVNode","source","onRendered","onPageRendered","ref_for","_hoisted_20","_hoisted_21","translatedTotalPages","translatedVisiblePages","translatedPdfSource"],"sources":["D:\\Study\\Code\\AICloud\\front\\src\\components\\TestView.vue"],"sourcesContent":["<template>\r\n  <div class=\"pdf-comparison-container\">\r\n    <!-- 上传和翻译控制区域 -->\r\n    <div class=\"control-panel\">\r\n      <div class=\"upload-section\">\r\n        <div class=\"upload-box\">\r\n          <input\r\n            type=\"file\"\r\n            id=\"originalPdf\"\r\n            accept=\".pdf\"\r\n            @change=\"handleFileUpload\"\r\n            class=\"file-input\"\r\n          >\r\n          <label for=\"originalPdf\" class=\"upload-label\">\r\n            <span v-if=\"!originalFileName\">上传PDF文件</span>\r\n            <span v-else>{{ originalFileName }}</span>\r\n          </label>\r\n        </div>\r\n\r\n        <div class=\"language-selector\">\r\n          <label>目标语言:</label>\r\n          <select v-model=\"selectedLanguage\" class=\"language-dropdown\">\r\n            <option value=\"zh\">中文(简体)</option>\r\n            <option value=\"en\">英语</option>\r\n          </select>\r\n          <button\r\n            @click=\"uploadAndTranslate\"\r\n            class=\"action-button\"\r\n            :disabled=\"!originalPdfSource\"\r\n          >\r\n            翻译文档\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <p v-if=\"message\" class=\"message\">{{ message }}</p>\r\n\r\n      <div class=\"progress-section\" v-if=\"progress > 0\">\r\n        <div class=\"progress-container\">\r\n          <label>翻译进度:</label>\r\n          <progress :value=\"progress\" max=\"100\" class=\"progress-bar\"></progress>\r\n          <span class=\"progress-text\">{{ progress }}%</span>\r\n        </div>\r\n        <button\r\n          v-if=\"translationComplete\"\r\n          @click=\"loadTranslatedPdf\"\r\n          class=\"action-button\"\r\n        >\r\n          加载翻译结果\r\n        </button>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- PDF对比展示区域 -->\r\n    <div v-if=\"showPdfViewer\" class=\"pdf-viewer-wrapper\">\r\n      <div class=\"scroll-container\" ref=\"scrollContainer\">\r\n        <div class=\"content-wrapper\">\r\n          <!-- 左侧原始PDF -->\r\n          <div class=\"pdf-column original-pdf\">\r\n            <div class=\"pdf-header\">原始文档 (共{{ originalTotalPages }}页)</div>\r\n            <div v-for=\"page in originalVisiblePages\" :key=\"'original-'+page\">\r\n              <vue-pdf-embed\r\n                :source=\"originalPdfSource\"\r\n                :page=\"page\"\r\n                @rendered=\"onPageRendered('original', page)\"\r\n                ref=\"originalPdfPages\"\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <!-- 右侧翻译后PDF -->\r\n          <div class=\"pdf-column translated-pdf\">\r\n            <div class=\"pdf-header\">翻译结果 (共{{ translatedTotalPages }}页)</div>\r\n            <div v-for=\"page in translatedVisiblePages\" :key=\"'translated-'+page\">\r\n              <vue-pdf-embed\r\n                :source=\"translatedPdfSource\"\r\n                :page=\"page\"\r\n                @rendered=\"onPageRendered('translated', page)\"\r\n                ref=\"translatedPdfPages\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, onMounted, onUnmounted } from 'vue'\r\nimport VuePdfEmbed from 'vue-pdf-embed'\r\nimport axios from 'axios'\r\n// import * as pdfjsLib from 'pdfjs-dist'\r\n// import pdfjsWorker from 'pdfjs-dist/build/pdf.worker.entry'\r\n\r\n// 配置pdf.js worker路径\r\n// pdfjsLib.GlobalWorkerOptions.workerSrc = pdfjsWorker\r\n\r\n// 文件上传相关\r\nconst originalPdfSource = ref(null)\r\nconst originalFileName = ref('')\r\nconst selectedLanguage = ref('zh')\r\n\r\n// 翻译相关\r\nconst translatedPdfSource = ref(null)\r\nconst progress = ref(0)\r\nconst translationComplete = ref(false)\r\nconst taskId = ref(null)\r\nlet ws = null\r\n\r\n// PDF展示相关\r\nconst showPdfViewer = ref(false)\r\nconst originalVisiblePages = ref([])\r\nconst translatedVisiblePages = ref([])\r\nconst originalTotalPages = ref(0)\r\nconst translatedTotalPages = ref(0)\r\n\r\n// DOM引用\r\nconst scrollContainer = ref(null)\r\nconst originalPdfPages = ref([])\r\nconst translatedPdfPages = ref([])\r\nconst message = ref('')\r\n\r\n// 处理文件上传\r\nconst handleFileUpload = async (event) => {\r\n  const file = event.target.files[0]\r\n  if (!file || file.type !== 'application/pdf') {\r\n    alert('请上传有效的PDF文件')\r\n    return\r\n  }\r\n\r\n  originalFileName.value = file.name\r\n  originalPdfSource.value = URL.createObjectURL(file)\r\n  translatedPdfSource.value = null\r\n  showPdfViewer.value = false\r\n  progress.value = 0\r\n  translationComplete.value = false\r\n\r\n  try {\r\n    // 使用pdfjsLib获取PDF页数\r\n    const loadingTask = pdfjsLib.getDocument({\r\n      url: originalPdfSource.value,\r\n      cMapUrl: 'https://cdn.jsdelivr.net/npm/pdfjs-dist@2.16.105/cmaps/',\r\n      cMapPacked: true\r\n    })\r\n    const pdf = await loadingTask.promise\r\n    originalTotalPages.value = pdf.numPages\r\n    originalVisiblePages.value = Array.from({ length: pdf.numPages }, (_, i) => i + 1)\r\n    showPdfViewer.value = true\r\n  } catch (error) {\r\n    console.error('获取PDF页数失败:', error)\r\n    // 默认显示前10页作为fallback\r\n    originalTotalPages.value = 10\r\n    originalVisiblePages.value = Array.from({ length: 10 }, (_, i) => i + 1)\r\n    showPdfViewer.value = true\r\n  }\r\n}\r\n\r\n// 上传并翻译文件\r\nconst uploadAndTranslate = async () => {\r\n  if (!originalPdfSource.value) return\r\n\r\n  try {\r\n    const fileInput = document.getElementById('originalPdf')\r\n    const file = fileInput.files[0]\r\n\r\n    const formData = new FormData()\r\n    formData.append('file', file)\r\n    formData.append('language', selectedLanguage.value)\r\n    formData.append('title', file.name)\r\n\r\n    message.value = '翻译排队中'\r\n    const response = await axios.post('http://10.241.109.58:8000/blogs/upload/', formData, {\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data',\r\n      },\r\n    })\r\n\r\n    taskId.value = response.data.task_id\r\n\r\n    // 建立WebSocket连接监听进度\r\n    ws = new WebSocket(`ws://10.241.109.58:8000/ws/progress/${taskId.value}/`)\r\n\r\n    ws.onopen = () => {\r\n      console.log('WebSocket连接已建立')\r\n      ws.send(JSON.stringify({type: 'init', task_id: taskId.value}))\r\n    }\r\n\r\n    ws.onmessage = (event) => {\r\n      const data = JSON.parse(event.data)\r\n      if (data.progress !== undefined) {\r\n        message.value = ''\r\n        progress.value = data.progress\r\n        if (data.progress >= 100) {\r\n          translationComplete.value = true\r\n        }\r\n      }\r\n    }\r\n\r\n    ws.onerror = (error) => {\r\n      console.error('WebSocket错误:', error)\r\n    }\r\n\r\n    ws.onclose = () => {\r\n      console.log('WebSocket连接已关闭')\r\n    }\r\n\r\n  } catch (error) {\r\n    console.error('文件上传或翻译失败:', error)\r\n  }\r\n}\r\n\r\n// 加载翻译后的PDF\r\nconst loadTranslatedPdf = async () => {\r\n  if (!taskId.value) return\r\n\r\n  try {\r\n    const url = `http://10.241.109.58:8000/blogs/download/${taskId.value}/?t=${Date.now()}`\r\n    translatedPdfSource.value = url\r\n\r\n    // 使用pdfjsLib获取翻译后PDF的页数\r\n    const loadingTask = pdfjsLib.getDocument({\r\n      url: translatedPdfSource.value,\r\n      cMapUrl: 'https://cdn.jsdelivr.net/npm/pdfjs-dist@2.16.105/cmaps/',\r\n      cMapPacked: true\r\n    })\r\n    const pdf = await loadingTask.promise\r\n    translatedTotalPages.value = pdf.numPages\r\n    translatedVisiblePages.value = Array.from({ length: pdf.numPages }, (_, i) => i + 1)\r\n\r\n    showPdfViewer.value = true\r\n  } catch (error) {\r\n    console.error('加载翻译结果失败:', error)\r\n    // 默认显示前10页作为fallback\r\n    translatedTotalPages.value = 10\r\n    translatedVisiblePages.value = Array.from({ length: 10 }, (_, i) => i + 1)\r\n    showPdfViewer.value = true\r\n  }\r\n}\r\n\r\n// 页面渲染回调\r\nconst onPageRendered = (type, page) => {\r\n  console.log(`${type} PDF 第 ${page} 页渲染完成`)\r\n\r\n  // 同步两侧页面高度\r\n  if (originalPdfPages.value[page-1] && translatedPdfPages.value[page-1]) {\r\n    const originalHeight = originalPdfPages.value[page-1].$el.clientHeight\r\n    const translatedHeight = translatedPdfPages.value[page-1].$el.clientHeight\r\n    const maxHeight = Math.max(originalHeight, translatedHeight)\r\n\r\n    originalPdfPages.value[page-1].$el.style.minHeight = `${maxHeight}px`\r\n    translatedPdfPages.value[page-1].$el.style.minHeight = `${maxHeight}px`\r\n  }\r\n}\r\n\r\nonMounted(() => {\r\n  if (scrollContainer.value) {\r\n    scrollContainer.value.addEventListener('scroll', () => {\r\n      // 可以在这里添加滚动事件处理\r\n    })\r\n  }\r\n})\r\n\r\nonUnmounted(() => {\r\n  if (scrollContainer.value) {\r\n    scrollContainer.value.removeEventListener('scroll', () => {})\r\n  }\r\n\r\n  // 释放对象URL\r\n  if (originalPdfSource.value) URL.revokeObjectURL(originalPdfSource.value)\r\n  if (ws) ws.close()\r\n})\r\n</script>\r\n\r\n\r\n<style scoped>\r\n/* 样式保持不变 */\r\n.pdf-comparison-container {\r\n  width: 100%;\r\n  height: 100vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.control-panel {\r\n  padding: 20px;\r\n  background: #f5f5f5;\r\n  border-bottom: 1px solid #ddd;\r\n}\r\n\r\n.upload-section {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 20px;\r\n  margin-bottom: 15px;\r\n}\r\n\r\n.upload-box {\r\n  position: relative;\r\n  width: 200px;\r\n  height: 40px;\r\n}\r\n\r\n.file-input {\r\n  opacity: 0;\r\n  position: absolute;\r\n  width: 100%;\r\n  height: 100%;\r\n  cursor: pointer;\r\n}\r\n\r\n.upload-label {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 100%;\r\n  height: 100%;\r\n  border: 1px dashed #ccc;\r\n  border-radius: 4px;\r\n  background: white;\r\n  transition: all 0.3s;\r\n}\r\n\r\n.upload-label:hover {\r\n  border-color: #409eff;\r\n  background: #f0f7ff;\r\n}\r\n\r\n.language-selector {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 10px;\r\n}\r\n\r\n.language-dropdown {\r\n  padding: 5px;\r\n  border: 1px solid #ddd;\r\n  border-radius: 4px;\r\n}\r\n\r\n.action-button {\r\n  padding: 8px 16px;\r\n  background-color: #4CAF50;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  transition: background-color 0.3s;\r\n}\r\n\r\n.action-button:hover {\r\n  background-color: #45a049;\r\n}\r\n\r\n.action-button:disabled {\r\n  background-color: #cccccc;\r\n  cursor: not-allowed;\r\n}\r\n\r\n.progress-section {\r\n  margin-top: 15px;\r\n}\r\n\r\n.progress-container {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 10px;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.progress-bar {\r\n  flex: 1;\r\n  height: 10px;\r\n}\r\n\r\n.progress-text {\r\n  min-width: 40px;\r\n  text-align: right;\r\n}\r\n\r\n.pdf-viewer-wrapper {\r\n  flex: 1;\r\n  width: 100%;\r\n  overflow: hidden;\r\n}\r\n\r\n.scroll-container {\r\n  width: 100%;\r\n  height: 100%;\r\n  overflow-y: auto;\r\n}\r\n\r\n.content-wrapper {\r\n  display: flex;\r\n  min-height: 100%;\r\n}\r\n\r\n.pdf-column {\r\n  flex: 1;\r\n  padding: 15px;\r\n  box-sizing: border-box;\r\n}\r\n\r\n.pdf-header {\r\n  font-weight: bold;\r\n  margin-bottom: 15px;\r\n  padding-bottom: 5px;\r\n  border-bottom: 1px solid #eee;\r\n}\r\n\r\n.original-pdf {\r\n  border-right: 1px solid #ddd;\r\n}\r\n\r\n.vue-pdf-embed {\r\n  margin-bottom: 20px;\r\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.loading {\r\n  text-align: center;\r\n  padding: 20px;\r\n  color: #666;\r\n  background: #f5f5f5;\r\n  margin-top: 10px;\r\n  border-radius: 4px;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}